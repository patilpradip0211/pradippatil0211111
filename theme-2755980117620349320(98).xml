<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE html>
<html b:css='false' b:defaultwidgetversion='2' b:layoutsVersion='3' b:responsive='true' b:templateVersion='3.1.0' class='light' lang='en' xmlns='http://www.w3.org/1999/xhtml' xmlns:b='http://www.google.com/2005/gml/b' xmlns:data='http://www.google.com/2005/gml/data' xmlns:expr='http://www.google.com/2005/gml/expr'>
<head>
  <meta content='width=device-width, initial-scale=1' name='viewport'/>
  <meta content='IE=edge' http-equiv='X-UA-Compatible'/>
  <b:include data='blog' name='all-head-content'/>
  <title><data:blog.pageTitle/></title>

<link href='https://fonts.googleapis.com' rel='preconnect'/>
<link crossorigin='anonymous' href='https://fonts.gstatic.com' rel='preconnect'/>
<link href='https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&amp;family=Plus+Jakarta+Sans:wght@400;500;600;700&amp;display=swap' rel='stylesheet'/>
<script src='https://cdn.tailwindcss.com'/>
<script>
  tailwind.config = {
    darkMode: &#39;class&#39;,
    theme: {
      extend: {
        fontFamily: {
          sans: [&#39;Inter&#39;, &#39;sans-serif&#39;],
          alt: [&#39;Plus Jakarta Sans&#39;, &#39;sans-serif&#39;]
        }
      }
    }
  };
</script>

  <script type='text/javascript'>
    // Initial theme application to prevent FOUC
    (function() {
      const savedTheme = localStorage.getItem(&#39;theme&#39;);
      const themeToApply = savedTheme || &#39;light&#39;; 
      if (themeToApply === &#39;dark&#39;) {
        document.documentElement.classList.add(&#39;dark&#39;);
      } else {
        document.documentElement.classList.remove(&#39;dark&#39;);
      }
    })();
  </script>

<b:skin version='1.5.0'><![CDATA[
    body {
      /* REMOVED global padding-top. Will be handled by #page-content-wrapper for its fixed header */
      color: #374151; /* approx neutral-700 */
      overflow-x: hidden; /* Prevent horizontal scroll if sidebar transitions are abrupt */
    }
    .dark body {
      color: #d1d5db; /* approx neutral-300 */
    }

    /* Styles for the new fixed left sidebar */
    #page-left-sidebar {
      transform: translateX(-100%); /* Start off-screen for mobile */
      transition: transform 0.3s ease-in-out;
      /* Ensure sidebar is above most content but can be overlaid by modals if needed */
      /* z-index: 40; /* Tailwind z-40 */
    }
    #page-left-sidebar.mobile-active {
      transform: translateX(0);
    }
    @media (min-width: 768px) { /* md breakpoint */
      #page-left-sidebar {
        transform: translateX(0); /* Always visible on desktop */
      }
    }

    #mini-nav {
      /* Tailwind w-16 */
    }

    #main-nav {
      /* Tailwind w-64 when expanded */
      transition: width 0.3s ease-in-out, padding 0.3s ease-in-out; /* Added padding transition */
      overflow-x: hidden; 
    }
    #main-nav.collapsed {
      width: 0rem; /* Collapse to 0 width */
      padding-left: 0rem;
      padding-right: 0rem;
      overflow: hidden;
    }
    #main-nav .original-sidebar-left-content > div > .widget {
        width: 100%; /* Ensure widgets try to use available space */
    }
    #main-nav .original-sidebar-left-content .sidebar-left { /* Target the b:section */
      width:100%!important; 
    }
    #main-nav .widget { 
      @apply w-full; /* General widgets inside main-nav */
    }

/* Custom Scrollbar Styling - Theme Aware */

/* Default (Light Mode) Styles for .custom-scrollbar */
.custom-scrollbar {
  /* For Firefox */
  scrollbar-width: thin;
  scrollbar-color: #A9A9A9 #E5E7EB; /* thumb track - Neutral 400 thumb, Neutral 200 track */
}

/* For WebKit-based browsers (Chrome, Safari, Edge, Opera) */
.custom-scrollbar::-webkit-scrollbar {
  width: 8px;  /* Width of the vertical scrollbar */
  height: 8px; /* Height of the horizontal scrollbar */
}

.custom-scrollbar::-webkit-scrollbar-track {
  background: #E5E7EB; /* Light grey track - e.g., Tailwind neutral-200 */
  border-radius: 10px;
}

.custom-scrollbar::-webkit-scrollbar-thumb {
  background-color: #A9A9A9; /* Medium grey thumb - e.g., Tailwind neutral-400 / dimgray */
  border-radius: 10px;
  /* Optional: border to create a "padding" effect if track and thumb are too similar */
  border: 2px solid #E5E7EB; /* Same as track color for padding */
}

.custom-scrollbar::-webkit-scrollbar-thumb:hover {
  background-color: #6B7280; /* Darker grey thumb on hover - e.g., Tailwind neutral-500 */
}

/* Dark Mode Styles for .custom-scrollbar (when html has class 'dark') */
html.dark .custom-scrollbar {
  /* For Firefox */
  scrollbar-color: #6B7280 #374151; /* thumb track - Neutral 500 thumb, Neutral 700 track */
}

html.dark .custom-scrollbar::-webkit-scrollbar-track {
  background: #374151; /* Darker track for dark mode - e.g., Tailwind neutral-700 or neutral-800 */
}

html.dark .custom-scrollbar::-webkit-scrollbar-thumb {
  background-color: #6B7280; /* Medium grey thumb for dark - e.g., Tailwind neutral-500 */
  border-color: #374151; /* Match track for padding */
}

html.dark .custom-scrollbar::-webkit-scrollbar-thumb:hover {
  background-color: #9CA3AF; /* Lighter grey thumb on hover for dark - e.g., Tailwind neutral-400 */
}
    #page-content-wrapper {
      transition: margin-left 0.3s ease-in-out, padding-top 0.3s ease-in-out; 
      /* padding-top for fixed header is applied by JS */
    }
    
    #page-header {
       /* Tailwind h-16 */
       transition: left 0.3s ease-in-out, width 0.3s ease-in-out;
       /* JS will set left and width for desktop */
    }

    /* Consistent link styling (from your original, kept general rules) */
    .prose a, .widget-content a, .footer-widgets a, 
    .sidebar-right .widget-content a, /* For right sidebar */
    .post-meta-container a:not(button a):not(.btn):not(.button),
    .post-labels-container a, .read-more-link {
      @apply text-indigo-600 dark:text-indigo-400 hover:text-indigo-700 dark:hover:text-indigo-300 hover:underline transition-colors duration-150;
    }
    /* Specific styling for links within the new #main-nav (left sidebar) */
    #main-nav .widget-content a {
       @apply text-neutral-700 dark:text-neutral-300 hover:text-indigo-600 dark:hover:text-indigo-400 hover:underline;
    }
     /* For Profile widget specific links in main-nav */
    #main-nav .Profile .profile-link {
        @apply text-indigo-600 dark:text-indigo-400 hover:underline;
    }
    #main-nav .Profile .profile-name {
        @apply text-sm text-neutral-800 dark:text-neutral-200;
    }


    button a, a.button, a.btn { 
        @apply text-current no-underline hover:no-underline;
    }

    .header-widgets-main .header-widget { margin-bottom: 0; }
    .footer-widget { margin-top: 1rem; }

    .post-body img {
      max-width: 100%;
      height: auto;
      @apply rounded-md my-6 shadow-md;
    }

    /* Smooth load-in for new posts - keep */
    .loading-post-initial { opacity: 0; transform: translateY(20px); transition: opacity 0.5s ease-out, transform 0.5s ease-out; }
    .loaded-post-visible { opacity: 1; transform: translateY(0); }
    
    /* Infinite scroll trigger - keep */
    #infinite-scroll-trigger.loading::before { content: ""; display: inline-block; width: 20px; height: 20px; border: 3px solid rgba(0,0,0,0.2); border-radius: 50%; border-top-color: #4f46e5; animation: spin 1s ease-in-out infinite; margin-right: 10px; vertical-align: middle; }
    .dark #infinite-scroll-trigger.loading::before { border-top-color: #818cf8; }
    @keyframes spin { to { transform: rotate(360deg); } }

    /* Label page header styles */
     /* Label page header styles */
    div#custom-label-header { position: relative; }
    .custom-label-header-background {
        position: absolute; top: 0; left: 0; width: 100%; height: 100%; 
        z-index: 1;
        filter: blur(8px); /* Existing blur effect */
        /* background-size: cover; */ /* Remove/comment out for patterns */
        /* background-position: center; */ /* Remove/comment out for patterns */
        /* background-repeat: no-repeat; */ /* Remove/comment out for patterns */

        /* Defaults for patterns */
        background-repeat: repeat !important; /* Ensure patterns tile */
        background-size: 60px 60px !important; /* Default tile size, can be overridden by specific pattern class */
        /* @apply bg-transparent; */ /* Ensure no conflicting background color if patterns have transparency */
    }
    .custom-label-header-content.text-center {
        position: relative; z-index: 2; padding: 2rem;
        /* UPDATED: Made background opaque, added shadow-xl and rounded-xl for a stronger card look */
        @apply bg-white dark:bg-neutral-800 text-neutral-800 dark:text-neutral-200 shadow-xl rounded-2xl;
        width: 100%; height: 100%; display: flex; flex-direction: column;
        justify-content: center; align-items: center;
        /* You can adjust max-width for the card if needed, e.g., max-w-3xl or max-w-4xl */
        /* For example, to constrain its width more than the overall container: */
        /* max-width: 90%; */ /* Or a fixed value like max-w-4xl */
        /* @media (min-width: 768px) { max-width: 70%; } */
        /* @media (min-width: 1024px) { max-width: 60%; } */
    }

/* --- START: Hero Pattern Definitions --- */
    /* Pattern 1: Intersecting Circles (SVG) */
    .pattern-circles {
      /* Increased fill-opacity to 1.0 (fully opaque color) */
      background-image: url("data:image/svg+xml,%3Csvg width='80' height='80' viewBox='0 0 80 80' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cg fill='%23a0aec0' fill-opacity='1.0'%3E%3Cpath d='M50 50c0-5.523 4.477-10 10-10s10 4.477 10 10-4.477 10-10 10c-5.523 0-10-4.477-10-10zM10 10c0-5.523 4.477-10 10-10s10 4.477 10 10-4.477 10-10 10c-5.523 0-10-4.477-10-10z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E");
      background-size: 80px 80px !important;
    }
    .dark .pattern-circles {
      /* Increased fill-opacity to 1.0 (fully opaque color) */
      background-image: url("data:image/svg+xml,%3Csvg width='80' height='80' viewBox='0 0 80 80' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cg fill='%23718096' fill-opacity='1.0'%3E%3Cpath d='M50 50c0-5.523 4.477-10 10-10s10 4.477 10 10-4.477 10-10 10c-5.523 0-10-4.477-10-10zM10 10c0-5.523 4.477-10 10-10s10 4.477 10 10-4.477 10-10 10c-5.523 0-10-4.477-10-10z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E");
    }

    /* Pattern 2: Tiny Plus Signs (SVG) */
    .pattern-plus-tiny {
      /* Increased fill-opacity to 1.0 */
      background-image: url("data:image/svg+xml,%3Csvg width='20' height='20' viewBox='0 0 20 20' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M8 0v8H0v4h8v8h4v-8h8V8h-8V0H8z' fill='%23a0aec0' fill-opacity='1.0' fill-rule='evenodd'/%3E%3C/svg%3E");
      background-size: 20px 20px !important;
    }
    .dark .pattern-plus-tiny {
      /* Increased fill-opacity to 1.0 */
      background-image: url("data:image/svg+xml,%3Csvg width='20' height='20' viewBox='0 0 20 20' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M8 0v8H0v4h8v8h4v-8h8V8h-8V0H8z' fill='%23718096' fill-opacity='1.0' fill-rule='evenodd'/%3E%3C/svg%3E");
    }

    /* Pattern 3: Diagonal Stripes (CSS Gradient) */
    .pattern-diag-stripes {
      /* Increased alpha to 0.8 */
      background-image: repeating-linear-gradient(-45deg, rgba(160,174,192,0.8), rgba(160,174,192,0.8) 5px, transparent 5px, transparent 15px);
      background-size: 60px 60px !important;
    }
    .dark .pattern-diag-stripes {
      /* Increased alpha to 0.8 */
      background-image: repeating-linear-gradient(-45deg, rgba(113,128,150,0.8), rgba(113,128,150,0.8) 5px, transparent 5px, transparent 15px);
    }

    /* Pattern 4: Polka Dots (CSS Gradient) */
    .pattern-polka-dots {
        /* Increased alpha to 0.9 */
        background-image: radial-gradient(circle, rgba(160,174,192,0.9) 1px, transparent 1.5px);
        background-size: 15px 15px;
    }
    .dark .pattern-polka-dots {
        /* Increased alpha to 0.9 */
        background-image: radial-gradient(circle, rgba(113,128,150,0.9) 1px, transparent 1.5px);
    }
    /* --- END: Hero Pattern Definitions --- */

    /* Comments Styling */
    #comments { font-family: 'Plus Jakarta Sans', sans-serif; color: #1f2937; padding: 1rem; }
    .dark #comments { color: #d1d5db; }
    .comment-thread .comment { background-color: #f3f4f6; border-radius: 1rem; padding: 1rem; margin: 0.5rem 0; box-shadow: 0 1px 3px rgba(0, 0, 0, 0.06); position: relative; transition: background 0.2s ease-in-out; }
    .dark .comment-thread .comment { background-color: #374151; }
    .comment .comment-author { font-weight: 600; color: #111827; margin-bottom: 0.25rem; display: flex; align-items: center; }
    .dark .comment .comment-author { color: #f3f4f6; }
    .comment .comment-author img { border-radius: 9999px; width: 32px; height: 32px; margin-right: 0.5rem; }
    .comment .comment-content { font-size: 0.95rem; color: #374151; line-height: 1.5; }
    .dark .comment .comment-content { color: #d1d5db; }
    .comment .comment-footer { font-size: 0.75rem; color: #6b7280; text-align: right; margin-top: 0.5rem; }
    .dark .comment .comment-footer { color: #9ca3af; }
    .comment-thread .comment .comment { margin-left: 1.5rem; background-color: #e5e7eb; }
    .dark .comment-thread .comment .comment { background-color: #4b5563; }
    .comment-thread .comment:hover { background-color: #e0e7ff; }
    .dark .comment-thread .comment:hover { background-color: #4338ca; }
    #comment-form textarea { font-family: 'Plus Jakarta Sans', sans-serif; border-radius: 0.5rem; border: 1px solid #d1d5db; padding: 0.75rem; width: 100%; background-color: #fff; transition: border-color 0.2s ease-in-out; }
    .dark #comment-form textarea { background-color: #1f2937; border-color: #4b5563; color: #d1d5db; }
    #comment-form textarea:focus { border-color: #6366f1; outline: none; }
    .dark #comment-form textarea:focus { border-color: #818cf8; }
    #comment-form .comment-buttons input[type="submit"] { background-color: #6366f1; color: white; border: none; padding: 0.5rem 1.25rem; border-radius: 0.5rem; font-weight: 500; cursor: pointer; transition: background 0.2s ease-in-out; }
    #comment-form .comment-buttons input[type="submit"]:hover { background-color: #4f46e5; }
    .dark #comment-form .comment-buttons input[type="submit"] { background-color: #818cf8; }
    .dark #comment-form .comment-buttons input[type="submit"]:hover { background-color: #6366f1; }

    /* Footer Widget Styling */
    .footer-main-widgets .widget .title,
    .footer-main-widgets .widget h2 { @apply font-semibold tracking-wide text-sky-400 dark:text-sky-300 mb-3 text-base; }
    .footer-main-widgets .widget ul { @apply mt-2 space-y-2; }
    .footer-main-widgets .widget ul li a,
    .footer-main-widgets .widget .LinkList ul li a { @apply transition-colors duration-300 text-indigo-100 hover:text-sky-300 dark:text-indigo-200 dark:hover:text-sky-200 text-sm; }
    .footer-main-widgets .widget .Text { @apply text-sm text-indigo-100 dark:text-indigo-200; }
    .footer-social-media .widget ul { @apply flex items-center space-x-4 sm:mt-0; }
    .footer-social-media .widget ul li { @apply m-0 p-0; }
    .footer-social-media .widget ul li a { @apply text-indigo-200 hover:text-sky-300 dark:text-indigo-300 dark:hover:text-sky-200; }
    .footer-social-media .widget .title, .footer-social-media .widget h2 { @apply hidden; }
    .footer-social-media .widget svg { @apply h-5 w-5 fill-current; }

    /* Accordion Menu Styles - Minimal Custom CSS */
    #main-nav .widget-content ul .submenu {
      transition: max-height 0.3s ease-in-out, padding-top 0.3s ease-in-out, padding-bottom 0.3s ease-in-out;
      /* max-height will be controlled by JS for open/close */
    }
    /* No need for .submenu.open specific max-height here, JS will handle it with inline style */
    /* Arrow rotation will be handled by a Tailwind class toggled by JS */
body.mobile-sidebar-active {
    overflow: hidden; /* Prevent body scroll when mobile sidebar is active */
}

/* Ensure header image scales down properly on desktop */
#page-header .header-image-wrapper img {
  display: block; /* Important */
  width: auto;    /* Allow width to be automatic */
  height: auto;   /* Maintain aspect ratio */
  max-width: 170px; /* Set the maximum width */
  /* Use your existing max-height from Tailwind if preferred, or set here */
  /* max-height: 32px; /* Example for max-h-8 equivalent if needed */
  /* @media (min-width: 768px) { max-height: 40px; } /* Example for md:max-h-10 */
  object-fit: contain; /* Ensure image is contained */
}

/* Optional: If the wrapper itself is causing issues */
#page-header .header-image-wrapper {
  /* Add styles for the wrapper if needed, e.g. */
  /* display: flex; */
  /* align-items: center; */
  /* height: 100%; */ /* Ensure wrapper takes full header height */
}
  ]]></b:skin>

  <b:template-skin>
    <![CDATA[
    /* Template Skin CSS can be used for more complex CSS not suitable for b:skin or Tailwind. */
    ]]>
  </b:template-skin>
</head>

<body class='font-sans bg-neutral-100 text-neutral-700 dark:bg-neutral-950 dark:text-neutral-300 antialiased'>
<!-- FULL HEIGHT LEFT SIDEBAR (MINI + MAIN COLLAPSIBLE) -->
<div class='fixed top-0 left-0 h-screen z-40 flex bg-white dark:bg-neutral-900 shadow-lg print:hidden' id='page-left-sidebar'>
    <div class='w-16 bg-neutral-100 dark:bg-neutral-800 p-2 py-4 flex flex-col items-center space-y-4 flex-shrink-0 border-r border-neutral-200 dark:border-neutral-700' id='mini-nav'>
      <button aria-label='Toggle main navigation' class='p-2 rounded-full hover:bg-neutral-200 dark:hover:bg-neutral-700 focus:outline-none' id='desktop-main-sidebar-toggle'>
        <svg class='w-6 h-6 text-neutral-700 dark:text-neutral-300' fill='none' stroke='currentColor' viewBox='0 0 24 24'><path d='M4 6h16M4 12h16M4 18h16' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'/></svg>
      </button>
      <div class='flex-grow space-y-3 mt-4 flex flex-col items-center'>
        <a class='block p-2 rounded-md hover:bg-neutral-200 dark:hover:bg-neutral-700' expr:href='data:blog.homepageUrl' title='Dashboard'>
          <svg class='w-6 h-6 text-neutral-600 dark:text-neutral-400' fill='currentColor' viewBox='0 0 20 20'><path d='M10.707 2.293a1 1 0 00-1.414 0l-7 7a1 1 0 001.414 1.414L4 10.414V17a1 1 0 001 1h2a1 1 0 001-1v-2a1 1 0 011-1h2a1 1 0 011 1v2a1 1 0 001 1h2a1 1 0 001-1v-6.586l.293.293a1 1 0 001.414-1.414l-7-7z'/></svg>
        </a>
        <!-- Add more mini-nav icons here as needed -->
         <a class='block p-2 rounded-md hover:bg-neutral-200 dark:hover:bg-neutral-700' href='#' title='Search Placeholder'>
          <svg class='w-6 h-6 text-neutral-600 dark:text-neutral-400' fill='currentColor' viewBox='0 0 20 20' xmlns='http://www.w3.org/2000/svg'><path clip-rule='evenodd' d='M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z' fill-rule='evenodd'/></svg>
        </a>
      </div>
       <div class='mt-auto'>
            <a class='block p-1 rounded-full hover:bg-neutral-200 dark:hover:bg-neutral-700' href='#' title='Profile Placeholder'>
                <img alt='User Avatar' class='w-10 h-10 rounded-full object-cover' src='https://i.pravatar.cc/40?u=blogger-user'/>
            </a>
        </div>
    </div>

<div class='w-64 bg-white dark:bg-neutral-900 p-4 transition-all duration-300 ease-in-out border-l border-neutral-200 dark:border-neutral-700' id='main-nav'>         
  <div class='original-sidebar-left-content h-full flex flex-col'>
             <h2 class='text-lg font-semibold mb-4 text-neutral-800 dark:text-neutral-200 section-title sticky top-0 bg-white dark:bg-neutral-900 py-2 z-10'>Navigation Menu</h2>
         <div class='flex-grow overflow-y-auto custom-scrollbar'>
                <b:section class='sidebar-left flex flex-col space-y-2' id='sidebar-left-mainnav' name='Main Navigation (Sidebar Left)' showaddelement='yes'>
                  <b:widget id='HTML7' locked='false' title='testnav5' type='HTML' visible='true'>
                    <b:widget-settings>
                      <b:widget-setting name='content'><![CDATA[<!-- Inside a widget in #main-nav -->
<ul class="my-accordion-list">
  <li><a href="/parent1">Parent Item 1</a></li>
  <li class="has-submenu">
    <a href="javascript:void(0);" class="submenu-toggle flex justify-between items-center">
      Parent Item 2 (with children) 
      <span class="arrow-icon transform transition-transform duration-300 ease-in-out">▼</span>
    </a>
    <ul class="submenu pl-4 overflow-hidden" style="max-height:0;"> <!-- style="max-height:0;" for initial collapse -->
      <li><a href="/child2-1" class="block py-1.5 px-2 text-sm rounded-md">Child 2.1</a></li>
      <li><a href="/child2-2" class="block py-1.5 px-2 text-sm rounded-md">Child 2.2</a></li>
    </ul>
  </li>
<!-- Inside a widget in #main-nav -->
<ul class="my-accordion-list">
  <li><a href="/parent1">Parent Item 1</a></li>
  <li class="has-submenu">
    <a href="javascript:void(0);" class="submenu-toggle flex justify-between items-center">
      Parent Item 2 (with children) 
      <span class="arrow-icon transform transition-transform duration-300 ease-in-out">▼</span>
    </a>
    <ul class="submenu pl-4 overflow-hidden" style="max-height:0;"> <!-- style="max-height:0;" for initial collapse -->
      <li><a href="/child2-3" class="block py-1.5 px-2 text-sm rounded-md">Child 2.1</a></li>
      <li><a href="/child2-4" class="block py-1.5 px-2 text-sm rounded-md">Child 2.2</a></li>
    </ul>
  </li>
<!-- Inside a widget in #main-nav -->
<ul class="my-accordion-list">
  <li><a href="/parent1">Parent Item 1</a></li>
  <li class="has-submenu">
    <a href="javascript:void(0);" class="submenu-toggle flex justify-between items-center">
      Parent Item 2 (with children) 
      <span class="arrow-icon transform transition-transform duration-300 ease-in-out">▼</span>
    </a>
    <ul class="submenu pl-4 overflow-hidden" style="max-height:0;"> <!-- style="max-height:0;" for initial collapse -->
      <li><a href="/child2-5" class="block py-1.5 px-2 text-sm rounded-md">Child 2.1</a></li>
      <li><a href="/child2-6" class="block py-1.5 px-2 text-sm rounded-md">Child 2.2</a></li>
    </ul>
  </li>
<!-- Inside a widget in #main-nav -->
<ul class="my-accordion-list">
  <li><a href="/parent1">Parent Item 1</a></li>
  <li class="has-submenu">
    <a href="javascript:void(0);" class="submenu-toggle flex justify-between items-center">
      Parent Item 2 (with children) 
      <span class="arrow-icon transform transition-transform duration-300 ease-in-out">▼</span>
    </a>
    <ul class="submenu pl-4 overflow-hidden" style="max-height:0;"> <!-- style="max-height:0;" for initial collapse -->
      <li><a href="/child2-7" class="block py-1.5 px-2 text-sm rounded-md">Child 2.1</a></li>
      <li><a href="/child2-8" class="block py-1.5 px-2 text-sm rounded-md">Child 2.2</a></li>
    </ul>
  </li>
  <!-- More items -->
</ul></ul></ul></ul>]]></b:widget-setting>
                    </b:widget-settings>
                    <b:includable id='main'>
  <b:include name='widget-title'/>
  <div class='widget-content'>
    <data:content/>
  </div>
</b:includable>
                  </b:widget>
                  <b:widget id='HTML6' locked='false' title='test nav 4' type='HTML' visible='true'>
                    <b:widget-settings>
                      <b:widget-setting name='content'><![CDATA[<!-- Inside a widget in #main-nav -->
<ul class="my-accordion-list">
  <li><a href="/parent1">Parent Item 1</a></li>
  <li class="has-submenu">
    <a href="javascript:void(0);" class="submenu-toggle flex justify-between items-center">
      Parent Item 2 (with children) 
      <span class="arrow-icon transform transition-transform duration-300 ease-in-out">▼</span>
    </a>
    <ul class="submenu pl-4 overflow-hidden" style="max-height:0;"> <!-- style="max-height:0;" for initial collapse -->
      <li><a href="/child2-1" class="block py-1.5 px-2 text-sm rounded-md">Child 2.1</a></li>
      <li><a href="/child2-2" class="block py-1.5 px-2 text-sm rounded-md">Child 2.2</a></li>
    </ul>
  </li>
  <!-- More items -->
</ul>]]></b:widget-setting>
                    </b:widget-settings>
                    <b:includable id='main'>
  <b:include name='widget-title'/>
  <div class='widget-content'>
    <data:content/>
  </div>
</b:includable>
                  </b:widget>
                  <b:widget id='HTML5' locked='false' title='test nav 3' type='HTML' visible='true'>
                    <b:widget-settings>
                      <b:widget-setting name='content'><![CDATA[<!-- Inside a widget in #main-nav -->
<ul class="my-accordion-list">
  <li><a href="/parent1">Parent Item 1</a></li>
  <li class="has-submenu">
    <a href="javascript:void(0);" class="submenu-toggle flex justify-between items-center">
      Parent Item 2 (with children) 
      <span class="arrow-icon transform transition-transform duration-300 ease-in-out">▼</span>
    </a>
    <ul class="submenu pl-4 overflow-hidden" style="max-height:0;"> <!-- style="max-height:0;" for initial collapse -->
      <li><a href="/child2-1" class="block py-1.5 px-2 text-sm rounded-md">Child 2.1</a></li>
      <li><a href="/child2-2" class="block py-1.5 px-2 text-sm rounded-md">Child 2.2</a></li>
    </ul>
  </li>
  <!-- More items -->
</ul>]]></b:widget-setting>
                    </b:widget-settings>
                    <b:includable id='main'>
  <b:include name='widget-title'/>
  <div class='widget-content'>
    <data:content/>
  </div>
</b:includable>
                  </b:widget>
                  <b:widget id='HTML4' locked='false' title='testnav2' type='HTML' visible='true'>
                    <b:widget-settings>
                      <b:widget-setting name='content'><![CDATA[<!-- Inside a widget in #main-nav -->
<ul class="my-accordion-list">
  <li><a href="/parent1">Parent Item 1</a></li>
  <li class="has-submenu">
    <a href="javascript:void(0);" class="submenu-toggle flex justify-between items-center">
      Parent Item 2 (with children) 
      <span class="arrow-icon transform transition-transform duration-300 ease-in-out">▼</span>
    </a>
    <ul class="submenu pl-4 overflow-hidden" style="max-height:0;"> <!-- style="max-height:0;" for initial collapse -->
      <li><a href="/child2-1" class="block py-1.5 px-2 text-sm rounded-md">Child 2.1</a></li>
      <li><a href="/child2-2" class="block py-1.5 px-2 text-sm rounded-md">Child 2.2</a></li>
    </ul>
  </li>
  <!-- More items -->
</ul>]]></b:widget-setting>
                    </b:widget-settings>
                    <b:includable id='main'>
  <b:include name='widget-title'/>
  <div class='widget-content'>
    <data:content/>
  </div>
</b:includable>
                  </b:widget>
                  <b:widget id='HTML3' locked='false' title='' type='HTML' visible='true'>
                    <b:widget-settings>
                      <b:widget-setting name='content'><![CDATA[<!-- Inside a widget in #main-nav -->
<ul class="my-accordion-list">
  <li><a href="/parent1">Parent Item 1</a></li>
  <li class="has-submenu">
    <a href="javascript:void(0);" class="submenu-toggle flex justify-between items-center">
      Parent Item 2 (with children) 
      <span class="arrow-icon transform transition-transform duration-300 ease-in-out">▼</span>
    </a>
    <ul class="submenu pl-4 overflow-hidden" style="max-height:0;"> <!-- style="max-height:0;" for initial collapse -->
      <li><a href="/child2-1" class="block py-1.5 px-2 text-sm rounded-md">Child 2.1</a></li>
      <li><a href="/child2-2" class="block py-1.5 px-2 text-sm rounded-md">Child 2.2</a></li>
    </ul>
  </li>
  <!-- More items -->
</ul>]]></b:widget-setting>
                    </b:widget-settings>
                    <b:includable id='main'>
  <b:include name='widget-title'/>
  <div class='widget-content'>
    <data:content/>
  </div>
</b:includable>
                  </b:widget>
                  <b:widget id='Profile1' locked='false' title='About Me' type='Profile' version='2' visible='true'>
                    <b:widget-settings>
                      <b:widget-setting name='showaboutme'>true</b:widget-setting>
                      <b:widget-setting name='showlocation'>false</b:widget-setting>
                    </b:widget-settings>
                    <b:includable id='main' var='this'> <b:include name='widget-title'/> <div class='widget-content'> <b:include name='content'/> </div> </b:includable>
                    <b:includable id='authorProfileImage'> <img class='profile-img rounded-md w-full mb-2 object-cover h-32' expr:alt='data:messages.myPhoto' expr:src='data:authorPhoto.image'/> </b:includable>
                    <b:includable id='content'> <b:if cond='data:team'> <div class='team'> <b:include name='teamProfile'/> </div> <b:else/> <div class='individual'> <b:include name='userProfile'/> </div> </b:if> </b:includable>
                    <b:includable id='defaultProfileImage'> <div class='default-avatar w-full h-32 bg-neutral-200 dark:bg-neutral-700 rounded-md mb-2 flex items-center justify-center text-neutral-500 dark:text-neutral-400'> <svg class='w-12 h-12' fill='currentColor' viewBox='0 0 20 20'><path clip-rule='evenodd' d='M10 9a3 3 0 100-6 3 3 0 000 6zm-7 9a7 7 0 1114 0H3z' fill-rule='evenodd'/></svg> </div> </b:includable>
                    <b:includable id='profileImage'> <b:if cond='data:authorPhoto.image and data:authorPhoto.image != &quot;&quot;'> <b:include name='authorProfileImage'/> <b:else/> <b:include name='defaultProfileImage'/> </b:if> </b:includable>
                    <b:includable id='teamProfile'> <ul> <b:loop values='data:authors' var='author'> <li class='py-1'> <b:include data='author' name='teamProfileLink'/> </li> </b:loop> </ul> </b:includable>
                    <b:includable id='teamProfileLink'> <a class='profile-link g-profile flex items-center space-x-2 p-2 rounded-md hover:bg-neutral-100 dark:hover:bg-neutral-800' expr:href='data:userUrl' rel='nofollow'> <b:include name='profileImage'/> <span class='profile-name text-sm'><data:display-name/></span> </a> </b:includable>
                    <b:includable id='userLocation'> <dd class='profile-data location text-xs text-neutral-500 dark:text-neutral-400 mt-1'><data:location/></dd> </b:includable>
                    <b:includable id='userProfile'> <b:include name='userProfileImage'/> <b:include name='userProfileInfo'/> </b:includable>
                    <b:includable id='userProfileData'> <dt class='profile-data'> <a class='profile-link g-profile text-sm font-medium hover:underline' expr:href='data:userUrl' rel='author nofollow'> <data:displayname/> </a> </dt> </b:includable>
                    <b:includable id='userProfileImage'> <a expr:href='data:userUrl' rel='nofollow'> <b:include name='profileImage'/> </a> </b:includable>
                    <b:includable id='userProfileInfo'> <div class='profile-info mt-1 text-center'> <dl class='profile-datablock'> <b:class cond='data:showlocation and data:location != &quot;&quot;' name='has-location'/> <b:include name='userProfileData'/> <b:include cond='data:showlocation and data:location != &quot;&quot;' name='userLocation'/> <b:include cond='data:aboutme != &quot;&quot;' name='userProfileText'/> </dl> <a class='profile-link block text-xs hover:underline mt-2' expr:href='data:userUrl' rel='author nofollow'> <data:messages.viewMyCompleteProfile/> </a> </div> </b:includable>
                    <b:includable id='userProfileText'> <dd class='profile-textblock text-xs text-neutral-600 dark:text-neutral-300 mt-1 line-clamp-3'> <data:aboutme/> </dd> </b:includable>
                    <b:includable id='viewProfileLink'>
  <a class='profile-link' expr:href='data:userUrl' rel='author nofollow'>
    <data:messages.viewMyCompleteProfile/>
  </a>
</b:includable>
                  </b:widget>
                </b:section>
            </div>
        </div>
    </div>
</div>

<!-- MAIN PAGE CONTENT (Header, Main Content, Footer) -->
<div class='relative min-h-screen bg-neutral-100 dark:bg-neutral-950 print:ml-0' id='page-content-wrapper'> 
<header class='fixed top-0 z-30 bg-white dark:bg-neutral-900 shadow-md py-2 min-h-[4rem] sm:h-16 sm:py-0' id='page-header'>      
  <div class='container mx-auto px-4 h-full'>
        <div class='flex justify-between items-center h-full'>
          <div class='flex items-center'>
            <button aria-label='Toggle mobile menu' class='md:hidden p-2 -ml-2 mr-2 rounded-full hover:bg-neutral-200 dark:hover:bg-neutral-700 focus:outline-none' id='mobile-page-sidebar-toggle'>
              <svg class='w-6 h-6 text-neutral-700 dark:text-neutral-300' fill='none' stroke='currentColor' viewBox='0 0 24 24'><path d='M4 6h16M4 12h16M4 18h16' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'/></svg>
            </button>
            <b:section class='header-widgets-main mt-0 flex items-center' id='header-widgets-main' maxwidgets='1' name='Header Title/Logo (Content Area)' preferred='yes' showaddelement='yes'>
              <b:widget id='Header2' locked='false' title='Blog Add-ons | Blogger Widgets, Templates, Tips &amp;amp; Tricks, Plugins, Gadgets (Header)' type='Header' version='2' visible='true'>
                <b:widget-settings>
                  <b:widget-setting name='displayUrl'>https://blogger.googleusercontent.com/img/a/AVvXsEgjyg4kYpL2FLMA0dGoH20bxkAY4VByZFV6uNajxQVbfM3H1W6iA-u7nS5Z_3HyLWbvltP7R6SLKGDYQWT1Um7lWs3mxp1Tfy0fQSOErbuJnXXp6766syP8lh6abSptujPOGVcM-lNlh_vQ4IPX9DeIZxffuYtSyy4cl0MDYgchCB8MqJxbqEo9j-_RTYAB=s170</b:widget-setting>
                  <b:widget-setting name='displayHeight'>45</b:widget-setting>
                  <b:widget-setting name='sectionWidth'>1630</b:widget-setting>
                  <b:widget-setting name='useImage'>true</b:widget-setting>
                  <b:widget-setting name='shrinkToFit'>true</b:widget-setting>
                  <b:widget-setting name='imagePlacement'>REPLACE</b:widget-setting>
                  <b:widget-setting name='displayWidth'>170</b:widget-setting>
                </b:widget-settings>
                <b:includable id='main' var='this'> 
                  <div class='header-widget'> 
                    <b:include cond='data:imagePlacement in {&quot;REPLACE&quot;, &quot;BEFORE_DESCRIPTION&quot;}' name='image'/> 
                    <b:include cond='data:imagePlacement not in {&quot;REPLACE&quot;, &quot;BEFORE_DESCRIPTION&quot;}' name='title'/> 
                    <b:include cond='data:imagePlacement != &quot;REPLACE&quot;' name='description'/> 
                  </div> <b:include cond='data:imagePlacement == &quot;BEHIND&quot;' name='behindImageStyle'/> 
                </b:includable>
                <b:includable id='behindImageStyle'> 
                  <b:if cond='data:sourceUrl'> <b:include cond='data:this.image' data='{image: data:this.image, selector: &quot;.header-widget&quot;}' name='responsiveImageStyle'/> <style type='text/css'> .header-widget { background-position: <data:blog.locale.languageAlignment/>; background-repeat: no-repeat; background-size: cover; } </style> 
                  </b:if> </b:includable>
                <b:includable id='description'> <p class='text-xs text-neutral-500 dark:text-neutral-400 mt-0.5'> <data:this.description/> </p> 
                </b:includable>
                <b:includable id='image'>
  <a class='header-image-wrapper block' expr:href='data:blog.homepageUrl'>
<b:include data='{image: data:image, altText: data:blog.title.escaped, originalWidth: data:width, originalHeight: data:height, cssClass: &quot;block w-auto h-auto max-w-[170px] max-h-8 md:max-h-10 object-contain&quot;}' name='responsiveImage'/>  </a>
</b:includable>
                <b:includable id='title'> <h1 class='font-alt text-lg sm:text-xl font-bold text-neutral-900 dark:text-neutral-100 leading-tight'> <b:tag cond='data:view.url != data:blog.homepageUrl' expr:href='data:blog.homepageUrl' name='a'> <data:title/> </b:tag> </h1> </b:includable>
              </b:widget>
            </b:section>
          </div>
          <div class='flex items-center'>
            <button aria-label='Toggle Dark Mode' class='p-2 rounded-full hover:bg-neutral-200 dark:hover:bg-neutral-700 focus:outline-none' id='theme-toggle' type='button'>
              <svg class='h-6 w-6 text-neutral-700 dark:hidden' fill='none' id='theme-toggle-dark-icon' stroke='currentColor' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'> <path d='M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'/> </svg>
              <svg class='hidden h-6 w-6 text-yellow-400 dark:block' fill='none' id='theme-toggle-light-icon' stroke='currentColor' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'> <path d='M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'/> </svg>
            </button>
          </div>
        </div>
      </div>
    </header>

    <main class='container mx-auto px-4 pb-8 print:pt-4'> <!-- Removed pt-20, JS will handle padding top -->
      <div class='flex flex-wrap -mx-2'>
        <div class='w-full md:w-9/12 lg:w-9/12 px-2 mb-4 md:mb-0 order-1 md:order-none page-center-column'>
          <b:if cond='data:view.isLabelSearch'>
            <div class='custom-label-header-container mb-10' id='custom-label-header'>
              <div class='custom-label-header-background'/>
              <div class='custom-label-header-content text-center'>
                <h1 class='text-3xl sm:text-4xl md:text-5xl font-bold mb-3 text-neutral-800 dark:text-white' id='custom-label-name'/>
                <div class='inline-block px-3 py-1 text-xs font-medium rounded-full bg-neutral-100 text-neutral-700 border border-neutral-200 mb-4 shadow-sm' id='custom-label-post-count'/>
                <p class='text-base md:text-lg max-w-2xl mx-auto leading-relaxed text-neutral-600 dark:text-white' id='custom-label-description'/>
              </div>
            </div>
          </b:if>
          <div class='bg-white dark:bg-neutral-900 p-4 shadow rounded-lg min-h-[200px]'>
            <b:if cond='data:view.isMultipleItems and !data:view.isPost and !data:view.isPage'>
              <div class='mb-4 flex justify-end hidden md:flex' id='view-toggle-container'>
                <button aria-label='Toggle view mode' class='p-2 rounded-md hover:bg-neutral-200 dark:hover:bg-neutral-700 focus:outline-none' id='view-toggle-button' type='button'>
                  <svg class='h-6 w-6 text-neutral-700 dark:text-neutral-300' fill='none' id='grid-icon' stroke='currentColor' stroke-width='2' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'> <path d='M4 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2V6zM14 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2V6zM4 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2v-2zM14 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2v-2z' stroke-linecap='round' stroke-linejoin='round'/> </svg>
                  <svg class='h-6 w-6 text-neutral-700 dark:text-neutral-300 hidden' fill='none' id='list-icon' stroke='currentColor' stroke-width='2' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'> <path d='M4 6h16M4 10h16M4 14h16M4 18h16' stroke-linecap='round' stroke-linejoin='round'/> </svg>
                </button>
              </div>
            </b:if>
            <b:section class='main-content' id='main-content' name='Main Content (Blog Posts)' preferred='yes' showaddelement='yes'>
              <b:widget id='Blog1' locked='true' title='Blog Posts' type='Blog' version='2' visible='true'>
                <b:widget-settings>
                  <b:widget-setting name='showDateHeader'>false</b:widget-setting>
                  <b:widget-setting name='commentLabel'>Comment</b:widget-setting>
                  <b:widget-setting name='style.textcolor'>#ffffff</b:widget-setting>
                  <b:widget-setting name='showShareButtons'>false</b:widget-setting>
                  <b:widget-setting name='authorLabel'>Published by</b:widget-setting>
                  <b:widget-setting name='showCommentLink'>true</b:widget-setting>
                  <b:widget-setting name='style.urlcolor'>#ffffff</b:widget-setting>
                  <b:widget-setting name='showAuthor'>true</b:widget-setting>
                  <b:widget-setting name='style.linkcolor'>#ffffff</b:widget-setting>
                  <b:widget-setting name='style.unittype'>TextAndImage</b:widget-setting>
                  <b:widget-setting name='style.bgcolor'>#ffffff</b:widget-setting>
                  <b:widget-setting name='timestampLabel'>On</b:widget-setting>
                  <b:widget-setting name='reactionsLabel'/>
                  <b:widget-setting name='showAuthorProfile'>true</b:widget-setting>
                  <b:widget-setting name='style.layout'>1x1</b:widget-setting>
                  <b:widget-setting name='showLabels'>true</b:widget-setting>
                  <b:widget-setting name='showLocation'>false</b:widget-setting>
                  <b:widget-setting name='postLabelsLabel'>in</b:widget-setting>
                  <b:widget-setting name='showTimestamp'>true</b:widget-setting>
                  <b:widget-setting name='postsPerAd'>1</b:widget-setting>
                  <b:widget-setting name='showBacklinks'>false</b:widget-setting>
                  <b:widget-setting name='style.bordercolor'>#ffffff</b:widget-setting>
                  <b:widget-setting name='showInlineAds'>false</b:widget-setting>
                  <b:widget-setting name='showReactions'>false</b:widget-setting>
                </b:widget-settings>
                <b:includable id='main' var='this'>
  <div class='blog-posts hfeed container'>
    <b:loop index='i' values='data:posts' var='post'>
<b:include data='post' name='post'/>    
    </b:loop>
  </div>
  <b:include cond='data:view.isMultipleItems' name='postPagination'/>
  <b:include name='feedLinks'/>
</b:includable>
                <b:includable id='aboutPostAuthor'>
  <div class='author-name'>
    <a class='g-profile' expr:href='data:post.author.profileUrl' rel='author' title='author profile'>
      <span>
        <data:post.author.name/>
      </span>
    </a>
  </div>
  <div>
    <span class='author-desc'>
      <data:post.author.aboutMe/>
    </span>
  </div>
</b:includable>
                <b:includable id='addComments'>
  <a expr:href='data:post.commentsUrl' expr:onclick='data:post.commentsUrlOnclick'>
    <b:message name='messages.postAComment'/>
  </a>
</b:includable>
                <b:includable id='blogThisShare'>
  <b:with value='&quot;window.open(this.href, \&quot;_blank\&quot;, \&quot;height=270,width=475\&quot;); return false;&quot;' var='onclick'>
    <b:include name='platformShare'/>
  </b:with>
</b:includable>
                <b:includable id='bylineByName' var='byline'>
  <b:switch var='data:byline.name'>
  <b:case value='share'/>
    <b:include cond='data:post.shareUrl' name='postShareButtons'/>
  <b:case value='comments'/>
    <b:include cond='data:post.allowComments' name='postCommentsLink'/>
  <b:case value='location'/>
    <b:include cond='data:post.location' name='postLocation'/>
  <b:case value='timestamp'/>
    <b:include cond='not data:view.isPage' name='postTimestamp'/>
  <b:case value='author'/>
    <b:include name='postAuthor'/>
  <b:case value='labels'/>
    <b:include cond='data:post.labels' name='postLabels'/>
  <b:case value='icons'/>
    <b:include cond='data:post.emailPostUrl' name='emailPostIcon'/>
  </b:switch>
</b:includable>
                <b:includable id='bylineRegion' var='regionItems'>
  <b:loop values='data:regionItems' var='byline'>
    <b:include data='byline' name='bylineByName'/>
  </b:loop>
</b:includable>
                <b:includable id='commentAuthorAvatar'>
  <div class='avatar-image-container'>
    <img class='author-avatar' expr:src='data:comment.authorAvatarSrc' height='35' width='35'/>
  </div>
</b:includable>
                <b:includable id='commentDeleteIcon' var='comment'>
  <span expr:class='&quot;item-control &quot; + data:comment.adminClass'>
    <b:if cond='data:showCmtPopup'>
      <div class='goog-toggle-button'>
        <div class='goog-inline-block comment-action-icon'/>
      </div>
    <b:else/>
      <a class='comment-delete' expr:href='data:comment.deleteUrl' expr:title='data:messages.deleteComment'>
        <img src='https://resources.blogblog.com/img/icon_delete13.gif'/>
      </a>
    </b:if>
  </span>
</b:includable>
                <b:includable id='commentForm' var='post'>
  <div class='comment-form'>
    <a name='comment-form'/>
    <h4 id='comment-post-message'><data:messages.postAComment/></h4>
    <b:if cond='data:this.messages.blogComment != &quot;&quot;'>
      <p><data:this.messages.blogComment/></p>
    </b:if>
    <b:include data='post' name='commentFormIframeSrc'/>
    <iframe allowtransparency='allowtransparency' class='blogger-iframe-colorize blogger-comment-from-post' expr:height='data:cmtIframeInitialHeight ?: &quot;90px&quot;' frameborder='0' id='comment-editor' name='comment-editor' src='' width='100%'/>
    <data:post.cmtfpIframe/>
    <script type='text/javascript'>
      BLOG_CMT_createIframe(&#39;<data:post.appRpcRelayPath/>&#39;);
    </script>
  </div>
</b:includable>
                <b:includable id='commentFormIframeSrc' var='post'>
  <a expr:href='data:post.commentFormIframeSrc' id='comment-editor-src'/>
</b:includable>
                <b:includable id='commentItem' var='comment'>
  <div class='comment' expr:id='&quot;c&quot; + data:comment.id'>
    <b:include cond='data:blog.enabledCommentProfileImages' name='commentAuthorAvatar'/>

    <div class='comment-block'>
      <div class='comment-author'>
        <b:if cond='data:comment.authorUrl'>
          <b:message name='messages.authorSaidWithLink'>
            <b:param expr:value='data:comment.author' name='authorName'/>
            <b:param expr:value='data:comment.authorUrl' name='authorUrl'/>
          </b:message>
        <b:else/>
          <b:message name='messages.authorSaid'>
            <b:param expr:value='data:comment.author' name='authorName'/>
          </b:message>
        </b:if>
      </div>
      <div expr:class='&quot;comment-body&quot; + (data:comment.isDeleted ? &quot; deleted&quot; : &quot;&quot;)'>
        <data:comment.body/>
      </div>
      <div class='comment-footer'>
        <span class='comment-timestamp'>
          <a expr:href='data:comment.url' title='comment permalink'>
            <data:comment.timestamp/>
          </a>
          <b:include data='comment' name='commentDeleteIcon'/>
        </span>
      </div>
    </div>
  </div>
</b:includable>
                <b:includable id='commentList' var='comments'>
  <div id='comments-block'>
    <b:loop values='data:comments' var='comment'>
      <b:include data='comment' name='commentItem'/>
    </b:loop>
  </div>
</b:includable>
                <b:includable id='commentPicker' var='post'>
  <b:if cond='data:post.showThreadedComments'>
    <b:include data='post' name='threadedComments'/>
  <b:else/>
    <b:include data='post' name='comments'/>
  </b:if>
</b:includable>
                <b:includable id='comments' var='post'>
  <section expr:class='&quot;comments&quot; + (data:post.embedCommentForm ? &quot; embed&quot; : &quot;&quot;)' expr:data-num-comments='data:post.numberOfComments' id='comments'>
    <a name='comments'/>
    <b:if cond='data:post.allowComments'>

      <b:include name='commentsTitle'/>

      <div expr:id='data:widget.instanceId + &quot;_comments-block-wrapper&quot;'>
        <b:include cond='data:post.comments' data='post.comments' name='commentList'/>
      </div>

      <b:if cond='data:post.commentPagingRequired'>
        <div class='paging-control-container'>
          <b:if cond='data:post.hasOlderLinks'>
            <a expr:class='data:post.oldLinkClass' expr:href='data:post.oldestLinkUrl'>
              <data:messages.oldest/>
            </a>
            <a expr:class='data:post.oldLinkClass' expr:href='data:post.olderLinkUrl'>
              <data:messages.older/>
            </a>
          </b:if>

          <span class='comment-range-text'>
            <data:post.commentRangeText/>
          </span>

          <b:if cond='data:post.hasNewerLinks'>
            <a expr:class='data:post.newLinkClass' expr:href='data:post.newerLinkUrl'>
              <data:messages.newer/>
            </a>
            <a expr:class='data:post.newLinkClass' expr:href='data:post.newestLinkUrl'>
              <data:messages.newest/>
            </a>
          </b:if>
        </div>
      </b:if>

      <div class='footer'>
        <b:if cond='data:post.embedCommentForm'>
          <b:if cond='data:post.allowNewComments'>
            <b:include data='post' name='commentForm'/>
          <b:else/>
            <data:post.noNewCommentsText/>
          </b:if>
        <b:else/>
          <b:if cond='data:post.allowComments'>
            <b:include data='post' name='addComments'/>
          </b:if>
        </b:if>
      </div>
    </b:if>
    <b:if cond='data:showCmtPopup'>
      <div id='comment-popup'>
        <iframe allowtransparency='allowtransparency' frameborder='0' id='comment-actions' name='comment-actions' scrolling='no'>
        </iframe>
      </div>
    </b:if>
  </section>
</b:includable>
                <b:includable id='commentsLink'>
  <a class='comment-link' expr:href='data:post.commentsUrl' expr:onclick='data:post.commentsUrlOnclick'>
    <b:if cond='data:post.numberOfComments &gt; 0'>
      <b:message name='messages.numberOfComments'>
        <b:param expr:value='data:post.numberOfComments' name='numComments'/>
      </b:message>
    <b:else/>
      <data:messages.postAComment/>
    </b:if>
  </a>
</b:includable>
                <b:includable id='commentsLinkIframe'>
  <!-- G+ comments, no longer available. The includable is retained for backwards-compatibility. -->
</b:includable>
                <b:includable id='commentsTitle'>
  <h3 class='title'><data:messages.comments/></h3>
</b:includable>
                <b:includable id='defaultAdUnit'>
  <ins class='adsbygoogle' data-ad-format='auto' expr:data-ad-client='data:adClientId ?: data:blog.adsenseClientId' expr:data-ad-host='data:blog.adsenseHostId' expr:style='data:style ?: &quot;display: block;&quot;'>
    <b:attr cond='not data:blog.analytics4' expr:value='data:blog.analyticsAccountNumber' name='data-analytics-uacct'/>
  </ins>
  <script>
   (adsbygoogle = window.adsbygoogle || []).push({});
  </script>
</b:includable>
                <b:includable id='emailPostIcon'>
  <span class='byline post-icons'>
    <!-- email post links -->
    <span class='item-action'>
      <a expr:href='data:post.emailPostUrl' expr:title='data:messages.emailPost'>
        <b:include data='{ iconClass: &quot;touch-icon sharing-icon&quot; }' name='emailIcon'/>
      </a>
    </span>
  </span>
</b:includable>
                <b:includable id='facebookShare'>
  <b:with value='&quot;window.open(this.href, \&quot;_blank\&quot;, \&quot;height=430,width=640\&quot;); return false;&quot;' var='onclick'>
    <b:include name='platformShare'/>
  </b:with>
</b:includable>
                <b:includable id='feedLinks'>
  <b:if cond='!data:view.isPost'> <!-- Blog feed links -->
    <b:if cond='data:feedLinks'>
      <div class='blog-feeds'>
        <b:include data='feedLinks' name='feedLinksBody'/>
      </div>
    </b:if>
  <b:else/> <!--Post feed links -->
    <div class='post-feeds'>
      <b:loop values='data:posts' var='post'>
        <b:if cond='data:post.allowComments and data:post.feedLinks'>
          <b:include data='post.feedLinks' name='feedLinksBody'/>
        </b:if>
      </b:loop>
    </div>
  </b:if>
</b:includable>
                <b:includable id='feedLinksBody' var='links'>
  <div class='feed-links'>
  <data:messages.subscribeTo/>
  <b:loop values='data:links' var='f'>
     <a class='feed-link' expr:href='data:f.url' expr:type='data:f.mimeType' target='_blank'><data:f.name/> (<data:f.feedType/>)</a>
  </b:loop>
  </div>
</b:includable>
                <b:includable id='footerBylines'>
  <b:if cond='data:widgets.Blog.first.footerBylines'>
    <b:loop index='i' values='data:widgets.Blog.first.footerBylines' var='region'>
      <b:if cond='not data:region.items.empty'>
        <div expr:class='&quot;post-footer-line post-footer-line-&quot; + (data:i + 1)'>
          <b:with value='&quot;footer-&quot; + (data:i + 1)' var='regionName'>
            <b:include data='region.items' name='bylineRegion'/>
          </b:with>
        </div>
      </b:if>
    </b:loop>
  </b:if>
</b:includable>
                <b:includable id='googlePlusShare'>
</b:includable>
                <b:includable id='headerByline'>
  <b:if cond='data:widgets.Blog.first.headerByline'>
    <div class='post-header'>
      <div class='post-header-line-1'>
        <b:with value='&quot;header-1&quot;' var='regionName'>
          <b:include data='data:widgets.Blog.first.headerByline.items' name='bylineRegion'/>
        </b:with>
      </div>
    </div>
  </b:if>
</b:includable>
                <b:includable id='homePageLink'>
  <a class='home-link' expr:href='data:blog.homepageUrl'>
    <data:messages.home/>
  </a>
</b:includable>
                <b:includable id='iframeComments' var='post'>
  <!-- G+ comments, no longer available. The includable is retained for backwards-compatibility. -->
</b:includable>
                <b:includable id='inlineAd' var='post'>
  <b:if cond='!data:view.isPreview'>
    <b:if cond='data:this.adCode or data:this.adClientId or data:blog.adsenseClientId'>
      <!-- Ad -->
      <div class='inline-ad'>
        <b:if cond='data:this.adCode != &quot;&quot;'>
          <data:this.adCode/>
        <b:else/>
          <b:include cond='data:this.adClientId or data:blog.adsenseClientId' name='defaultAdUnit'/>
        </b:if>
      </div>
    </b:if>
  <b:else/>
    <div class='inline-ad'>
      <div class='inline-ad-placeholder'>
        <span><b:message name='messages.adsGoHere'/></span>
      </div>
    </div>
  </b:if>
</b:includable>
                <b:includable id='linkShare'>
  <b:with value='&quot;window.prompt(\&quot;Copy to clipboard: Ctrl+C, Enter\&quot;, \&quot;&quot; + data:originalUrl + &quot;\&quot;); return false;&quot;' var='onclick'>
    <b:include name='platformShare'/>
  </b:with>
</b:includable>
                <b:includable id='nextPageLink'>
  <a class='blog-pager-older-link' expr:href='data:olderPageUrl' expr:id='data:widget.instanceId + &quot;_blog-pager-older-link&quot;' expr:title='data:messages.olderPosts'>
    <data:messages.olderPosts/>
  </a>
</b:includable>
                <b:includable id='otherSharingButton'>
  <span class='sharing-platform-button sharing-element-other' expr:aria-label='data:messages.shareToOtherApps.escaped' expr:data-url='data:originalUrl' expr:title='data:messages.shareToOtherApps.escaped' role='menuitem' tabindex='-1'>
    <b:with value='{key: &quot;sharingOther&quot;}' var='platform'>
      <b:include name='sharingPlatformIcon'/>
    </b:with>
    <span class='platform-sharing-text'><data:messages.shareOtherApps.escaped/></span>
  </span>
</b:includable>
                <b:includable id='platformShare'>
  <a expr:class='&quot;goog-inline-block sharing-&quot; + data:platform.key' expr:data-url='data:originalUrl' expr:href='data:shareUrl + &quot;&amp;target=&quot; + data:platform.target' expr:onclick='data:onclick ? data:onclick : &quot;&quot;' expr:title='data:platform.shareMessage' target='_blank'>
    <span class='share-button-link-text'>
      <data:platform.shareMessage/>
    </span>
  </a>
</b:includable>
                <b:includable id='post' var='post'>
  <!--
    The outer 'article' tag will get classes like 'view-grid-item' or 'view-list-item' from JS.
    Common classes for the card itself are here.
  -->
  <article class='post-item group bg-white dark:bg-neutral-800 shadow-lg rounded-lg overflow-hidden flex flex-col'>
<!-- THUMBNAIL (for multi-item views only) -->
    <b:if cond='!data:view.isSingleItem'>
      <a class='post-thumbnail-link block relative' expr:href='data:post.url'>
        <b:if cond='data:post.featuredImage'>
          <b:comment>Image has a featured image. Now check for srcset.</b:comment>
          <b:if cond='data:post.featuredImage.cssResponsive and data:post.featuredImage.cssResponsive.image_data and data:post.featuredImage.cssResponsive.image_data.srcset != &quot;&quot;'>
            <b:comment>Featured image has srcset data.</b:comment>
            <img class='post-thumbnail w-full object-cover transition-transform duration-300 ease-in-out group-hover:scale-105' expr:alt='data:post.title ? data:post.title : &quot;Post thumbnail&quot;' expr:src='resizeImage(data:post.featuredImage, 720, &quot;16:9&quot;)' expr:srcset='data:post.featuredImage.cssResponsive.image_data.srcset' height='405' loading='lazy' sizes='(max-width: 639px) 90vw, (max-width: 1023px) 45vw, (max-width: 767px) calc(50vw - 2rem), 360px' width='720'/>
          <b:else/>
            <b:comment>Featured image present, but no srcset. Use regular image.</b:comment>
            <img class='post-thumbnail w-full object-cover transition-transform duration-300 ease-in-out group-hover:scale-105' expr:alt='data:post.title ? data:post.title : &quot;Post thumbnail&quot;' expr:src='resizeImage(data:post.featuredImage, 720, &quot;16:9&quot;)' height='405' loading='lazy' width='720'/>
          </b:if>
        <b:else/>
          <b:comment>No featured image. Show placeholder.</b:comment>
          <div class='post-thumbnail w-full bg-neutral-200 dark:bg-neutral-700 flex items-center justify-center text-neutral-400 dark:text-neutral-500 aspect-[16/9]'>
            <svg class='w-16 h-16' fill='currentColor' viewBox='0 0 20 20'><path clip-rule='evenodd' d='M4 3a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V5a2 2 0 00-2-2H4zm12 12H4l4-8 3 6 2-4 3 6z' fill-rule='evenodd'/></svg>
          </div>
        </b:if>
      </a>
    </b:if>
    <!-- END THUMBNAIL -->

    <div class='post-content-wrapper p-4 sm:p-5 flex flex-col flex-grow'>
      <!-- LABELS (for multi-item views only, limit 2) -->
      <b:if cond='data:post.labels and !data:view.isSingleItem and data:post.labels.size &gt; 0'>
<div class='post-labels-and-bookmark-container flex justify-between items-center mb-3'>
          <!-- Labels on the left -->
          <div class='post-labels-container flex flex-wrap gap-2'>
            <b:if cond='data:post.labels and data:post.labels.size &gt; 0'>
              <b:loop index='i' values='data:post.labels limit 2' var='label'>
                <a class='text-xs font-medium px-2.5 py-1 rounded-full bg-indigo-100 text-indigo-700 dark:bg-indigo-700 dark:text-indigo-200 hover:bg-indigo-200 dark:hover:bg-indigo-600 transition-colors' expr:href='data:label.url'>
                  <data:label.name/>
                </a>
              </b:loop>
            <b:else/>
              <!-- Optional: Placeholder if no labels, to maintain alignment with bookmark button -->
              <div class='h-6'/> <!-- Adjust height (h-6 is approx line height of a label button) -->
            </b:if>
          </div>
          <!-- Bookmark button on the right -->
          <button aria-label='Bookmark this post' class='homepage-bookmark-button p-1.5 rounded-full text-neutral-400 hover:text-indigo-500 dark:text-neutral-500 dark:hover:text-indigo-400 focus:outline-none' expr:data-post-id='data:post.id' expr:data-post-title='data:post.title.escaped' expr:data-post-url='data:post.url.canonical' type='button'>
            <svg class='w-5 h-5 homepage-bookmark-svg-element' fill='none' stroke='currentColor' stroke-width='1.5' viewBox='0 0 16 20' xmlns='http://www.w3.org/2000/svg'>
              <path class='homepage-bookmark-svg-path' d='M14 18l-7-5-7 5V2a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2v16z'/>
            </svg>
          </button>
        </div>
      </b:if>
<b:if cond='data:view.isSingleItem'>
        <div class='mb-2 text-sm text-neutral-600 dark:text-neutral-400' id='dynamic-greeting-placeholder'>
          </div>
      </b:if>
      <!-- TITLE -->
      <h3 expr:class='(data:view.isSingleItem ? &quot;text-3xl md:text-4xl&quot; : &quot;text-xl md:text-2xl&quot;) + &quot; font-bold text-neutral-900 dark:text-white mb-3 leading-tight&quot;'>
        <b:if cond='data:post.link or (data:post.url and data:view.url != data:post.url)'>
          <a class='hover:text-indigo-600 dark:hover:text-indigo-400 transition-colors duration-200 line-clamp-3' expr:href='data:post.link ?: data:post.url'>
            <data:post.title/>
          </a>
        <b:else/>
          <span><data:post.title/></span>
        </b:if>
      </h3>
      <!-- POST META HEADER - Author, Dates, Read Time, Actions -->
      <b:if cond='data:view.isSingleItem'>
        <div class='post-meta-container mb-6 mt-4 py-3 border-y border-neutral-200 dark:border-neutral-700 space-y-3'>

          <!-- Line 1: Author Info (Left) and Action Icons (Right) -->
          <div class='post-meta-line-1 flex items-center justify-between'>
            <!-- Author Info - Left Side -->
            <div class='flex items-center'>
              <b:if cond='data:post.author.authorPhoto.image and data:post.author.authorPhoto.image != &quot;&quot;'>
                <div class='h-10 w-10 rounded-full bg-cover bg-center bg-no-repeat flex-shrink-0 mr-3' expr:aria-label='data:post.author.name + &quot; avatar&quot;' expr:style='&quot;background-image: url(&quot; + resizeImage(data:post.author.authorPhoto.image, 48, &quot;1:1&quot;) + &quot;);&quot;'>
                  <!-- Empty div for background image -->
                </div>
              <b:else/>
                <!-- Fallback Avatar if no photo or URL is empty -->
                <span class='inline-flex items-center justify-center h-10 w-10 rounded-full bg-neutral-200 dark:bg-neutral-700 text-neutral-500 dark:text-neutral-300 font-semibold flex-shrink-0 mr-3'>
                  <span class='text-lg'>
                    <b:if cond='data:post.author.name and data:post.author.name != &quot;&quot;'>
                      <b:eval expr='data:post.author.name.substring(0,1).toUpperCase()'/>
                    <b:else/>
                      <!-- Generic User SVG Icon -->
                      <svg class='w-6 h-6' fill='currentColor' viewBox='0 0 20 20' xmlns='http://www.w3.org/2000/svg'><path clip-rule='evenodd' d='M10 9a3 3 0 100-6 3 3 0 000 6zm-7 9a7 7 0 1114 0H3z' fill-rule='evenodd'/></svg>
                    </b:if>
                  </span>
                </span>
              </b:if>
              <div class='text-sm'>
                <span class='text-neutral-500 dark:text-neutral-400'>Published by </span>
                <b:if cond='data:post.author.profileUrl'>
                  <a class='font-medium text-neutral-800 dark:text-neutral-200 hover:underline' expr:href='data:post.author.profileUrl' rel='author'>
                    <data:post.author.name/>
                  </a>
                <b:else/>
                  <span class='font-medium text-neutral-800 dark:text-neutral-200'>
                    <data:post.author.name/>
                  </span>
                </b:if>
              </div>
            </div>
 
            <!-- Action Icons - Right Side (Replace SVGs with your desired icons) -->
            <!-- NEW ACTION ICONS WILL GO IN THIS DIV -->
            <div class='flex items-center space-x-2 md:space-x-3 text-neutral-500 dark:text-neutral-400'>

              <!-- Text Size Control -->
 <div class='relative' expr:id='&quot;text-size-control-wrapper-&quot; + data:post.id'>
                    <button aria-label='Change text size' class='text-size-button p-1.5 rounded-full hover:bg-neutral-100 dark:hover:bg-neutral-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 dark:focus:ring-offset-neutral-800'>
                      <svg class='w-5 h-5' fill='none' stroke='currentColor' stroke-width='1.5' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'>
                        <path d='M12 6H16M20 6H16M16 6V18' stroke-linecap='round' stroke-linejoin='round'/>
                        <path d='M4 11H7M10 11H7M7 11V18' stroke-linecap='round' stroke-linejoin='round'/>
                      </svg>
                    </button>
                    <div class='text-size-options-dropdown absolute right-0 mt-2 w-56 bg-white dark:bg-neutral-800 rounded-md shadow-xl z-20 hidden p-2 border border-neutral-200 dark:border-neutral-700'>
                      <div class='flex justify-between items-center mb-1'>
                        <p class='text-sm font-medium text-neutral-700 dark:text-neutral-200 px-1'>Change font size</p>
                        <!-- CORRECTED close button onclick -->
                        <button class='p-1 rounded-full hover:bg-neutral-200 dark:hover:bg-neutral-600' expr:onclick='&quot;closeParentDropdown(this, \&quot;.text-size-options-dropdown\&quot;)&quot;' type='button'>
                          <svg class='w-4 h-4 text-neutral-500 dark:text-neutral-400' fill='currentColor' viewBox='0 0 20 20'><path clip-rule='evenodd' d='M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z' fill-rule='evenodd'/></svg>
                        </button>
                      </div>
                      <div class='grid grid-cols-3 gap-2'>
                        <button class='flex flex-col items-center p-2 rounded-md hover:bg-neutral-100 dark:hover:bg-neutral-700 text-neutral-600 dark:text-neutral-300' data-size='small'>
                          <svg class='w-6 h-6 mb-1' fill='currentColor' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'><path d='M17,6H7A1,1,0,0,0,7,8h4v9a1,1,0,0,0,2,0V8h4a1,1,0,0,0,0-2Z'/></svg>
                          <span class='text-xs'>Small</span>
                        </button>
                        <button class='flex flex-col items-center p-2 rounded-md hover:bg-neutral-100 dark:hover:bg-neutral-700 text-neutral-600 dark:text-neutral-300' data-size='default'>
                          <svg class='w-8 h-8 mb-1' fill='currentColor' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'><path d='M17,6H7A1,1,0,0,0,7,8h4v9a1,1,0,0,0,2,0V8h4a1,1,0,0,0,0-2Z'/></svg>
                          <span class='text-sm'>Default</span>
                        </button>
                        <button class='flex flex-col items-center p-2 rounded-md hover:bg-neutral-100 dark:hover:bg-neutral-700 text-neutral-600 dark:text-neutral-300' data-size='large'>
                          <svg class='w-10 h-10 mb-1' fill='currentColor' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'><path d='M17,6H7A1,1,0,0,0,7,8h4v9a1,1,0,0,0,2,0V8h4a1,1,0,0,0,0-2Z'/></svg>
                          <span class='text-base'>Large</span>
                        </button>
                      </div>
                    </div>
                  </div>
<!-- Comment Link Icon -->
  <a aria-label='View comments' class='p-1.5 rounded-full hover:bg-neutral-100 dark:hover:bg-neutral-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 dark:focus:ring-offset-neutral-800' expr:href='data:post.url + &quot;#comments&quot;' title='View Comments'>
    <svg class='w-5 h-5' fill='currentColor' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'>
        <path d='M7 7h10v2H7zm0 4h7v2H7z'/>
        <path d='M20 2H4c-1.103 0-2 .897-2 2v18l5.333-4H20c1.103 0 2-.897 2-2V4c0-1.103-.897-2-2-2zm0 14H6.667L4 18V4h16v12z'/>
    </svg>
  </a>
  
  <!-- Bookmark Post Icon -->
  <button aria-label='Bookmark this post' class='post-meta-bookmark-button p-1.5 rounded-full hover:bg-neutral-100 dark:hover:bg-neutral-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 dark:focus:ring-offset-neutral-800' expr:data-post-id='data:post.id' expr:data-post-title='data:post.title.escaped' expr:data-post-url='data:post.url.canonical' type='button'>
        <!-- MODIFIED SVG: Added a class to the SVG itself -->
        <svg class='w-5 h-5 bookmark-svg-element' fill='none' stroke='currentColor' stroke-width='1.5' viewBox='0 0 16 20' xmlns='http://www.w3.org/2000/svg'>
          <path class='bookmark-svg-path' d='M14 18l-7-5-7 5V2a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2v16z'/>
        </svg>
      </button>
              <!-- NEW: Share Post Icon and Dropdown -->
  <div class='relative share-icon-wrapper'>
    <button aria-label='Share this post' class='custom-share-trigger p-1.5 rounded-full hover:bg-neutral-100 dark:hover:bg-neutral-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 dark:focus:ring-offset-neutral-800' expr:data-title='data:post.title.escaped' expr:data-url='data:post.url.canonical' type='button'>
      <svg class='w-5 h-5' fill='currentColor' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'>
        <path d='M18,14a4,4,0,0,0-3.08,1.48l-5.1-2.35a3.64,3.64,0,0,0,0-2.26l5.1-2.35A4,4,0,1,0,14,6a4.17,4.17,0,0,0,.07.71L8.79,9.14a4,4,0,1,0,0,5.72l5.28,2.43A4.17,4.17,0,0,0,14,18a4,4,0,1,0,4-4ZM18,4a2,2,0,1,1-2,2A2,2,0,0,1,18,4ZM6,14a2,2,0,1,1,2-2A2,2,0,0,1,6,14Zm12,6a2,2,0,1,1,2-2A2,2,0,0,1,18,20Z'/>
      </svg>
    </button>
    <div class='share-options-dropdown absolute right-0 mt-2 w-64 bg-white dark:bg-neutral-800 rounded-lg shadow-xl z-20 hidden p-3 border border-neutral-200 dark:border-neutral-700' expr:id='&quot;share-options-dropdown-&quot; + data:post.id'>
      <div class='flex justify-between items-center mb-2'>
        <p class='text-sm font-medium text-neutral-700 dark:text-neutral-200'>Share to other apps</p>
        <button class='p-1 rounded-full hover:bg-neutral-200 dark:hover:bg-neutral-600' expr:onclick='&quot;closeParentDropdown(this, \&quot;.share-options-dropdown\&quot;)&quot;' type='button'>
          <svg class='w-4 h-4 text-neutral-500 dark:text-neutral-400' fill='currentColor' viewBox='0 0 20 20'><path clip-rule='evenodd' d='M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z'/></svg>
        </button>
      </div>
      <!-- Post Preview -->
      <div class='flex items-start space-x-3 mb-4 p-2 bg-neutral-50 dark:bg-neutral-700/50 rounded-md'>
        <b:if cond='data:post.featuredImage'>
            <img class='w-16 h-16 object-cover rounded' expr:alt='data:post.title.escaped' expr:src='resizeImage(data:post.featuredImage, 100, &quot;1:1&quot;)'/>
        <b:else/>
            <div class='w-16 h-16 bg-neutral-200 dark:bg-neutral-600 rounded flex items-center justify-center text-neutral-400 dark:text-neutral-500'>
               <svg class='w-8 h-8' fill='currentColor' viewBox='0 0 20 20'><path clip-rule='evenodd' d='M4 3a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V5a2 2 0 00-2-2H4zm12 12H4l4-8 3 6 2-4 3 6z' fill-rule='evenodd'/></svg>
            </div>
        </b:if>
        <div>
            <h4 class='text-xs font-semibold text-neutral-800 dark:text-neutral-100 line-clamp-2 leading-tight'><data:post.title/></h4>
            <b:if cond='data:post.labels and data:post.labels.first'>
                <p class='text-xs text-neutral-500 dark:text-neutral-400 mt-0.5'><data:post.labels.first.name/></p>
            </b:if>
        </div>
      </div>

      <ul class='grid grid-cols-4 gap-2 mb-3 text-center'> <!-- Changed to grid-cols-4 for more icons -->
        <li><a class='flex flex-col items-center py-2 text-xs text-neutral-600 dark:text-neutral-300 hover:bg-neutral-100 dark:hover:bg-neutral-700 rounded-md' expr:href='&quot;https://www.facebook.com/sharer/sharer.php?u=&quot; + data:post.url.canonical.escaped' target='_blank' title='Share on Facebook'>
            <svg class='w-7 h-7 mb-1' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'><path d='M9.94474914,22 L9.94474914,13.1657526 L7,13.1657526 L7,9.48481614 L9.94474914,9.48481614 L9.94474914,6.54006699 C9.94474914,3.49740494 11.8713513,2 14.5856738,2 C15.8857805,2 17.0033128,2.09717672 17.3287076,2.13987558 L17.3287076,5.32020466 L15.4462767,5.32094085 C13.9702212,5.32094085 13.6256856,6.02252733 13.6256856,7.05171716 L13.6256856,9.48481614 L17.306622,9.48481614 L16.5704347,13.1657526 L13.6256856,13.1657526 L13.6845806,22' fill='#3B5998' fill-rule='evenodd'/></svg>Facebook</a></li>
                    <li><a class='flex flex-col items-center py-2 text-xs text-neutral-600 dark:text-neutral-300 hover:bg-neutral-100 dark:hover:bg-neutral-700 rounded-md' data-action='share/whatsapp/share' expr:href='&quot;https://api.whatsapp.com/send?text=&quot; + data:post.title.escaped + &quot;%20&quot; + data:post.url.canonical.escaped' target='_blank' title='Share on WhatsApp'>
                <!-- NEW WHATSAPP SVG -->
                <svg class='w-7 h-7 mb-1' data-name='Layer 1' id='Layer_1' viewBox='0 0 240 241.19' xmlns='http://www.w3.org/2000/svg'>
                  <defs><style>.cls-1{fill:#25d366;fill-rule:evenodd;}</style></defs>
                  <title>whatsapp-color</title>
                  <path class='cls-1' d='M205,35.05A118.61,118.61,0,0,0,120.46,0C54.6,0,1,53.61,1,119.51a119.5,119.5,0,0,0,16,59.74L0,241.19l63.36-16.63a119.43,119.43,0,0,0,57.08,14.57h0A119.54,119.54,0,0,0,205,35.07v0ZM120.5,219A99.18,99.18,0,0,1,69.91,205.1l-3.64-2.17-37.6,9.85,10-36.65-2.35-3.76A99.37,99.37,0,0,1,190.79,49.27,99.43,99.43,0,0,1,120.49,219ZM175,144.54c-3-1.51-17.67-8.71-20.39-9.71s-4.72-1.51-6.75,1.51-7.72,9.71-9.46,11.72-3.49,2.27-6.45.76-12.63-4.66-24-14.84A91.1,91.1,0,0,1,91.25,113.3c-1.75-3-.19-4.61,1.33-6.07s3-3.48,4.47-5.23a19.65,19.65,0,0,0,3-5,5.51,5.51,0,0,0-.24-5.23C99,90.27,93,75.57,90.6,69.58s-4.89-5-6.73-5.14-3.73-.09-5.7-.09a11,11,0,0,0-8,3.73C67.48,71.05,59.75,78.3,59.75,93s10.69,28.88,12.19,30.9S93,156.07,123,169c7.12,3.06,12.68,4.9,17,6.32a41.18,41.18,0,0,0,18.8,1.17c5.74-.84,17.66-7.21,20.17-14.18s2.5-13,1.75-14.19-2.69-2.06-5.7-3.59l0,0Z'/>
                </svg>WhatsApp</a></li>
        <li><a class='flex flex-col items-center py-2 text-xs text-neutral-600 dark:text-neutral-300 hover:bg-neutral-100 dark:hover:bg-neutral-700 rounded-md' expr:href='&quot;https://twitter.com/intent/tweet?url=&quot; + data:post.url.canonical.escaped + &quot;&amp;text=&quot; + data:post.title.escaped' target='_blank' title='Share on X/Twitter'>
            <svg class='w-7 h-7 mb-1' viewBox='0 0 50 50' xmlns='http://www.w3.org/2000/svg'><path class='text-neutral-800 dark:text-neutral-200' d='M 5.9199219 6 L 20.582031 27.375 L 6.2304688 44 L 9.4101562 44 L 21.986328 29.421875 L 31.986328 44 L 44 44 L 28.681641 21.669922 L 42.199219 6 L 39.029297 6 L 27.275391 19.617188 L 17.933594 6 L 5.9199219 6 z M 9.7167969 8 L 16.880859 8 L 40.203125 42 L 33.039062 42 L 9.7167969 8 z' fill='currentColor'/></svg>X/Twitter</a></li>
        <li><a class='flex flex-col items-center py-2 text-xs text-neutral-600 dark:text-neutral-300 hover:bg-neutral-100 dark:hover:bg-neutral-700 rounded-md' expr:href='&quot;https://t.me/share/url?url=&quot; + data:post.url.canonical.escaped + &quot;&amp;text=&quot; + data:post.title.escaped' target='_blank' title='Share on Telegram'>
            <svg class='w-7 h-7 mb-1' viewBox='0 0 100 100' xmlns='http://www.w3.org/2000/svg'><path d='M88.723,12.142C76.419,17.238,23.661,39.091,9.084,45.047c-9.776,3.815-4.053,7.392-4.053,7.392s8.345,2.861,15.499,5.007c7.153,2.146,10.968-0.238,10.968-0.238l33.62-22.652c11.922-8.107,9.061-1.431,6.199,1.431c-6.199,6.2-16.452,15.975-25.036,23.844c-3.815,3.338-1.908,6.199-0.238,7.63c6.199,5.246,23.129,15.976,24.082,16.691c5.037,3.566,14.945,8.699,16.452-2.146c0,0,5.961-37.435,5.961-37.435c1.908-12.637,3.815-24.321,4.053-27.659C97.307,8.804,88.723,12.142,88.723,12.142z' fill='#1B92D1'/></svg>Telegram</a></li>
        <li><a class='flex flex-col items-center py-2 text-xs text-neutral-600 dark:text-neutral-300 hover:bg-neutral-100 dark:hover:bg-neutral-700 rounded-md' expr:href='&quot;https://pinterest.com/pin/create/button/?url=&quot; + data:post.url.canonical.escaped + &quot;&amp;media=&quot; + (data:post.featuredImage.isResizable ? resizeImage(data:post.featuredImage, 800) : &quot;&quot;) + &quot;&amp;description=&quot; + data:post.title.escaped' target='_blank' title='Share on Pinterest'>
                <svg class='w-7 h-7 mb-1' viewBox='0 0 48 48' xmlns='http://www.w3.org/2000/svg'>
                  <circle cx='24' cy='24' fill='#E60023' r='20'/>
                  <path d='M24.4439087,11.4161377c-8.6323242,0-13.2153931,5.7946167-13.2153931,12.1030884 c0,2.9338379,1.5615234,6.5853882,4.0599976,7.7484131c0.378418,0.1762085,0.581543,0.1000366,0.668457-0.2669067 c0.0668945-0.2784424,0.4038086-1.6369019,0.5553589-2.2684326c0.0484619-0.2015381,0.0246582-0.3746338-0.1384277-0.5731201 c-0.8269653-1.0030518-1.4884644-2.8461304-1.4884644-4.5645752c0-4.4115601,3.3399658-8.6799927,9.0299683-8.6799927 c4.9130859,0,8.3530884,3.3484497,8.3530884,8.1369019c0,5.4099731-2.7322998,9.1584473-6.2869263,9.1584473 c-1.9630737,0-3.4330444-1.6238403-2.9615479-3.6153564c0.5654297-2.3769531,1.6569214-4.9415283,1.6569214-6.6584473 c0-1.5354004-0.8230591-2.8169556-2.5299683-2.8169556c-2.006958,0-3.6184692,2.0753784-3.6184692,4.8569336 c0,1.7700195,0.5984497,2.9684448,0.5984497,2.9684448s-1.9822998,8.3815308-2.3453979,9.9415283 c-0.4019775,1.72229-0.2453003,4.1416016-0.0713501,5.7233887l0,0c0.4511108,0.1768799,0.9024048,0.3537598,1.3687744,0.4981079l0,0 c0.8168945-1.3278198,2.0349731-3.5056763,2.4864502-5.2422485c0.2438354-0.9361572,1.2468872-4.7546387,1.2468872-4.7546387 c0.6515503,1.2438965,2.5561523,2.296936,4.5831299,2.296936c6.0314941,0,10.378418-5.546936,10.378418-12.4400024 C36.7738647,16.3591919,31.3823242,11.4161377,24.4439087,11.4161377z' fill='#FFF'/>
                </svg>Pinterest</a></li>
        <li><a class='flex flex-col items-center py-2 text-xs text-neutral-600 dark:text-neutral-300 hover:bg-neutral-100 dark:hover:bg-neutral-700 rounded-md' expr:href='&quot;https://www.linkedin.com/shareArticle?mini=true&amp;url=&quot; + data:post.url.canonical.escaped + &quot;&amp;title=&quot; + data:post.title.escaped' target='_blank' title='Share on LinkedIn'>
            <svg class='w-7 h-7 mb-1' viewBox='0 0 72 72' xmlns='http://www.w3.org/2000/svg'><rect fill='#117EB8' height='72' rx='4' width='72' x='0' y='0'/><path d='M13.139 27.848h9.623V58.81h-9.623V27.848zm4.813-15.391c3.077 0 5.577 2.5 5.577 5.577 0 3.08-2.5 5.581-5.577 5.581a5.58 5.58 0 1 1 0-11.158zm10.846 15.39h9.23v4.231h.128c1.285-2.434 4.424-5 9.105-5 9.744 0 11.544 6.413 11.544 14.75V58.81h-9.617V43.753c0-3.59-.066-8.209-5-8.209-5.007 0-5.776 3.911-5.776 7.95V58.81h-9.615V27.848z' fill='#FFF'/></svg>LinkedIn</a></li>
        <li><a class='flex flex-col items-center py-2 text-xs text-neutral-600 dark:text-neutral-300 hover:bg-neutral-100 dark:hover:bg-neutral-700 rounded-md' expr:href='&quot;mailto:?subject=&quot; + data:post.title.escaped + &quot;&amp;body=&quot; + data:post.title.escaped + &quot;%0A%0A&quot; + data:post.url.canonical.escaped' target='_blank' title='Share via Email'>
           <svg class='w-7 h-7 mb-1' viewBox='0 0 141.7 141.7' xmlns='http://www.w3.org/2000/svg'><path d='M24.3,111.3h17.2V69.6L16.9,51.3V104C16.9,108,20.2,111.3,24.3,111.3z' fill='#4285f4'/><path d='M100.3,111.3h17.2c4.1,0,7.4-3.3,7.4-7.4V51.3l-24.5,18.4V111.3z' fill='#34a853'/><path d='M100.3,37.8v31.9l24.5-18.4v-9.8c0-9.1-10.4-14.3-17.7-8.8L100.3,37.8z' fill='#fbbc04'/><path clip-rule='evenodd' d='M41.4,69.6V37.8l29.4,22.1l29.4-22.1v31.9L70.9,91.7L41.4,69.6z' fill='#ea4335' fill-rule='evenodd'/><path d='M16.9,41.4v9.8l24.5,18.4V37.8l-6.9-5.2C27.3,27.2,16.9,32.4,16.9,41.4z' fill='#c5221f'/></svg>Email</a></li>
         <li><a class='flex flex-col items-center py-2 text-xs text-neutral-600 dark:text-neutral-300 hover:bg-neutral-100 dark:hover:bg-neutral-700 rounded-md' expr:href='&quot;https://www.instagram.com/?url=&quot; + data:post.url.canonical.escaped' target='_blank' title='Share on Instagram (opens site)'>
            <svg class='w-7 h-7 mb-1' viewBox='0 0 102 102' xmlns='http://www.w3.org/2000/svg'><defs><radialGradient cx='13.551' cy='102.482' gradientUnits='userSpaceOnUse' id='ig-a' r='133.147'><stop offset='.09' stop-color='#fa8f21'/><stop offset='.78' stop-color='#d82d7e'/></radialGradient><radialGradient cx='61.859' cy='107.051' gradientUnits='userSpaceOnUse' id='ig-b' r='104.938'><stop offset='.64' stop-color='#8c3aaa' stop-opacity='0'/><stop offset='1' stop-color='#8c3aaa'/></radialGradient></defs><path d='M34,51A17,17,0,1,1,51,68,17,17,0,0,1,34,51m-9.191,0A26.188,26.188,0,1,0,51,24.812,26.187,26.187,0,0,0,24.812,51M72.1,23.774a6.12,6.12,0,1,0,6.122-6.118h0a6.123,6.123,0,0,0-6.12,6.118M30.4,92.513a28.187,28.187,0,0,1-9.471-1.754,15.85,15.85,0,0,1-5.866-3.815,15.735,15.735,0,0,1-3.815-5.862A28.161,28.161,0,0,1,9.49,71.611c-.247-5.376-.3-6.991-.3-20.61s.053-15.23.3-20.61a28.374,28.374,0,0,1,1.754-9.471,15.85,15.85,0,0,1,3.815-5.866,15.718,15.718,0,0,1,5.866-3.815A28.161,28.161,0,0,1,30.4,9.484c5.376-.247,6.991-.3,20.6-.3s15.23.053,20.61.3a28.373,28.373,0,0,1,9.471,1.754,15.8,15.8,0,0,1,5.866,3.815,15.8,15.8,0,0,1,3.815,5.866,28.162,28.162,0,0,1,1.754,9.471c.247,5.38.3,6.991.3,20.61s-.049,15.23-.3,20.61a28.294,28.294,0,0,1-1.754,9.471,16.886,16.886,0,0,1-9.681,9.677,28.161,28.161,0,0,1-9.471,1.754c-5.376.247-6.991.3-20.61.3s-15.23-.049-20.6-.3M29.974.309A37.4,37.4,0,0,0,17.595,2.678,25.015,25.015,0,0,0,8.56,8.56a24.918,24.918,0,0,0-5.883,9.034A37.407,37.407,0,0,0,.309,29.974C.058,35.412,0,37.15,0,51S.058,66.588.309,72.026A37.405,37.405,0,0,0,2.678,84.405,24.931,24.931,0,0,0,8.56,93.44a25.076,25.076,0,0,0,9.034,5.883,37.43,37.43,0,0,0,12.379,2.369c5.441.247,7.176.309,21.026.309s15.588-.058,21.026-.309a37.405,37.405,0,0,0,12.379-2.369A26.075,26.075,0,0,0,99.322,84.405a37.3,37.3,0,0,0,2.369-12.379c.247-5.442.3-7.176.3-21.026s-.058-15.588-.3-21.026a37.394,37.394,0,0,0-2.369-12.379A25.08,25.08,0,0,0,93.44,8.56a24.955,24.955,0,0,0-9.03-5.883A37.347,37.347,0,0,0,72.03.309C66.593.062,64.854,0,51,0s-15.59.058-21.03.309' fill='url(#ig-a)'/><path d='M34,51A17,17,0,1,1,51,68,17,17,0,0,1,34,51m-9.191,0A26.188,26.188,0,1,0,51,24.812,26.187,26.187,0,0,0,24.812,51M72.1,23.774a6.12,6.12,0,1,0,6.122-6.118h0a6.123,6.123,0,0,0-6.12,6.118M30.4,92.513a28.187,28.187,0,0,1-9.471-1.754,15.85,15.85,0,0,1-5.866-3.815,15.735,15.735,0,0,1-3.815-5.862A28.161,28.161,0,0,1,9.49,71.611c-.247-5.376-.3-6.991-.3-20.61s.053-15.23.3-20.61a28.374,28.374,0,0,1,1.754-9.471,15.85,15.85,0,0,1,3.815-5.866,15.718,15.718,0,0,1,5.866-3.815A28.161,28.161,0,0,1,30.4,9.484c5.376-.247,6.991-.3,20.6-.3s15.23.053,20.61.3a28.373,28.373,0,0,1,9.471,1.754,15.8,15.8,0,0,1,5.866,3.815,15.8,15.8,0,0,1,3.815,5.866,28.162,28.162,0,0,1,1.754,9.471c.247,5.38.3,6.991.3,20.61s-.049,15.23-.3,20.61a28.294,28.294,0,0,1-1.754,9.471,16.886,16.886,0,0,1-9.681,9.677,28.161,28.161,0,0,1-9.471,1.754c-5.376.247-6.991.3-20.61.3s-15.23-.049-20.6-.3M29.974.309A37.4,37.4,0,0,0,17.595,2.678,25.015,25.015,0,0,0,8.56,8.56a24.918,24.918,0,0,0-5.883,9.034A37.407,37.407,0,0,0,.309,29.974C.058,35.412,0,37.15,0,51S.058,66.588.309,72.026A37.405,37.405,0,0,0,2.678,84.405,24.931,24.931,0,0,0,8.56,93.44a25.076,25.076,0,0,0,9.034,5.883,37.43,37.43,0,0,0,12.379,2.369c5.441.247,7.176.309,21.026.309s15.588-.058,21.026-.309a37.405,37.405,0,0,0,12.379-2.369A26.075,26.075,0,0,0,99.322,84.405a37.3,37.3,0,0,0,2.369-12.379c.247-5.442.3-7.176.3-21.026s-.058-15.588-.3-21.026a37.394,37.394,0,0,0-2.369-12.379A25.08,25.08,0,0,0,93.44,8.56a24.955,24.955,0,0,0-9.03-5.883A37.347,37.347,0,0,0,72.03.309C66.593.062,64.854,0,51,0s-15.59.058-21.03.309' fill='url(#ig-b)'/></svg>Instagram</a></li>
      </ul>
      <div class='border-t border-neutral-200 dark:border-neutral-600 pt-3'>
        <p class='text-xs text-neutral-500 dark:text-neutral-400 mb-1'>Or copy link</p>
        <div class='flex items-center space-x-2'>
          <input class='flex-grow p-2 text-xs border border-neutral-300 dark:border-neutral-600 rounded-md bg-neutral-50 dark:bg-neutral-700 text-neutral-700 dark:text-neutral-300 focus:ring-1 focus:ring-indigo-500 focus:border-indigo-500' expr:value='data:post.url.canonical' readonly='' type='text'/>
          <button class='copy-link-button p-2 rounded-md bg-indigo-500 hover:bg-indigo-600 text-white focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 dark:focus:ring-offset-neutral-800' expr:data-url='data:post.url.canonical' type='button'>
            <svg class='w-4 h-4' fill='currentColor' viewBox='0 0 22 22' xmlns='http://www.w3.org/2000/svg'><path d='M8 11a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07L9.75 3.18'/><path d='M12 9a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71'/></svg>
          </button>
        </div>
      </div>
    </div>
  </div>
            </div> <!-- END OF NEW ACTION ICONS DIV -->
          </div>

<div class='post-meta-line-2-TEST text-xs text-neutral-500 dark:text-neutral-400'>
            <span>Published: <time expr:datetime='data:post.date.iso8601'><data:post.date format='MMM d, yyyy'/></time></span>
              <b:if cond='data:post.lastUpdated and data:post.lastUpdated.iso8601 != data:post.date.iso8601'>
              <span class='mx-1'>&#183;</span>
              <span>Updated:</span>
              <time expr:datetime='data:post.lastUpdated.iso8601' expr:title='data:post.lastUpdated.iso8601'>
                  <data:post.lastUpdated format='MMM d, yyyy'/>
              </time>
            </b:if>
                <span class='mx-1'>&#183;</span>
            <span class='read-time-placeholder' expr:id='&quot;read-time-&quot; + data:post.id'>
              {/* JS will populate this */}
            </span>
          </div>
        </div>
        <!-- JavaScript for Read Time Calculation -->
                       <!-- JavaScript for Read Time Calculation -->
         <script expr:data-postid='data:post.id' expr:id='&quot;script-read-time-&quot; + data:post.id' type='text/javascript'>
  //<![CDATA[
  (function() {
    var currentScriptTag = document.currentScript;
    var postIdForReadTimeSpan = currentScriptTag ? currentScriptTag.getAttribute('data-postid') : null;

    if (postIdForReadTimeSpan === "null" || postIdForReadTimeSpan === "") {
      postIdForReadTimeSpan = null;
    }

    function doReadTimeCalculation() {
      if (!postIdForReadTimeSpan) {
        return;
      }

      var postBodyId = "post-body-" + postIdForReadTimeSpan;
      var postBodyContent = document.getElementById(postBodyId);
      var readTimeContainerId = "read-time-" + postIdForReadTimeSpan;
      var readTimeContainer = document.getElementById(readTimeContainerId);

      if (postBodyContent && readTimeContainer) {
        var text = postBodyContent.textContent || postBodyContent.innerText || "";
        var words = text.trim().split(/\s+/).filter(Boolean).length;
        var wordsPerMinute = 200;

        if (words > 0) {
          var minutes = Math.ceil(words / wordsPerMinute);
          readTimeContainer.textContent = "Estimated read time: " + minutes + " min";
        } else {
          readTimeContainer.textContent = "Estimated read time: <1 min";
        }
      } else {
        if (readTimeContainer) {
          readTimeContainer.textContent = ""; // Clear if calculation failed
        }
      }
    }

    function ensureExecution() {
      // Attempt to run after a slight delay from DOMContentLoaded, and also on window.load as a fallback for all assets
      // Clear any previous timers if this function gets called multiple times (though it shouldn't with this setup)
      if (window.readTimeTimer) clearTimeout(window.readTimeTimer);
      window.readTimeTimer = setTimeout(doReadTimeCalculation, 300); // Increased delay
    }

    if (document.readyState === 'loading') {
      document.addEventListener('DOMContentLoaded', ensureExecution);
    } else { // DOMContentLoaded has already fired
      ensureExecution();
    }
    // Additionally, listen to window.load as a final attempt,
    // useful if postBody content is heavily dependent on loaded images affecting textContent.
    window.addEventListener('load', ensureExecution, false);

  })();
  //]]>
</script>
      </b:if>
      <!-- END POST META HEADER -->
      <!-- SNIPPET (for multi-item views only) / FULL BODY (for single post view) -->
      <b:if cond='data:view.isSingleItem'>
        <div class='post-body-container prose prose-sm sm:prose-base dark:prose-invert max-w-none mt-4'>
  <b:include data='post' name='postBody'/> 
</div>
        <!-- ADD THIS SECTION FOR COMMENTS ON SINGLE POST VIEW -->
      <div class='post-comments-section mt-8 pt-8 border-t border-neutral-200 dark:border-neutral-700'>
        <b:include data='post' name='commentPicker'/>
      </div>
      <!-- END OF ADDED COMMENTS SECTION -->

      <b:else/>
        <div class='post-snippet-container text-neutral-600 dark:text-neutral-400 text-sm mb-4 line-clamp-2'>
          <b:eval expr='data:post.snippets.long snippet { length: 150, links: false, linebreaks: false, ellipsis: true }'/>
        </div>
      </b:if>

      <!-- META: Author, Date, Read More (for multi-item views only) -->
      <b:if cond='!data:view.isSingleItem'>
        <div class='post-meta-container mt-auto pt-4 border-t border-neutral-200 dark:border-neutral-700 flex items-center justify-between text-xs text-neutral-500 dark:text-neutral-400'>
          <div class='author-info flex items-center'>
            <b:if cond='data:post.author.authorPhoto.url'>
              <img alt='author photo' class='w-6 h-6 rounded-full mr-2 object-cover' expr:src='data:post.author.authorPhoto.url'/>
            </b:if>
            <span class='font-medium text-neutral-700 dark:text-neutral-300'><data:post.author.name/></span>
            <span class='mx-1.5'>&#183;</span>
            <time expr:datetime='data:post.date.iso8601'><data:post.date format='MMM dd'/></time>
          </div>
          <a class='read-more-link font-medium text-indigo-600 hover:text-indigo-700 dark:text-indigo-400 dark:hover:text-indigo-300 opacity-0 group-hover:opacity-100 md:opacity-100 transition-opacity duration-200' expr:href='data:post.url'>
             Read more <span class='ml-1'>&#8594;</span>
          </a>
        </div>
      </b:if>
    </div>
  </article>
</b:includable>
                <b:includable id='postAuthor'>
  <span class='byline post-author vcard'>
    <span class='post-author-label'>
      <data:byline.label/>
    </span>
    <span class='fn'>
      <b:if cond='data:post.author.profileUrl'>
        <meta expr:content='data:post.author.profileUrl'/>
        <a class='g-profile' expr:href='data:post.author.profileUrl' rel='author' title='author profile'>
          <span><data:post.author.name/></span>
        </a>
      <b:else/>
        <span><data:post.author.name/></span>
      </b:if>
    </span>
  </span>
</b:includable>
                <b:includable id='postBody' var='post'>
  <!-- If metaDescription is empty, use the post body as the schema.org description too, for G+/FB snippeting. -->
  <div class='post-body entry-content float-container' expr:id='&quot;post-body-&quot; + data:post.id'>
    <data:post.body/>
  </div>
</b:includable>
                <b:includable id='postBodySnippet' var='post'>
              </b:includable>
                <b:includable id='postCommentsAndAd' var='post'>
  <article class='post-outer-container'>
    <!-- Post title and body -->
    <div class='post-outer'>
      <b:include data='post' name='post'/>
    </div>

    <!-- Comments -->
    <b:include cond='data:view.isSingleItem' data='post' name='commentPicker'/>

    <!-- Show ad inside post container, after comments, if single item. -->
    <b:include cond='data:view.isSingleItem and data:post.includeAd' data='post' name='inlineAd'/>
  </article>

  <!-- Show ad outside post container (between posts) for feed pages. -->
  <b:include cond='data:view.isMultipleItems and data:post.includeAd' data='post' name='inlineAd'/>
</b:includable>
                <b:includable id='postCommentsLink'>
  <b:if cond='data:view.isMultipleItems'>
    <span class='byline post-comment-link container'>
      <b:include cond='data:post.commentSource != 1' name='commentsLink'/>
    </span>
  </b:if>
</b:includable>
                <b:includable id='postFooter' var='post'>
  <div class='post-footer'>
    <b:include name='footerBylines'/>
    <b:include data='post' name='postFooterAuthorProfile'/>
  </div>
</b:includable>
                <b:includable id='postFooterAuthorProfile' var='post'>
  <b:if cond='data:post.author.aboutMe and data:view.isPost'>
    <div class='author-profile'>
      <b:if cond='data:post.author.authorPhoto.url'>
        <img class='author-image' expr:src='data:post.author.authorPhoto.url' width='50px'/>
        <div class='author-about'>
          <b:include data='post' name='aboutPostAuthor'/>
        </div>
      <b:else/>
        <b:include data='post' name='aboutPostAuthor'/>
      </b:if>
    </div>
  </b:if>
</b:includable>
                <b:includable id='postHeader' var='post'>
  <b:include name='headerByline'/>
</b:includable>
                <b:includable id='postJumpLink' var='post'>
  <div class='jump-link flat-button'>
    <a expr:href='data:post.url fragment &quot;more&quot;' expr:title='data:post.title'>
      <b:eval expr='data:blog.jumpLinkMessage'/>
    </a>
  </div>
</b:includable>
                <b:includable id='postLabels'>
  <span class='byline post-labels'>
    <span class='byline-label'><data:byline.label/></span>
    <b:loop index='i' values='data:post.labels' var='label'>
      <a expr:href='data:label.url' rel='tag'>
        <data:label.name/>
      </a>
    </b:loop>
  </span>
</b:includable>
                <b:includable id='postLocation'>
  <span class='byline post-location'>
    <data:byline.label/>
    <a expr:href='data:post.location.mapsUrl' target='_blank'><data:post.location.name/></a>
  </span>
</b:includable>
                <b:includable id='postMeta' var='post'>
  <b:include data='post' name='postMetadataJSON'/>
</b:includable>
                <b:includable id='postMetadataJSONImage'>
  &quot;image&quot;: {
    &quot;@type&quot;: &quot;ImageObject&quot;,
    <b:if cond='data:post.featuredImage.isResizable'>
    &quot;url&quot;: &quot;<b:eval expr='resizeImage(data:post.featuredImage, 1200, &quot;1200:630&quot;)'/>&quot;,
    &quot;height&quot;: 630,
    &quot;width&quot;: 1200
    <b:else/>
    &quot;url&quot;: &quot;https://blogger.googleusercontent.com/img/b/U2hvZWJveA/AVvXsEgfMvYAhAbdHksiBA24JKmb2Tav6K0GviwztID3Cq4VpV96HaJfy0viIu8z1SSw_G9n5FQHZWSRao61M3e58ImahqBtr7LiOUS6m_w59IvDYwjmMcbq3fKW4JSbacqkbxTo8B90dWp0Cese92xfLMPe_tg11g/w1200/&quot;,
    &quot;height&quot;: 348,
    &quot;width&quot;: 1200
    </b:if>
  },
</b:includable>
                <b:includable id='postMetadataJSONPublisher'>
 &quot;publisher&quot;: {
    &quot;@type&quot;: &quot;Organization&quot;,
    &quot;name&quot;: &quot;Blogger&quot;,
    &quot;logo&quot;: {
      &quot;@type&quot;: &quot;ImageObject&quot;,
      &quot;url&quot;: &quot;https://blogger.googleusercontent.com/img/b/U2hvZWJveA/AVvXsEgfMvYAhAbdHksiBA24JKmb2Tav6K0GviwztID3Cq4VpV96HaJfy0viIu8z1SSw_G9n5FQHZWSRao61M3e58ImahqBtr7LiOUS6m_w59IvDYwjmMcbq3fKW4JSbacqkbxTo8B90dWp0Cese92xfLMPe_tg11g/h60/&quot;,
      &quot;width&quot;: 206,
      &quot;height&quot;: 60
    }
  },
</b:includable>
                <b:includable id='postPagination'>
  <b:if cond='data:view.isMultipleItems'>
    <!-- DEFAULT Pagination -->
    <nav aria-label='Default Pagination' class='default-pagination-nav mt-12 flex items-center border-t border-neutral-200 dark:border-neutral-700 px-4 pt-12 sm:px-6' id='pager-default' style='display:none;'>
      <div class='flex flex-1 justify-between sm:justify-between gap-2 sm:gap-4'>
        <b:if cond='data:newerPageUrl'>
          <a class='relative inline-flex items-center rounded-md border border-neutral-300 dark:border-neutral-600 bg-white dark:bg-neutral-800 px-3 sm:px-4 py-2 text-sm font-medium text-neutral-700 dark:text-neutral-300 hover:bg-neutral-50 dark:hover:bg-neutral-700' expr:href='data:newerPageUrl' expr:title='data:messages.previousPageTitle' rel='prev'>
            <svg class='h-5 w-5' fill='currentColor' stroke='currentColor' stroke-width='0' viewBox='0 0 448 512' xmlns='http://www.w3.org/2000/svg'><path d='M257.5 445.1l-22.2 22.2c-9.4 9.4-24.6 9.4-33.9 0L7 273c-9.4-9.4-9.4-24.6 0-33.9L201.4 44.7c9.4-9.4 24.6 9.4 33.9 0l22.2 22.2c9.5 9.5 9.3 25-.4 34.3L136.6 216H424c13.3 0 24 10.7 24 24v32c0 13.3-10.7 24-24 24H136.6l120.5 114.8c9.8 9.3 10 24.8.4 34.3z'/></svg>
            <span class='ml-2'><data:messages.previousPage/></span>
          </a>
        </b:if>
        <b:if cond='data:view.url != data:blog.homepageUrl'>
          <a class='relative inline-flex items-center rounded-md border border-neutral-300 dark:border-neutral-600 bg-white dark:bg-neutral-800 px-3 sm:px-4 py-2 text-sm font-medium text-neutral-700 dark:text-neutral-300 hover:bg-neutral-50 dark:hover:bg-neutral-700' expr:href='data:blog.homepageUrl' expr:title='data:messages.homePageTitle'>
             <svg class='h-5 w-5' fill='currentColor' stroke='currentColor' stroke-width='0' viewBox='0 0 576 512' xmlns='http://www.w3.org/2000/svg'><path d='M280.37 148.26L96 300.11V464a16 16 0 0 0 16 16l112.06-.29a16 16 0 0 0 15.92-16V368a16 16 0 0 1 16-16h64a16 16 0 0 1 16 16v95.64a16 16 0 0 0 16 16.05L464 480a16 16 0 0 0 16-16V300L295.67 148.26a12.19 12.19 0 0 0-15.3 0zM571.6 251.47L488 182.56V44.05a12 12 0 0 0-12-12h-56a12 12 0 0 0-12 12v72.61L318.47 43a48 48 0 0 0-61 0L4.34 251.47a12 12 0 0 0-1.6 16.9l25.5 31A12 12 0 0 0 45.15 301l235.22-193.74a12.19 12.19 0 0 1 15.3 0L530.9 301a12 12 0 0 0 16.9-1.6l25.5-31a12 12 0 0 0-1.7-16.93z'/></svg>
            <span class='ml-2'><data:messages.home/></span>
          </a>
        </b:if>
        <b:if cond='data:olderPageUrl'>
          <a class='relative inline-flex items-center rounded-md border border-neutral-300 dark:border-neutral-600 bg-white dark:bg-neutral-800 px-3 sm:px-4 py-2 text-sm font-medium text-neutral-700 dark:text-neutral-300 hover:bg-neutral-50 dark:hover:bg-neutral-700' expr:href='data:olderPageUrl' expr:title='data:messages.nextPageTitle' rel='next'>
            <span class='mr-2'><data:messages.nextPage/></span>
            <svg class='h-5 w-5' fill='currentColor' stroke='currentColor' stroke-width='0' viewBox='0 0 448 512' xmlns='http://www.w3.org/2000/svg'><path d='M190.5 66.9l22.2-22.2c9.4-9.4 24.6-9.4 33.9 0L441 239c9.4 9.4 9.4 24.6 0 33.9L246.6 467.3c-9.4 9.4-24.6 9.4-33.9 0l-22.2-22.2c-9.5-9.5-9.3-25 .4-34.3L311.4 296H24c-13.3 0-24-10.7 24-24v-32c0-13.3 10.7-24 24-24h287.4L190.9 101.2c-9.8-9.3-10-24.8-.4-34.3z'/></svg>
          </a>
        </b:if>
      </div>
    </nav>

    <!-- NUMBERED Pagination -->
    <nav aria-label='Numbered Pagination' class='numbered-pagination-nav flex items-center justify-center text-neutral-600 dark:text-neutral-300 mt-12 pt-12 border-t border-neutral-200 dark:border-neutral-700 px-4 sm:px-6' id='pager-numbered' style='display:none;'>
      <div class='flex items-center justify-center py-2 text-sm italic'>Loading Numbered Pagination...</div>
    </nav>
    <div id='pagination-data-provider' style='display:none;'>
      <input id='numPagesToShow' type='hidden' value='5'/> <!-- Default, can be overridden by JS if needed -->
      <input expr:value='(data:blog.pageType == &quot;index&quot; and (data:view.search.label or data:view.search.query)) ? 6 : (data:prefs.postsPerHomePage ?: data:blog.postsPerHomePage ?: 7)' id='postsPerPageForNumbered' type='hidden'/>
      <input expr:value='data:blog.homepageUrl' id='blogUrl' type='hidden'/>
      <input expr:value='data:blog.pageType' id='pageType' type='hidden'/>
      <input expr:value='data:view.search.query ?: &quot;&quot;' id='searchQuery' type='hidden'/>
      <input expr:value='data:view.search.label ?: &quot;&quot;' id='searchLabel' type='hidden'/>
      <input expr:value='data:messages.previousPage ?: &quot;Previous&quot;' id='prevPageText' type='hidden'/>
      <input expr:value='data:messages.nextPage ?: &quot;Next&quot;' id='nextPageText' type='hidden'/>
    </div>

    <!-- LOAD MORE Pagination -->
    <div class='load-more-pagination-container mt-12 pt-6 text-center border-t border-neutral-200 dark:border-neutral-700 px-4 sm:px-6' id='pager-loadmore' style='display:none;'>
      <button class='bg-blue-500 hover:bg-blue-600 text-white font-semibold py-2 px-6 rounded-lg shadow-md transition duration-150 ease-in-out focus:outline-none focus:ring-2 focus:ring-blue-400 focus:ring-opacity-75' id='load-more-button'>
        <data:messages.loadMorePosts default='Load More Posts'/>
      </button>
      <p class='text-sm text-neutral-500 dark:text-neutral-400 mt-2' id='load-more-message' style='display:none;'>Loading...</p>
    </div>
    <div id='load-more-data-provider' style='display:none;'>
      <input expr:value='(data:blog.pageType == &quot;index&quot; and (data:view.search.label or data:view.search.query)) ? 6 : (data:prefs.postsPerHomePage ?: data:blog.postsPerHomePage ?: 7)' id='lm_postsPerPage' type='hidden'/>
      <input expr:value='data:blog.homepageUrl' id='lm_blogUrl' type='hidden'/>
      <input expr:value='data:blog.pageType' id='lm_pageType' type='hidden'/>
      <input expr:value='data:view.search.query ?: &quot;&quot;' id='lm_searchQuery' type='hidden'/>
      <input expr:value='data:view.search.label ?: &quot;&quot;' id='lm_searchLabel' type='hidden'/>
    </div>

    <!-- INFINITE Pagination -->
    <div class='infinite-scroll-container mt-12 pt-6' id='pager-infinite' style='display:none;'>
      <div class='h-20 w-full flex items-center justify-center text-sm italic text-neutral-500 dark:text-neutral-400' id='infinite-scroll-trigger'>
          <!-- Loading indicator for infinite scroll -->
      </div>
    </div>
     <div id='infinite-scroll-data-provider' style='display:none;'>
          <input expr:value='(data:blog.pageType == &quot;index&quot; and (data:view.search.label or data:view.search.query)) ? 6 : (data:prefs.postsPerHomePage ?: data:blog.postsPerHomePage ?: 7)' id='is_postsPerPage' type='hidden'/>
          <input expr:value='data:blog.homepageUrl' id='is_blogUrl' type='hidden'/>
          <input expr:value='data:blog.pageType' id='is_pageType' type='hidden'/>
          <input expr:value='data:view.search.query ?: &quot;&quot;' id='is_searchQuery' type='hidden'/>
          <input expr:value='data:view.search.label ?: &quot;&quot;' id='is_searchLabel' type='hidden'/>
      </div>
  </b:if> <!-- End of data:view.isMultipleItems -->

</b:includable>
                <b:includable id='postReactions'>
  <!-- Reaction feature no longer available. The includable is retained for backwards-compatibility. -->
</b:includable>
                <b:includable id='postShareButtons'>
  <div class='byline post-share-buttons goog-inline-block'>
    <b:with value='data:sharingId ?: ((data:widget.instanceId ?: &quot;sharing&quot;) + &quot;-&quot; + (data:regionName ?: &quot;byline&quot;) + &quot;-&quot; + data:post.id)' var='sharingId'>
      <!-- Note: 'sharingButtons' includable is from the default Sharing widget markup. -->
      <b:include data='{                                                sharingId: data:sharingId,                                                originalUrl: data:post.url,                                                platforms: data:this.sharing.platforms,                                                shareUrl: data:post.shareUrl,                                                shareTitle: data:post.title,                                              }' name='sharingButtons'/>
    </b:with>
  </div>
</b:includable>
                <b:includable id='postTimestamp'>
  <span class='byline post-timestamp'>
    <data:byline.label/>
    <b:if cond='data:post.url'>
      <meta expr:content='data:post.url.canonical'/>
      <a class='timestamp-link' expr:href='data:post.url' rel='bookmark' title='permanent link'>
        <time class='published' expr:datetime='data:post.date.iso8601' expr:title='data:post.date.iso8601'>
          <data:post.date/>
        </time>
      </a>
    </b:if>
  </span>
</b:includable>
                <b:includable id='postTitle' var='post'>
<!-- Empty -->
</b:includable>
                <b:includable id='previousPageLink'>
  <a class='blog-pager-newer-link' expr:href='data:newerPageUrl' expr:id='data:widget.instanceId + &quot;_blog-pager-newer-link&quot;' expr:title='data:messages.newerPosts'>
    <data:messages.newerPosts/>
  </a>
</b:includable>
                <b:includable id='sharingButton'>
  <span expr:aria-label='data:platform.shareMessage' expr:class='&quot;sharing-platform-button sharing-element-&quot; + data:platform.key' expr:data-href='data:shareUrl + &quot;&amp;target=&quot; + data:platform.target' expr:data-url='data:originalUrl' expr:title='data:platform.shareMessage' role='menuitem' tabindex='-1'>
    <b:include name='sharingPlatformIcon'/>
    <span class='platform-sharing-text'><data:platform.name/></span>
  </span>
</b:includable>
                <b:includable id='sharingButtonContent'>
  <div class='flat-icon-button ripple'>
    <b:include name='shareIcon'/>
  </div>
</b:includable>
                <b:includable id='sharingButtons'>
  <div class='sharing' expr:aria-owns='&quot;sharing-popup-&quot; + data:sharingId' expr:data-title='data:shareTitle'>
    <button class='sharing-button touch-icon-button' expr:aria-controls='&quot;sharing-popup-&quot; + data:sharingId' expr:aria-label='data:messages.share.escaped' expr:id='&quot;sharing-button-&quot; + data:sharingId' role='button'>
      <b:include name='sharingButtonContent'/>
    </button>
    <b:include name='sharingButtonsMenu'/>
  </div>
</b:includable>
                <b:includable id='sharingButtonsMenu'>
  <div class='share-buttons-container'>
    <ul aria-hidden='true' class='share-buttons hidden' expr:aria-label='data:messages.share.escaped' expr:id='&quot;sharing-popup-&quot; + data:sharingId' role='menu'>
      <b:loop values='(data:platforms ?: data:blog.sharing.platforms) filter (p =&gt; p.key not in {&quot;blogThis&quot;})' var='platform'>
        <li>
          <b:include name='sharingButton'/>
        </li>
      </b:loop>
      <li aria-hidden='true' class='hidden'>
        <b:include name='otherSharingButton'/>
      </li>
    </ul>
  </div>
</b:includable>
                <b:includable id='sharingPlatformIcon'>
  <b:include data='{ iconClass: (&quot;touch-icon sharing-&quot; + data:platform.key) }' expr:name='data:platform.key + &quot;Icon&quot;'/>
</b:includable>
                <b:includable id='threadedCommentForm' var='post'>
  <div class='comment-form'>
    <a name='comment-form'/>
    <h4 id='comment-post-message'><data:messages.postAComment/></h4>
    <b:if cond='data:this.messages.blogComment != &quot;&quot;'>
      <p><data:this.messages.blogComment/></p>
    </b:if>
    <b:include data='post' name='commentFormIframeSrc'/>
    <iframe allowtransparency='allowtransparency' class='blogger-iframe-colorize blogger-comment-from-post' expr:height='data:cmtIframeInitialHeight ?: &quot;90px&quot;' frameborder='0' id='comment-editor' name='comment-editor' src='' width='100%'/>
    <data:post.cmtfpIframe/>
    <script type='text/javascript'>
      BLOG_CMT_createIframe(&#39;<data:post.appRpcRelayPath/>&#39;);
    </script>
  </div>
</b:includable>
                <b:includable id='threadedCommentJs' var='post'>
  <script async='async' expr:src='data:post.commentSrc' type='text/javascript'/>
  <b:template-script inline='true' name='threaded_comments'/>
  <script type='text/javascript'>
    blogger.widgets.blog.initThreadedComments(
        <data:post.commentJso/>,
        <data:post.commentMsgs/>,
        <data:post.commentConfig/>);
  </script>
</b:includable>
                <b:includable id='threadedComments' var='post'>
  <section class='comments threaded' expr:data-embed='data:post.embedCommentForm' expr:data-num-comments='data:post.numberOfComments' id='comments'>
    <a name='comments'/>

    <b:include name='commentsTitle'/>

    <div class='comments-content'>
      <b:if cond='data:post.embedCommentForm'>
        <b:include data='post' name='threadedCommentJs'/>
      </b:if>
      <div id='comment-holder'>
         <data:post.commentHtml/>
      </div>
    </div>

    <p class='comment-footer'>
      <b:if cond='data:post.allowNewComments'>
        <b:include data='post' name='threadedCommentForm'/>
      <b:else/>
        <data:post.noNewCommentsText/>
      </b:if>
      <b:if cond='data:post.showManageComments'>
        <b:include data='post' name='manageComments'/>
      </b:if>
    </p>

    <b:if cond='data:showCmtPopup'>
      <div id='comment-popup'>
        <iframe allowtransparency='allowtransparency' frameborder='0' id='comment-actions' name='comment-actions' scrolling='no'>
        </iframe>
      </div>
    </b:if>
  </section>
</b:includable>
              </b:widget>
            </b:section>
        </div>
      </div>

      <aside class='w-full md:w-3/12 px-2 order-2 md:order-none mb-4 md:mb-0'>
        <div class='bg-white dark:bg-neutral-900 p-4 shadow rounded-lg min-h-[200px]'>
          <h2 class='text-xl font-semibold mb-3 text-neutral-800 dark:text-neutral-200'>Right Sidebar</h2>
          <b:section class='sidebar-right' id='sidebar-right' name='Sidebar Right' showaddelement='yes'>
            <b:widget id='HTML2' locked='false' title='Bookmark Manager' type='HTML' visible='true'>
              <b:widget-settings>
                <b:widget-setting name='content'><![CDATA[<div class="bookmark-widget-container bg-white dark:bg-neutral-800 p-4 shadow rounded-lg text-neutral-900 dark:text-neutral-100">
  <!-- Title for the widget (optional, can be set in gadget settings too) -->
  <h2 class='text-xl font-semibold mb-4 text-neutral-800 dark:text-neutral-200 widget-title'>
    Saved Bookmarks
  </h2>

  <!-- Interaction for current page (can be simplified if only showing list) -->
  <div id="sidebarBookmarkIconArea" class="flex items-center space-x-3 mb-4 p-2 rounded-md hover:bg-neutral-100 dark:hover:bg-neutral-700 cursor-pointer relative">
    <svg id="sidebarBookmarkSvg" class="w-6 h-6 text-neutral-600 dark:text-neutral-300" viewbox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
      <path d="M19 21l-7-5-7 5V5a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2z"></path>
    </svg>
    <span id="sidebarBookmarkText" class="text-sm font-medium">Bookmark this page</span>
    <span id="bookmarkBadge" class="absolute -top-1.5 -right-1.5 bg-red-500 text-white text-xs font-bold rounded-full px-1.5 py-0.5 leading-tight hidden">0</span>
  </div>

  <button id="toggleBookmarksButton" class="w-full bg-indigo-500 hover:bg-indigo-600 text-white font-semibold py-2 px-4 rounded-md mb-2 text-sm transition-colors focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 dark:focus:ring-offset-neutral-800">
    View Saved Bookmarks
  </button>
  <input type="text" id="bookmarkSearchInput" placeholder="Search bookmarks..." class="w-full p-2 mb-2 border border-neutral-300 dark:border-neutral-600 rounded-md bg-neutral-50 dark:bg-neutral-700 text-sm focus:ring-indigo-500 focus:border-indigo-500 hidden"/>
  <select id="sortBookmarksSelect" class="w-full p-2 mb-3 border border-neutral-300 dark:border-neutral-600 rounded-md bg-neutral-50 dark:bg-neutral-700 text-sm focus:ring-indigo-500 focus:border-indigo-500 hidden">
    <option value="newest" />Sort: Newest First
    <option value="oldest" />Sort: Oldest First
    <option value="atoz" />Sort: A → Z
    <option value="ztoa" />Sort: Z → A
  </select>
  <button id="clearAllBookmarksButton" class="w-full bg-red-600 hover:bg-red-700 text-white font-semibold py-2 px-4 rounded-md mb-3 text-sm transition-colors focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2 dark:focus:ring-offset-neutral-800">
    Clear All Bookmarks
  </button>

  <div id="bookmarksListContainer" class="bookmarks-list-area max-h-60 overflow-y-auto space-y-2 text-sm hidden">
    <!-- Bookmarks will be listed here by JavaScript -->
    <p class="no-bookmarks-message p-2 text-center text-neutral-500 dark:text-neutral-400">No bookmarks saved yet.</p>
  </div>
</div>

<script type="text/javascript">
//<![CDATA[

// Ensure showGlobalToast is available (it should be from your main theme script)
// Expose functions to global scope if needed by main theme script
window.manageBookmarkBadgeVisibility = SBM_manageBadgeVisibility;
window.SBM_updateSidebarIconStateGlobally = SBM_updateSidebarIconState; 

let isSidebarBookmarksListVisible = false;

function SBM_toggleCurrentPageBookmark() {
  const pageTitle = document.title;
  const pageURL = window.location.href; // This is the canonical URL of the current page
  let bookmarks = JSON.parse(localStorage.getItem('bookmarks')) || [];
  const index = bookmarks.findIndex(b => b.url === pageURL);

  if (index === -1) {
    bookmarks.push({ title: pageTitle, url: pageURL, dateSaved: new Date().toISOString() });
    if(typeof showGlobalToast === 'function') showGlobalToast("✅ Page Bookmarked!", "bg-green-500 text-white");
  } else {
    bookmarks.splice(index, 1);
    if(typeof showGlobalToast === 'function') showGlobalToast("❌ Bookmark Removed!", "bg-red-500 text-white");
  }
  localStorage.setItem('bookmarks', JSON.stringify(bookmarks));
  SBM_updateSidebarIconState(); // Updates this sidebar widget's icon
  SBM_manageBadgeVisibility(); // Updates the badge count
  if (isSidebarBookmarksListVisible) SBM_renderBookmarksList(); // Updates the list if visible

  // **FIX FOR ISSUE 1: Sync with under-post-title bookmark icon**
  // Find the on-page bookmark button that corresponds to the current pageURL
  const onPagePostMetaButton = document.querySelector('.post-meta-bookmark-button[data-post-url="' + pageURL + '"]');
  if (onPagePostMetaButton && typeof setInitialBookmarkButtonState === 'function') {
      setInitialBookmarkButtonState(onPagePostMetaButton); // Use the generic function from main theme
  }
}

function SBM_updateSidebarIconState() {
  const pageURL = window.location.href;
  const bookmarks = JSON.parse(localStorage.getItem('bookmarks')) || [];
  const isBookmarked = bookmarks.some(b => b.url === pageURL);
  
  const iconEl = document.getElementById('sidebarBookmarkSvg');
  const textEl = document.getElementById('sidebarBookmarkText');
  const iconArea = document.getElementById('sidebarBookmarkIconArea');

  if (iconEl && textEl && iconArea) {
    const defaultClasses = ['text-neutral-600', 'dark:text-neutral-300'];
    const bookmarkedClasses = ['text-green-600', 'dark:text-green-500'];

    defaultClasses.forEach(cls => iconEl.classList.remove(cls));
    bookmarkedClasses.forEach(cls => iconEl.classList.remove(cls));

    if (isBookmarked) {
      iconEl.setAttribute('fill', 'currentColor');
      bookmarkedClasses.forEach(cls => iconEl.classList.add(cls));
      textEl.textContent = "Remove Bookmark";
      iconArea.setAttribute('aria-label', 'Remove bookmark for this page');
    } else {
      iconEl.setAttribute('fill', 'none');
      defaultClasses.forEach(cls => iconEl.classList.add(cls));
      textEl.textContent = "Bookmark this page";
      iconArea.setAttribute('aria-label', 'Bookmark this page');
    }
  }
}

function SBM_toggleBookmarksListDisplay() {
  const listContainer = document.getElementById('bookmarksListContainer');
  const button = document.getElementById('toggleBookmarksButton');
  const searchInput = document.getElementById('bookmarkSearchInput');
  const sortSelect = document.getElementById('sortBookmarksSelect');
  const clearButton = document.getElementById('clearAllBookmarksButton');

  isSidebarBookmarksListVisible = !isSidebarBookmarksListVisible;
  window.isBookmarksVisibleGlobal = isSidebarBookmarksListVisible; // Update global flag

  if (isSidebarBookmarksListVisible) {
    SBM_renderBookmarksList();
    listContainer.classList.remove('hidden');
    searchInput.classList.remove('hidden');
    sortSelect.classList.remove('hidden');
    clearButton.classList.remove('hidden'); 
    button.textContent = "Hide Saved Bookmarks";
  } else {
    listContainer.classList.add('hidden');
    searchInput.classList.add('hidden');
    sortSelect.classList.add('hidden');
    // clearButton.classList.add('hidden'); // Optionally hide
    button.textContent = "View Saved Bookmarks";
  }
}

function SBM_renderBookmarksList() {
  const listContainer = document.getElementById('bookmarksListContainer');
  if (!listContainer) return;
  
  let bookmarks = JSON.parse(localStorage.getItem('bookmarks')) || [];
  const sortOption = document.getElementById('sortBookmarksSelect')?.value || 'newest';
  const filterText = document.getElementById('bookmarkSearchInput')?.value.toLowerCase() || '';

  if (filterText) {
      bookmarks = bookmarks.filter(b => b.title.toLowerCase().includes(filterText));
  }

  if (sortOption === "newest") bookmarks.sort((a, b) => new Date(b.dateSaved) - new Date(a.dateSaved));
  else if (sortOption === "oldest") bookmarks.sort((a, b) => new Date(a.dateSaved) - new Date(b.dateSaved));
  else if (sortOption === "atoz") bookmarks.sort((a, b) => a.title.localeCompare(b.title));
  else if (sortOption === "ztoa") bookmarks.sort((a, b) => b.title.localeCompare(a.title));

  listContainer.innerHTML = ''; 
  const noBookmarksMsg = document.createElement('p');
  noBookmarksMsg.className = 'no-bookmarks-message p-2 text-center text-neutral-500 dark:text-neutral-400';
  noBookmarksMsg.textContent = "No bookmarks saved yet.";

  if (bookmarks.length === 0) {
      listContainer.appendChild(noBookmarksMsg);
      return;
  }

  bookmarks.forEach((b) => {
      const itemDiv = document.createElement('div');
      itemDiv.className = 'flex justify-between items-center p-2.5 border-b border-neutral-200 dark:border-neutral-700 last:border-b-0 hover:bg-neutral-50 dark:hover:bg-neutral-700/50 rounded-md transition-colors';
      
      const linkAndDateDiv = document.createElement('div'); 

      const link = document.createElement('a');
      link.href = b.url;
      link.textContent = b.title;
      link.target = "_blank";
      link.className = 'block font-semibold text-indigo-600 dark:text-indigo-400 hover:underline mb-0.5 line-clamp-2 text-sm';
      
      const date = new Date(b.dateSaved);
      const formattedDate = date.toLocaleDateString(navigator.language || 'en-US', { year: 'numeric', month: 'short', day: 'numeric' });
      const dateInfo = document.createElement('div');
      dateInfo.className = 'text-xs text-neutral-500 dark:text-neutral-400';
      dateInfo.textContent = "Saved: " + formattedDate;
      
      linkAndDateDiv.appendChild(link);
      linkAndDateDiv.appendChild(dateInfo);

      const removeButton = document.createElement('button');
      removeButton.innerHTML = '<svg class="w-4 h-4 pointer-events-none" fill="currentColor" viewBox="0 0 20 20"><path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd"></path></svg>';
      removeButton.className = 'p-1.5 rounded-full text-neutral-400 hover:text-red-500 hover:bg-red-100 dark:hover:bg-red-700 dark:hover:text-red-400 transition-colors focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-1 dark:focus:ring-offset-neutral-800 flex-shrink-0';
      removeButton.title = 'Remove this bookmark';
      removeButton.setAttribute('aria-label', 'Remove ' + b.title);
      removeButton.onclick = function(event) {
          event.stopPropagation(); 
          SBM_removeSingleBookmark(b.url);
      };
      
      itemDiv.appendChild(linkAndDateDiv);
      itemDiv.appendChild(removeButton); 
      listContainer.appendChild(itemDiv);
  });
}

function SBM_removeSingleBookmark(urlToRemove) {
    let bookmarks = JSON.parse(localStorage.getItem('bookmarks')) || [];
    const initialLength = bookmarks.length;
    bookmarks = bookmarks.filter(b => b.url !== urlToRemove);

    if (bookmarks.length < initialLength) {
        localStorage.setItem('bookmarks', JSON.stringify(bookmarks));
        if(typeof showGlobalToast === 'function') showGlobalToast(" Bookmark removed.", "bg-orange-500 text-white");
        
        SBM_renderBookmarksList();      
        SBM_manageBadgeVisibility();    
        SBM_updateSidebarIconState();   

        const mainPageButton = document.querySelector('.post-meta-bookmark-button[data-post-url="' + urlToRemove + '"], .homepage-bookmark-button[data-post-url="' + urlToRemove + '"]');
        if (mainPageButton && typeof setInitialBookmarkButtonState === 'function') {
            setInitialBookmarkButtonState(mainPageButton);
        }
    }
}

function SBM_manageBadgeVisibility() {
  const bookmarks = JSON.parse(localStorage.getItem('bookmarks')) || [];
  const badge = document.getElementById('bookmarkBadge');
  if (!badge) return;

  if (bookmarks.length > 0) {
      badge.textContent = bookmarks.length;
      badge.classList.remove('hidden');
  } else {
      badge.classList.add('hidden');
  }
}

function SBM_clearAllBookmarks() {
  if (confirm("Are you sure you want to clear all saved bookmarks? This cannot be undone.")) {
      localStorage.removeItem('bookmarks');
      if(typeof showGlobalToast === 'function') showGlobalToast("🗑️ All bookmarks cleared!", "bg-red-500 text-white");
      
      SBM_updateSidebarIconState();   // Update sidebar's own icon
      SBM_manageBadgeVisibility();    // Update badge
      if (isSidebarBookmarksListVisible) SBM_renderBookmarksList(); // Re-render list if visible

      // **FIX FOR ISSUE 2: Update all on-page bookmark icons**
      const allOnPageBookmarkButtons = document.querySelectorAll('.post-meta-bookmark-button, .homepage-bookmark-button');
      allOnPageBookmarkButtons.forEach(button => {
          if (typeof setInitialBookmarkButtonState === 'function') {
              setInitialBookmarkButtonState(button); // This will set them to unbookmarked state
          }
      });
  }
}

document.addEventListener('DOMContentLoaded', () => {
  const sidebarIconArea = document.getElementById('sidebarBookmarkIconArea');
  const toggleListBtn = document.getElementById('toggleBookmarksButton');
  const clearAllBtn = document.getElementById('clearAllBookmarksButton');
  const searchInput = document.getElementById('bookmarkSearchInput');
  const sortSelect = document.getElementById('sortBookmarksSelect');
  const clearButtonInit = document.getElementById('clearAllBookmarksButton'); 

  if (sidebarIconArea) sidebarIconArea.addEventListener('click', SBM_toggleCurrentPageBookmark);
  if (toggleListBtn) toggleListBtn.addEventListener('click', SBM_toggleBookmarksListDisplay);
  if (clearAllBtn) clearAllBtn.addEventListener('click', SBM_clearAllBookmarks);
  if (searchInput) searchInput.addEventListener('input', SBM_renderBookmarksList);
  if (sortSelect) sortSelect.addEventListener('change', SBM_renderBookmarksList);
  
  SBM_updateSidebarIconState();
  SBM_manageBadgeVisibility();

  if(searchInput) searchInput.classList.add('hidden');
  if(sortSelect) sortSelect.classList.add('hidden');
  if(clearButtonInit) clearButtonInit.classList.add('hidden');
  const listContainerInit = document.getElementById('bookmarksListContainer');
  if(listContainerInit) listContainerInit.classList.add('hidden');

  if(typeof window.updateBookmarkBadgeGlobal === 'undefined') { // Ensure main theme can call this
    window.updateBookmarkBadgeGlobal = SBM_manageBadgeVisibility;
  }
  window.isBookmarksVisibleGlobal = isSidebarBookmarksListVisible; 
  window.showBookmarksListGlobal = SBM_renderBookmarksList; // Expose for main theme if needed for Issue 3
});

setTimeout(() => {
    if(typeof updateBookmarkBadgeGlobal === 'function' && window.updateBookmarkBadgeGlobal !== SBM_manageBadgeVisibility) {
        updateBookmarkBadgeGlobal();
    } else {
        SBM_manageBadgeVisibility();
    }
}, 100);

//]]]]><![CDATA[>
</script>]]></b:widget-setting>
              </b:widget-settings>
              <b:includable id='main'>
  <b:include name='widget-title'/>
  <div class='widget-content'>
    <data:content/>
  </div>
</b:includable>
            </b:widget>
            <b:widget id='LinkList1' locked='false' title='Label Page Custom Data' type='LinkList' version='2' visible='true'>
              <b:widget-settings>
                <b:widget-setting name='sorting'>NONE</b:widget-setting>
                <b:widget-setting name='text-0'>2 column</b:widget-setting>
                <b:widget-setting name='link-0'>|||Stay ahead in the crypto space with expert-written articles on cryptocurrency trends.</b:widget-setting>
              </b:widget-settings>
              <b:includable id='main'>
    <div class='widget-content'>
      <div id='label-customization-data-source' style='display:none;'>
        <b:if cond='data:links != null and data:links.size &gt; 0'>
          <ul>
            <b:loop values='data:links' var='link'>
              <li>
                <a expr:data-custom='data:link.target' expr:data-label='data:link.name'><data:link.name/></a>
              </li>
            </b:loop>
          </ul>
        </b:if>
      </div>
      <b:include name='quickedit'/>
    </div>
  </b:includable>
              <b:includable id='content'>
 <div class='widget-content'>
   <ul>
     <b:loop values='data:links' var='link'>
       <li><a expr:href='data:link.target'><data:link.name/></a></li>
     </b:loop>
   </ul>
 </div>
</b:includable>
            </b:widget>
            <b:widget id='HTML1' locked='false' title='Pagination Type Config' type='HTML' visible='true'>
              <b:widget-settings>
                <b:widget-setting name='content'><![CDATA[<div id="themeConfigPaginationType" style="display:none;">loadmore</div>]]></b:widget-setting>
              </b:widget-settings>
              <b:includable id='main'>
  <b:include name='widget-title'/>
  <div class='widget-content'>
    <data:content/>
  </div>
</b:includable>
            </b:widget>
          </b:section>
        </div>
      </aside>

    </div>
  </main> 
  <footer class='relative mt-16 bg-indigo-700 dark:bg-indigo-800 text-indigo-100 dark:text-indigo-200'>
    <svg class='absolute top-0 w-full h-6 -mt-5 sm:-mt-10 sm:h-16 text-indigo-700 dark:text-indigo-800' preserveAspectRatio='none' viewBox='0 0 1440 54'>
      <path d='M0 22L120 16.7C240 11 480 1.00001 720 0.700012C960 1.00001 1200 11 1320 16.7L1440 22V54H1320C1200 54 960 54 720 54C480 54 240 54 120 54H0V22Z' fill='currentColor'/>
    </svg>

    <div class='px-4 pt-12 mx-auto sm:max-w-xl md:max-w-full lg:max-w-screen-xl md:px-24 lg:px-8'>
      <div class='grid gap-10 row-gap-6 mb-8 sm:grid-cols-2 lg:grid-cols-6 footer-main-widgets'>
        <div class='sm:col-span-2'>
          <b:section class='footer-company-info w-full' id='footer-company-info' maxwidgets='1' name='Footer Company Info' showaddelement='yes'/>
        </div>

        <div class='grid grid-cols-2 gap-5 row-gap-8 lg:col-span-4 md:grid-cols-4'>
          <div>
            <b:section class='footer-links-1 w-full' id='footer-links-1' maxwidgets='1' name='Footer Links Col 1' showaddelement='yes'>
              <b:widget id='LinkList22' locked='false' title='Category' type='LinkList' version='2' visible='true'>
                <b:widget-settings>
                  <b:widget-setting name='link-3'>#</b:widget-setting>
                  <b:widget-setting name='sorting'>NONE</b:widget-setting>
                  <b:widget-setting name='text-1'>World</b:widget-setting>
                  <b:widget-setting name='link-1'>#</b:widget-setting>
                  <b:widget-setting name='text-0'>News</b:widget-setting>
                  <b:widget-setting name='link-2'>#</b:widget-setting>
                  <b:widget-setting name='text-3'>References</b:widget-setting>
                  <b:widget-setting name='link-0'>#</b:widget-setting>
                  <b:widget-setting name='text-2'>Games</b:widget-setting>
                </b:widget-settings>
                <b:includable id='main'/>
                <b:includable id='content'>
 <div class='widget-content'>
   <ul>
     <b:loop values='data:links' var='link'>
       <li><a expr:href='data:link.target'><data:link.name/></a></li>
     </b:loop>
   </ul>
 </div>
</b:includable>
              </b:widget>
            </b:section>
          </div>
          <div>
            <b:section class='footer-links-2 w-full' id='footer-links-2' maxwidgets='1' name='Footer Links Col 2' showaddelement='yes'>
              <b:widget id='LinkList21' locked='false' title='Cherry' type='LinkList' version='2' visible='true'>
                <b:widget-settings>
                  <b:widget-setting name='link-3'>#</b:widget-setting>
                  <b:widget-setting name='sorting'>NONE</b:widget-setting>
                  <b:widget-setting name='link-4'>#</b:widget-setting>
                  <b:widget-setting name='text-1'>eCommerce</b:widget-setting>
                  <b:widget-setting name='link-1'>#</b:widget-setting>
                  <b:widget-setting name='text-0'>Web</b:widget-setting>
                  <b:widget-setting name='link-2'>#</b:widget-setting>
                  <b:widget-setting name='text-3'>Entertainment</b:widget-setting>
                  <b:widget-setting name='link-0'>#</b:widget-setting>
                  <b:widget-setting name='text-2'>Business</b:widget-setting>
                  <b:widget-setting name='text-4'>Portfolio</b:widget-setting>
                </b:widget-settings>
                <b:includable id='main'/>
                <b:includable id='content'>
 <div class='widget-content'>
   <ul>
     <b:loop values='data:links' var='link'>
       <li><a expr:href='data:link.target'><data:link.name/></a></li>
     </b:loop>
   </ul>
 </div>
</b:includable>
              </b:widget>
            </b:section>
          </div>
          <div>
            <b:section class='footer-links-3 w-full' id='footer-links-3' maxwidgets='1' name='Footer Links Col 3' showaddelement='yes'>
              <b:widget id='LinkList23' locked='false' title='Apples' type='LinkList' version='2' visible='true'>
                <b:widget-settings>
                  <b:widget-setting name='link-3'>#</b:widget-setting>
                  <b:widget-setting name='sorting'>NONE</b:widget-setting>
                  <b:widget-setting name='link-4'>#</b:widget-setting>
                  <b:widget-setting name='text-1'>Brochure</b:widget-setting>
                  <b:widget-setting name='link-1'>#</b:widget-setting>
                  <b:widget-setting name='text-0'>Media</b:widget-setting>
                  <b:widget-setting name='link-2'>#</b:widget-setting>
                  <b:widget-setting name='text-3'>Educational</b:widget-setting>
                  <b:widget-setting name='link-0'>#</b:widget-setting>
                  <b:widget-setting name='text-2'>Nonprofit</b:widget-setting>
                  <b:widget-setting name='text-4'>Projects</b:widget-setting>
                </b:widget-settings>
                <b:includable id='main'/>
                <b:includable id='content'>
 <div class='widget-content'>
   <ul>
     <b:loop values='data:links' var='link'>
       <li><a expr:href='data:link.target'><data:link.name/></a></li>
     </b:loop>
   </ul>
 </div>
</b:includable>
              </b:widget>
            </b:section>
          </div>
          <div>
            <b:section class='footer-links-4 w-full' id='footer-links-4' maxwidgets='1' name='Footer Links Col 4' showaddelement='yes'>
              <b:widget id='LinkList24' locked='false' title='Business' type='LinkList' version='2' visible='true'>
                <b:widget-settings>
                  <b:widget-setting name='link-3'>#</b:widget-setting>
                  <b:widget-setting name='sorting'>NONE</b:widget-setting>
                  <b:widget-setting name='text-1'>Personal</b:widget-setting>
                  <b:widget-setting name='link-1'>#</b:widget-setting>
                  <b:widget-setting name='text-0'>Infopreneur</b:widget-setting>
                  <b:widget-setting name='link-2'>#</b:widget-setting>
                  <b:widget-setting name='text-3'>Forum</b:widget-setting>
                  <b:widget-setting name='link-0'>#</b:widget-setting>
                  <b:widget-setting name='text-2'>Wiki</b:widget-setting>
                </b:widget-settings>
                <b:includable id='main'/>
                <b:includable id='content'>
 <div class='widget-content'>
   <ul>
     <b:loop values='data:links' var='link'>
       <li><a expr:href='data:link.target'><data:link.name/></a></li>
     </b:loop>
   </ul>
 </div>
</b:includable>
              </b:widget>
            </b:section>
          </div>
        </div>
      </div>

      <div class='flex flex-col-reverse justify-between pt-5 pb-10 border-t border-indigo-500 dark:border-indigo-600 lg:flex-row'>
        <div class='text-sm text-indigo-100 dark:text-indigo-200 text-center lg:text-left'>
          <b:section class='footer-copyright w-full' id='footer-copyright' maxwidgets='1' name='Footer Copyright' showaddelement='yes'/>
           <p class='text-xs mt-2'>Powered by <a class='hover:underline' href='https://www.blogger.com' rel='noopener' target='_blank'>Blogger</a>.</p>
        </div>
        <div class='flex items-center justify-center lg:justify-end mt-4 space-x-4 lg:mt-0 footer-social-media'>
          <b:section class='footer-social-icons w-full' id='footer-social-icons' maxwidgets='1' name='Footer Social Icons' showaddelement='yes'>
            <b:widget id='LinkList11' locked='false' title='Social Media' type='LinkList' version='2' visible='true'>
              <b:widget-settings>
                <b:widget-setting name='sorting'>NONE</b:widget-setting>
                <b:widget-setting name='text-1'><![CDATA[<svg viewBox="0 0 30 30" fill="currentColor" class="h-6 w-6"><circle cx="15" cy="15" r="4"></circle><path d="M19.999,3h-10C6.14,3,3,6.141,3,10.001v10C3,23.86,6.141,27,10.001,27h10C23.86,27,27,23.859,27,19.999v-10 C27,6.14,23.859,3,19.999,3z M15,21c-3.309,0-6-2.691-6-6s2.691-6,6-6s6,2.691,6,6S18.309,21,15,21z M22,9c-0.552,0-1-0.448-1-1 c0-0.552,0.448-1,1-1s1,0.448,1,1C23,8.552,22.552,9,22,9z"></path></svg>]]></b:widget-setting>
                <b:widget-setting name='link-1'>#</b:widget-setting>
                <b:widget-setting name='text-0'><![CDATA[<svg viewBox="0 0 24 24" fill="currentColor" class="h-5 w-5"><path d="M24,4.6c-0.9,0.4-1.8,0.7-2.8,0.8c1-0.6,1.8-1.6,2.2-2.7c-1,0.6-2,1-3.1,1.2c-0.9-1-2.2-1.6-3.6-1.6 c-2.7,0-4.9,2.2-4.9,4.9c0,0.4,0,0.8,0.1,1.1C7.7,8.1,4.1,6.1,1.7,3.1C1.2,3.9,1,4.7,1,5.6c0,1.7,0.9,3.2,2.2,4.1 C2.4,9.7,1.6,9.5,1,9.1c0,0,0,0,0,0.1c0,2.4,1.7,4.4,3.9,4.8c-0.4,0.1-0.8,0.2-1.3,0.2c-0.3,0-0.6,0-0.9-0.1c0.6,2,2.4,3.4,4.6,3.4 c-1.7,1.3-3.8,2.1-6.1,2.1c-0.4,0-0.8,0-1.2-0.1c2.2,1.4,4.8,2.2,7.5,2.2c9.1,0,14-7.5,14-14c0-0.2,0-0.4,0-0.6 C22.5,6.4,23.3,5.5,24,4.6z"></path></svg>]]></b:widget-setting>
                <b:widget-setting name='link-2'>#</b:widget-setting>
                <b:widget-setting name='link-0'>#</b:widget-setting>
                <b:widget-setting name='text-2'><![CDATA[<svg viewBox="0 0 24 24" fill="currentColor" class="h-5 w-5"><path d="M22,0H2C0.895,0,0,0.895,0,2v20c0,1.105,0.895,2,2,2h11v-9h-3v-4h3V8.413c0-3.1,1.893-4.788,4.659-4.788 c1.325,0,2.463,0.099,2.795,0.143v3.24l-1.918,0.001c-1.504,0-1.795,0.715-1.795,1.763V11h4.44l-1,4h-3.44v9H22c1.105,0,2-0.895,2-2 V2C24,0.895,23.105,0,22,0z"></path></svg>]]></b:widget-setting>
              </b:widget-settings>
              <b:includable id='main'/>
              <b:includable id='content'>
 <div class='widget-content'>
   <ul>
     <b:loop values='data:links' var='link'>
       <li><a expr:href='data:link.target'><data:link.name/></a></li>
     </b:loop>
   </ul>
 </div>
</b:includable>
            </b:widget>
          </b:section>
        </div>
      </div>
    </div>
  </footer>
    </div> 

<script type='text/javascript'>
//<![CDATA[
    // Sidebar and Header Adjustment Script - Refined Scroll Restoration
    document.addEventListener('DOMContentLoaded', function() {
        // ... (all other variables and functions like pageLeftSidebar, mainNav, updateARIAAttributes, etc., remain the same as in the previous good version)
        const pageLeftSidebar = document.getElementById('page-left-sidebar');
        const miniNav = document.getElementById('mini-nav');
        const mainNav = document.getElementById('main-nav');
        const mainNavScrollableContent = mainNav ? mainNav.querySelector('.original-sidebar-left-content .flex-grow.overflow-y-auto') : null;
        const desktopToggle = document.getElementById('desktop-main-sidebar-toggle');
        const mobileToggle = document.getElementById('mobile-page-sidebar-toggle');
        const pageContentWrapper = document.getElementById('page-content-wrapper');
        const pageHeader = document.getElementById('page-header');

        const miniNavWidth = 64;
        const mainNavWidthExpanded = 256;

        let isDesktopMainNavLockedOpen = localStorage.getItem('desktopMainNavLockedOpen') === 'true';
        let isHoveringSidebar = false;
        let hoverTimeout = null;
        let sessionMainNavScrollPosition = 0;

if (!isDesktopMainNavLockedOpen) {
    const lastLockedScroll = parseInt(localStorage.getItem('mainNavScrollPosition')) || 0;
    sessionMainNavScrollPosition = lastLockedScroll;
}

        function updateARIAAttributes() {
            const isMobile = window.innerWidth < 768;
            const isMobileSidebarActive = pageLeftSidebar ? pageLeftSidebar.classList.contains('mobile-active') : false;

            if (mobileToggle) mobileToggle.setAttribute('aria-expanded', isMobileSidebarActive);
            if (desktopToggle) desktopToggle.setAttribute('aria-expanded', isMobile ? isMobileSidebarActive : isDesktopMainNavLockedOpen);
            if (pageLeftSidebar) pageLeftSidebar.setAttribute('aria-hidden', isMobile ? !isMobileSidebarActive : 'false');
        }

        function updateLayout(animate = true, isInitialLoad = false) {
            if (!mainNav || !pageContentWrapper || !pageHeader || !pageLeftSidebar || !miniNav || !mainNavScrollableContent) {
                // console.warn("Sidebar script: Critical elements not found."); // Keep if helpful
                return;
            }

const additionalSpaceBelowHeader = 16; 
            const currentHeaderHeight = pageHeader.offsetHeight || 64;
            pageContentWrapper.style.paddingTop = currentHeaderHeight + 'px';

            const transitionSetting = animate ? '' : 'none';
            mainNav.style.transition = transitionSetting;
            pageContentWrapper.style.transition = transitionSetting;
            pageHeader.style.transition = transitionSetting;
            if (pageLeftSidebar) pageLeftSidebar.style.transition = animate ? 'transform 0.3s ease-in-out' : 'none';

            const isCurrentlyMobile = window.innerWidth < 768;

            if (mainNavScrollableContent && mainNav.offsetWidth > 0 && !mainNav.classList.contains('collapsed')) {
                sessionMainNavScrollPosition = mainNavScrollableContent.scrollTop;
            }

            if (!isCurrentlyMobile) {
                pageLeftSidebar.classList.remove('mobile-active');
                let totalSidebarWidth;
                const shouldMainNavBeOpen = isDesktopMainNavLockedOpen || isHoveringSidebar;

                if (shouldMainNavBeOpen) {
                    mainNav.classList.remove('collapsed');
                    mainNav.style.width = mainNavWidthExpanded + 'px';
                    mainNav.style.paddingLeft = '';
                    mainNav.style.paddingRight = '';
                    totalSidebarWidth = miniNavWidth + mainNavWidthExpanded;

                    if (mainNavScrollableContent) {
                        setTimeout(() => {
                            mainNavScrollableContent.style.display = 'block';
                            void mainNavScrollableContent.offsetWidth;

                            if (isDesktopMainNavLockedOpen) {
                                const storedScroll = parseInt(localStorage.getItem('mainNavScrollPosition')) || 0;
                                // if (isInitialLoad) {
                                //     console.log('[Sidebar] Initial Load - Attempting to restore scroll for LOCKED sidebar. Stored:', storedScroll, 'ScrollHeight:', mainNavScrollableContent.scrollHeight, 'ClientHeight:', mainNavScrollableContent.clientHeight);
                                // }
                                if (mainNavScrollableContent.scrollHeight > mainNavScrollableContent.clientHeight || storedScroll === 0) {
                                    mainNavScrollableContent.scrollTop = storedScroll;
                                }
                                // else if (isInitialLoad) {
                                //     console.warn('[Sidebar] Content not scrollable or scrollHeight not ready for locked sidebar.');
                                // }
                            } else {
                                mainNavScrollableContent.scrollTop = sessionMainNavScrollPosition;
                            }
                        }, isInitialLoad ? 150 : 0);
                    }
                } else {
                    mainNav.classList.add('collapsed');
                    mainNav.style.width = '';
                    mainNav.style.paddingLeft = '';
                    mainNav.style.paddingRight = '';
                    totalSidebarWidth = miniNavWidth;
                }
                pageContentWrapper.style.marginLeft = totalSidebarWidth + 'px';
                pageHeader.style.left = totalSidebarWidth + 'px';
                pageHeader.style.width = `calc(100% - ${totalSidebarWidth}px)`;
            } else {
                pageContentWrapper.style.marginLeft = '0px';
                pageHeader.style.left = '0px';
                pageHeader.style.width = '100%';

                if (pageLeftSidebar.classList.contains('mobile-active')) {
                    mainNav.classList.remove('collapsed');
                    mainNav.style.width = mainNavWidthExpanded + 'px';
                    mainNav.style.paddingLeft = '';
                    mainNav.style.paddingRight = '';
                    if (mainNavScrollableContent) {
                        setTimeout(() => {
                            mainNavScrollableContent.style.display = 'block';
                            void mainNavScrollableContent.offsetWidth;
                            mainNavScrollableContent.scrollTop = sessionMainNavScrollPosition;
                         }, isInitialLoad ? 150 : 0);
                    }
                } else {
                    mainNav.classList.add('collapsed');
                    mainNav.style.width = '0px';
                    mainNav.style.paddingLeft = '0px';
                    mainNav.style.paddingRight = '0px';
                }
            }

            updateARIAAttributes();

            if (!animate) {
                setTimeout(() => {
                    if(mainNav) mainNav.style.transition = '';
                    if(pageContentWrapper) pageContentWrapper.style.transition = '';
                    if(pageHeader) pageHeader.style.transition = '';
                    if(pageLeftSidebar) pageLeftSidebar.style.transition = '';
                }, 50);
            }
        }

        if (desktopToggle) {
            desktopToggle.addEventListener('click', function(event) {
                event.stopPropagation();
                if (window.innerWidth >= 768) { // Desktop View

                    // --- MODIFIED LOGIC FOR SAVING SCROLL ---
                    // If it WAS locked (isDesktopMainNavLockedOpen is true) and is now being UNLOCKED:
                    // Save its scroll position.
                    if (isDesktopMainNavLockedOpen) {
                        if (mainNavScrollableContent && mainNav.offsetWidth > 0 && !mainNav.classList.contains('collapsed')) {
                            const currentScroll = mainNavScrollableContent.scrollTop;
                            localStorage.setItem('mainNavScrollPosition', currentScroll);
                            // console.log('[Sidebar] Desktop toggle (was locked, now unlocking): Saved mainNavScrollPosition =', currentScroll);
                        }
                    }
                    // If it was UNLOCKED (isDesktopMainNavLockedOpen is false) and is now being LOCKED:
                    // We DO NOT save scroll here. We want updateLayout to use the *previously* stored scroll
                    // from when it was last locked and open.
                    // --- END OF MODIFIED LOGIC ---

                    isDesktopMainNavLockedOpen = !isDesktopMainNavLockedOpen; // Toggle the state
                    localStorage.setItem('desktopMainNavLockedOpen', isDesktopMainNavLockedOpen.toString());
                    isHoveringSidebar = isDesktopMainNavLockedOpen; // If locked, it's effectively "hovering"

                    if (!isDesktopMainNavLockedOpen && mainNavScrollableContent) { // If just became unlocked
                        // Ensure session scroll is up-to-date, though it might have been set by updateLayout already
                        sessionMainNavScrollPosition = mainNavScrollableContent.scrollTop;
                    }
                } else { // Mobile View (desktop toggle acts as mobile toggle here)
                    if (pageLeftSidebar) {
                        if (pageLeftSidebar.classList.contains('mobile-active') && mainNavScrollableContent) {
                             sessionMainNavScrollPosition = mainNavScrollableContent.scrollTop;
                        }
                        pageLeftSidebar.classList.toggle('mobile-active');
                        document.body.classList.toggle('mobile-sidebar-active', pageLeftSidebar.classList.contains('mobile-active'));
                    }
                }
                updateLayout(); // This will handle applying the layout and restoring scroll if now locked
            });
        }

        // ... (mobileToggle, mouseenter, mouseleave, document click listeners, beforeunload listener remain the same)
        if (mobileToggle && pageLeftSidebar) {
            mobileToggle.addEventListener('click', function(event) {
                event.stopPropagation();
                if (pageLeftSidebar.classList.contains('mobile-active') && mainNavScrollableContent) {
                    sessionMainNavScrollPosition = mainNavScrollableContent.scrollTop;
                }
                pageLeftSidebar.classList.toggle('mobile-active');
                document.body.classList.toggle('mobile-sidebar-active', pageLeftSidebar.classList.contains('mobile-active'));
                updateLayout();
            });
        }

        if (pageLeftSidebar && mainNavScrollableContent) {
            pageLeftSidebar.addEventListener('mouseenter', function() {
                if (window.innerWidth >= 768) {
                    clearTimeout(hoverTimeout);
                    isHoveringSidebar = true;
                    if (!isDesktopMainNavLockedOpen) {
                        updateLayout();
                    }
                }
            });

            pageLeftSidebar.addEventListener('mouseleave', function() {
                if (window.innerWidth >= 768) {
                    hoverTimeout = setTimeout(() => {
                        isHoveringSidebar = false;
                        if (!isDesktopMainNavLockedOpen) {
                            updateLayout();
                        }
                    }, 100);
                }
            });
        }

        document.addEventListener('click', function(event) {
          if (window.innerWidth < 768 && pageLeftSidebar && pageLeftSidebar.classList.contains('mobile-active')) {
            const isClickInsideSidebar = pageLeftSidebar.contains(event.target);
            const isClickOnMobileToggle = mobileToggle ? mobileToggle.contains(event.target) : false;
            const isClickOnDesktopToggleInMiniNav = desktopToggle ? desktopToggle.contains(event.target) : false;

            if (!isClickInsideSidebar && !isClickOnMobileToggle && !isClickOnDesktopToggleInMiniNav) {
              if (mainNavScrollableContent) sessionMainNavScrollPosition = mainNavScrollableContent.scrollTop;
              pageLeftSidebar.classList.remove('mobile-active');
              document.body.classList.remove('mobile-sidebar-active');
              updateLayout();
            }
          }
        });

        window.addEventListener('beforeunload', function() {
            if (window.innerWidth >= 768 && isDesktopMainNavLockedOpen && mainNav && mainNavScrollableContent && mainNav.offsetWidth > 0 && !mainNav.classList.contains('collapsed')) {
                const currentScroll = mainNavScrollableContent.scrollTop;
                localStorage.setItem('mainNavScrollPosition', currentScroll);
                // console.log('[Sidebar] Before Unload: Saved mainNavScrollPosition =', currentScroll);
            }
        });
        
        // Initial setup
        window.addEventListener('resize', () => updateLayout(false, false));
        updateARIAAttributes();
        updateLayout(false, true);

    });
//]]>
</script>
<script type='text/javascript'>
    // Theme Toggle Script
    document.addEventListener(&#39;DOMContentLoaded&#39;, function() {
      const themeToggleBtn = document.getElementById(&#39;theme-toggle&#39;);
      const htmlElement = document.documentElement;

      function applyThemeVisuals() { // Renamed to avoid conflict if a global applyTheme exists
        const themeToggleDarkIcon = document.getElementById(&#39;theme-toggle-dark-icon&#39;);
        const themeToggleLightIcon = document.getElementById(&#39;theme-toggle-light-icon&#39;);
        const isDarkMode = htmlElement.classList.contains(&#39;dark&#39;);

        if (isDarkMode) {
          if(themeToggleDarkIcon) themeToggleDarkIcon.classList.add(&#39;hidden&#39;);
          if(themeToggleLightIcon) themeToggleLightIcon.classList.remove(&#39;hidden&#39;);
        } else {
          if(themeToggleDarkIcon) themeToggleDarkIcon.classList.remove(&#39;hidden&#39;);
          if(themeToggleLightIcon) themeToggleLightIcon.classList.add(&#39;hidden&#39;);
        }
      }
      
      function setThemePreference(theme) {
        htmlElement.classList.remove(&#39;dark&#39;, &#39;light&#39;); // Clear existing
        htmlElement.classList.add(theme);
        localStorage.setItem(&#39;theme&#39;, theme);
        applyThemeVisuals();
      }

      // Apply theme on initial load (after inline script in head)
      const storedTheme = localStorage.getItem(&#39;theme&#39;);
      // Ensure class is set correctly based on storage or default
      if (storedTheme === &#39;dark&#39;) {
        htmlElement.classList.add(&#39;dark&#39;);
      } else {
        htmlElement.classList.remove(&#39;dark&#39;); // Ensure it&#39;s light if not dark
      }
      applyThemeVisuals();


      if (themeToggleBtn) {
        themeToggleBtn.addEventListener(&#39;click&#39;, function() {
          const isDarkMode = htmlElement.classList.contains(&#39;dark&#39;);
          setThemePreference(isDarkMode ? &#39;light&#39; : &#39;dark&#39;);
        });
      }
    });
  </script>

  <b:include data='blog' name='quickedit'/>

  <script type='text/javascript'>
    var IS_MULTIPLE_ITEMS_PAGE_GLOBAL = <b:eval expr='data:view.isMultipleItems and !data:view.isPost and !data:view.isPage'/>;
    var applyViewModeGlobal; 
  </script>

  <script type='text/javascript'>
  //<![CDATA[
  // Sticky Header Script
  document.addEventListener('DOMContentLoaded', function() {
      const header = document.querySelector('header.fixed'); // Your fixed header
      if (!header) return;

      let lastScrollTop = 0;
      const delta = 10; // Threshold for scroll detection to avoid jitter
      const headerHeight = header.offsetHeight;

      // Initial check in case page is already scrolled (e.g. after refresh)
      if (window.pageYOffset > headerHeight) {
          header.style.top = `-${headerHeight}px`;
      } else {
          header.style.top = '0';
      }
      lastScrollTop = window.pageYOffset;


      window.addEventListener('scroll', function() {
          const scrollTop = window.pageYOffset || document.documentElement.scrollTop;

          if (Math.abs(lastScrollTop - scrollTop) <= delta) {
              return;
          }

          if (scrollTop > lastScrollTop && scrollTop > headerHeight) {
              // Scroll Down
              header.style.top = `-${headerHeight}px`;
          } else {
              // Scroll Up or near top
              if (scrollTop + window.innerHeight < document.documentElement.scrollHeight) { // Don't show if at bottom
                header.style.top = '0';
              }
          }
          lastScrollTop = scrollTop <= 0 ? 0 : scrollTop; // For Mobile or negative scrolling
      }, false);
  });
  //]]>
  </script>

  <script type='text/javascript'>
  //<![CDATA[
  document.addEventListener('DOMContentLoaded', function() {
    const VIEW_MODE_KEY = 'blogViewMode';
    const DEFAULT_VIEW = 'grid'; // Can be 'list' or 'grid'

    const viewToggleButton = document.getElementById('view-toggle-button');
    const gridIcon = document.getElementById('grid-icon');
    const listIcon = document.getElementById('list-icon');
    const postsContainer = document.querySelector('.blog-posts.hfeed.container');
    const viewToggleContainer = document.getElementById('view-toggle-container');

    // Use the global variable set by Blogger
    const isMultipleItemsPage = window.IS_MULTIPLE_ITEMS_PAGE_GLOBAL;

    if (!postsContainer) {
      // console.log('[ViewToggle] Posts container not found. Hiding toggle.');
      if (viewToggleContainer) viewToggleContainer.style.display = 'none';
      return;
    }
    
    if (typeof isMultipleItemsPage === 'undefined') {
        // console.warn('[ViewToggle] IS_MULTIPLE_ITEMS_PAGE_GLOBAL is undefined. Hiding toggle.');
        if (viewToggleContainer) viewToggleContainer.style.display = 'none';
        return;
    }

    if (!isMultipleItemsPage) {
      // console.log('[ViewToggle] Not a multiple items page. Ensuring no view classes on container and hiding toggle.');
      if (viewToggleContainer) viewToggleContainer.style.display = 'none';
      // Clean up any residual classes if somehow applied
      if (postsContainer) {
          postsContainer.classList.remove(
              'view-grid-active', 'view-list-active',
              'grid', 'grid-cols-1', 'sm:grid-cols-2', 'lg:grid-cols-2', 'gap-4', 'sm:gap-6',
              'flex', 'flex-col', 'space-y-6'
          );
      }
      return;
    }

    // This function is now globally available via window.applyViewModeGlobal
    function applyViewMode(mode, savePreference = true, itemsToStyle = null) {
      if (!postsContainer) {
          // console.warn('[ViewToggle] applyViewMode called but postsContainer is not found.');
          return;
      }
      // console.log(`[ViewToggle] Applying mode: ${mode}. Items to style:`, itemsToStyle ? itemsToStyle.length : 'all');

      // Clear existing layout classes from the main container
      postsContainer.classList.remove(
          'view-grid-active', 'view-list-active',
          'grid', 'grid-cols-1', 'sm:grid-cols-2', 'lg:grid-cols-3', 'lg:grid-cols-2', 'gap-4', 'sm:gap-6',
          'flex', 'flex-col', 'space-y-6',
          // Add any other grid-cols-* classes you might use to this list
          'md:grid-cols-2', 'lg:grid-cols-3', 'xl:grid-cols-3' // <-- ADD xl:grid-cols-3 here
      );

      // Apply new layout classes to the main container
      if (mode === 'list') {
          postsContainer.classList.add('view-list-active', 'flex', 'flex-col', 'space-y-6');
      } else { // Default to grid
          postsContainer.classList.add('view-grid-active', 'grid', 'grid-cols-1', 'sm:grid-cols-2', 'lg:grid-cols-2', 'xl:grid-cols-3', 'gap-4', 'sm:gap-6');
      }
      // Determine which items to style: either a specific set (for new posts) or all posts
      const finalItems = itemsToStyle ? itemsToStyle : Array.from(postsContainer.querySelectorAll('.post-item'));
      
      finalItems.forEach(item => {
          if (!item || typeof item.classList === 'undefined') {
              // console.warn('[ViewToggle] Invalid item found in finalItems:', item);
              return; 
          }

          const thumbnailLink = item.querySelector('.post-thumbnail-link');
          const thumbnail = item.querySelector('.post-thumbnail'); // The img or placeholder div
          const readMoreLink = item.querySelector('.read-more-link');
          const postContentWrapper = item.querySelector('.post-content-wrapper');


          // Reset classes that differ between views
          item.classList.remove('md:flex-row', 'md:items-start', 'md:gap-5');
          if (thumbnailLink) {
              thumbnailLink.classList.remove(
                  'md:w-1/3', 'md:w-2/5', 'md:w-1/2', 'md:max-w-xs', 'flex-shrink-0',
                  'aspect-w-16', 'aspect-h-9', // Specific aspect ratio for thumbnails
                  'md:mt-1', 'md:mt-2'
              );
          }
          if (thumbnail) { // The actual image or placeholder
             thumbnail.classList.remove('md:aspect-auto'); // Ensure this is not forcing aspect ratio if parent link handles it
             thumbnail.classList.add('object-cover'); // Should always be cover
          }
          if (readMoreLink) {
              readMoreLink.classList.remove('md:!opacity-100');
          }


          // Apply mode-specific classes
          if (mode === 'list') {
              item.classList.add('md:flex-row', 'md:items-start', 'md:gap-5');
              if (thumbnailLink) {
                  thumbnailLink.classList.add('md:w-2/5', 'flex-shrink-0', 'aspect-w-16', 'aspect-h-9'); // For list view, make thumbnail a fixed width part and keep 16:9
              }
              if (readMoreLink) { readMoreLink.classList.add('md:!opacity-100'); }
          } else { // Grid mode
              if (thumbnailLink) {
                  thumbnailLink.classList.add('aspect-w-16', 'aspect-h-9'); // Ensure 16:9 for grid
              }
          }
      });

      // Update toggle button icons
      if (gridIcon && listIcon) {
          if (mode === 'list') {
              gridIcon.classList.add('hidden');
              listIcon.classList.remove('hidden');
          } else {
              gridIcon.classList.remove('hidden');
              listIcon.classList.add('hidden');
          }
      }

      if (savePreference) {
          localStorage.setItem(VIEW_MODE_KEY, mode);
          // console.log(`[ViewToggle] Saved view mode preference: ${mode}`);
      }
    }
    // Expose applyViewMode to global scope
    window.applyViewModeGlobal = applyViewMode;


    function toggleViewButtonVisibility() {
      if (viewToggleContainer && isMultipleItemsPage) { // Only proceed if it's a multi-item page
        if (window.matchMedia('(min-width: 768px)').matches) { // md breakpoint
          viewToggleContainer.classList.remove('hidden');
          viewToggleContainer.classList.add('md:flex');
        } else {
          viewToggleContainer.classList.add('hidden');
          viewToggleContainer.classList.remove('md:flex');
        }
      } else if (viewToggleContainer) {
         viewToggleContainer.style.display = 'none'; // Explicitly hide if not multi-item page
      }
    }

    // Initial setup
    toggleViewButtonVisibility(); // Call on load
    window.addEventListener('resize', toggleViewButtonVisibility); // Adjust on resize
    
    let currentView = localStorage.getItem(VIEW_MODE_KEY) || DEFAULT_VIEW;
    if (typeof window.applyViewModeGlobal === 'function') {
      window.applyViewModeGlobal(currentView, true); // Apply initially without styling specific items yet
    } else {
      // console.error("[ViewToggle] applyViewModeGlobal is not defined on window at init.");
    }


    if (viewToggleButton) {
      viewToggleButton.addEventListener('click', function() {
        // Determine new view based on current active class on postsContainer
        const newView = postsContainer.classList.contains('view-grid-active') ? 'list' : 'grid';
        // console.log(`[ViewToggle] Toggle button clicked. New view will be: ${newView}`);
        if (typeof window.applyViewModeGlobal === 'function') {
          window.applyViewModeGlobal(newView, true);
        }
      });
    } else {
      // console.log('[ViewToggle] View toggle button not found.');
    }

  });
  //]]>
  </script>
  
  <script type='text/javascript'>
  //<![CDATA[

  var myThemeSettings = {
      pagination: { typeString: 'default', typeNumeric: 1, numPagesToShow: 5 }
  };

  function formatBloggerPostToHTML(entry, blogUrl) {
      const postUrl = entry.link?.find(link => link.rel === 'alternate')?.href || '#';
      const postTitleEntry = entry.title?.$t || 'Untitled Post';
      // Sanitize postTitle for attributes: replace single quotes for HTML attributes, and encode for general use if needed elsewhere.
      const postTitleForAttr = postTitleEntry.replace(/'/g, "&apos;").replace(/"/g, "&quot;");


      let postId = '';
      if (entry.id && entry.id.$t) {
          const idParts = entry.id.$t.split('.post-');
          if (idParts.length > 1) {
              postId = idParts[1];
          }
      }

      let rawSnippetSource = entry.summary?.$t?.trim() || entry.content?.$t || '';
      let postSnippet = '';
      if (rawSnippetSource) {
          const tempDiv = document.createElement('div'); tempDiv.innerHTML = rawSnippetSource;
          let textContent = (tempDiv.textContent || tempDiv.innerText || "").replace(/\s\s+/g, ' ').trim();
          postSnippet = textContent.substring(0, 150) + (textContent.length > 150 ? '...' : '');
      }
      
      let imageUrl = '';
      let imageSrcset = '';
      const imageSizesAttr = '(max-width: 639px) 90vw, (max-width: 1023px) 45vw, 360px'; // Define sizes attribute

      if (entry.media$thumbnail?.url) {
          const baseImageUrl = entry.media$thumbnail.url;
          // For src, use a reasonably large, 16:9 cropped version
          imageUrl = baseImageUrl.replace(/\/s\d+(-c)?\//, '/w720-h405-c/'); 

          const srcsetWidths = [320, 480, 640, 720, 1024]; // Example widths
          imageSrcset = srcsetWidths.map(w => {
              const h = Math.round(w * 9 / 16); // Calculate height for 16:9
              return `${baseImageUrl.replace(/\/s\d+(-c)?\//, `/w${w}-h${h}-c/`)} ${w}w`;
          }).join(', ');

      } else if (entry.content?.$t) { // Fallback to extract from content
          const contentMatch = entry.content.$t.match(/<img[^>]+src\s*=\s*['"]([^'"]+)['"]/i);
          if (contentMatch && contentMatch[1]) {
               imageUrl = contentMatch[1];
               if (imageUrl.includes('blogger.googleusercontent.com')) { // Try to build srcset if it's a blogger image
                  const baseImageUrl = imageUrl;
                  const srcsetWidths = [320, 480, 640, 720, 1024];
                   imageSrcset = srcsetWidths.map(w => {
                       const h = Math.round(w * 9 / 16);
                       return `${baseImageUrl.replace(/\/s\d+(-c)?\//, `/w${w}-h${h}-c/`)} ${w}w`;
                   }).join(', ');
                   // Ensure src is also a good default
                   imageUrl = baseImageUrl.replace(/\/s\d+(-c)?\//, '/w720-h405-c/');
               }
          }
      }

      const authorName = entry.author?.[0]?.name?.$t || 'Author';
      const authorPhotoUrl = entry.author?.[0]?.gd$image?.src?.replace(/\/s\d+(-c)?\//, '/s48-c/') || ''; // s48 for small avatar
      const publishedDate = new Date(entry.published.$t);
      const formattedDate = publishedDate.toLocaleDateString(navigator.language || 'en-US', { month: 'short', day: 'numeric' });
      const isoDate = publishedDate.toISOString();
      
      let labelsHtml = '';
      if (entry.category && entry.category.length > 0) {
          labelsHtml += `<div class='post-labels-container flex flex-wrap gap-2'>`; // No mb-3 here, parent div has it
          entry.category.slice(0, 2).forEach(cat => { // Limit to 2 labels
              labelsHtml += `<a href='${blogUrl}/search/label/${encodeURIComponent(cat.term)}' class='text-xs font-medium px-2.5 py-1 rounded-full bg-indigo-100 text-indigo-700 dark:bg-indigo-700 dark:text-indigo-200 hover:bg-indigo-200 dark:hover:bg-indigo-600 transition-colors'>${cat.term}</a>`;
          });
          labelsHtml += `</div>`;
      } else {
          labelsHtml = `<div class='h-6'></div>`; // Placeholder if no labels to maintain alignment
      }

      const bookmarkButtonHtml = postId ? `
          <button aria-label='Bookmark this post'
                  class='homepage-bookmark-button p-1.5 rounded-full text-neutral-400 hover:text-indigo-500 dark:text-neutral-500 dark:hover:text-indigo-400 focus:outline-none dynamic-bookmark-button'
                  data-post-id='${postId}'
                  data-post-title='${postTitleForAttr}'
                  data-post-url='${postUrl}'
                  type='button'>
              <svg class='w-5 h-5 homepage-bookmark-svg-element' fill='none' stroke='currentColor' stroke-width='1.5' viewBox='0 0 16 20' xmlns='http://www.w3.org/2000/svg'>
                  <path class='homepage-bookmark-svg-path' d='M14 18l-7-5-7 5V2a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2v16z'/>
              </svg>
          </button>
      ` : "<div class='w-8 h-8'></div>"; // Placeholder if no postId for button, to maintain layout

      const articleElement = document.createElement('article');
      articleElement.className = 'post-item group bg-white dark:bg-neutral-800 shadow-lg rounded-lg overflow-hidden flex flex-col loading-post-initial'; // Ensure loading-post-initial for animation
      
      let thumbnailHtml = '';
      if (imageUrl) {
          thumbnailHtml = `
              <a href='${postUrl}' class='post-thumbnail-link block relative aspect-w-16 aspect-h-9'>
                <img alt='${postTitleForAttr}'
                     src='${imageUrl}'
                     ${imageSrcset ? `srcset='${imageSrcset}'` : ''}
                     sizes='${imageSizesAttr}'
                     class='post-thumbnail w-full h-full object-cover transition-transform duration-300 ease-in-out group-hover:scale-105'
                     loading='lazy' />
              </a>`;
      } else {
          thumbnailHtml = `
              <a href='${postUrl}' class='post-thumbnail-link block relative'>
                <div class='post-thumbnail w-full bg-neutral-200 dark:bg-neutral-700 flex items-center justify-center text-neutral-400 dark:text-neutral-500 aspect-[16/9]'> {/* Placeholder div maintains aspect ratio */}
                  <svg class='w-16 h-16' fill='currentColor' viewBox='0 0 20 20'><path fill-rule='evenodd' d='M4 3a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V5a2 2 0 00-2-2H4zm12 12H4l4-8 3 6 2-4 3 6z' clip-rule='evenodd'/></svg>
                </div>
              </a>`;
      }
      
      articleElement.innerHTML = `
          ${thumbnailHtml}
          <div class='post-content-wrapper p-4 sm:p-5 flex flex-col flex-grow'>
              <div class='post-labels-and-bookmark-container flex justify-between items-center mb-3'>
                  ${labelsHtml}
                  ${bookmarkButtonHtml}
              </div>
              <h3 class='text-xl md:text-2xl font-bold text-neutral-900 dark:text-white mb-3 leading-tight'>
                  <a class='hover:text-indigo-600 dark:hover:text-indigo-400 transition-colors duration-200 line-clamp-3' href='${postUrl}'>
                      ${postTitleEntry}
                  </a>
              </h3>
              <div class='post-snippet-container text-neutral-600 dark:text-neutral-400 text-sm mb-4 line-clamp-2'>
                  ${postSnippet}
              </div>
              <div class='post-meta-container mt-auto pt-4 border-t border-neutral-200 dark:border-neutral-700 flex items-center justify-between text-xs text-neutral-500 dark:text-neutral-400'>
                  <div class='author-info flex items-center'>
                      ${authorPhotoUrl ? `<img alt='${authorName} photo' class='w-6 h-6 rounded-full mr-2 object-cover' src='${authorPhotoUrl}'/>` : ''}
                      <span class='font-medium text-neutral-700 dark:text-neutral-300'>${authorName}</span>
                      <span class='mx-1.5'>·</span>
                      <time datetime='${isoDate}'>${formattedDate}</time>
                  </div>
                  <a href='${postUrl}' class='read-more-link font-medium text-indigo-600 hover:text-indigo-700 dark:text-indigo-400 dark:hover:text-indigo-300 opacity-0 group-hover:opacity-100 md:opacity-100 transition-opacity duration-200'>
                      Read more <span class='ml-1'>→</span>
                  </a>
              </div>
          </div>`;
      return articleElement;
  }

  function setupThemeSettingsFromWidget() {
      const configElement = document.getElementById('themeConfigPaginationType');
      if (configElement && configElement.textContent) {
          const typeString = configElement.textContent.trim().toLowerCase();
          myThemeSettings.pagination.typeString = typeString;
          switch (typeString) {
              case 'numbered': myThemeSettings.pagination.typeNumeric = 2; break;
              case 'loadmore': myThemeSettings.pagination.typeNumeric = 3; break;
              case 'infinite': myThemeSettings.pagination.typeNumeric = 4; break;
              default: myThemeSettings.pagination.typeNumeric = 1; myThemeSettings.pagination.typeString = 'default'; break;
          }
      }
  }

  function initXomisseStylePagination() {
      const numberedNavContainer = document.getElementById('pager-numbered');
      const dataProvider = document.getElementById('pagination-data-provider');
      if (!dataProvider || !numberedNavContainer) { 
          if(numberedNavContainer) numberedNavContainer.style.display='none'; return; 
      }
      const settings = {
          numPagesToShow: myThemeSettings.pagination.numPagesToShow,
          postsPerPage: parseInt(dataProvider.querySelector('#postsPerPageForNumbered')?.value) || 7,
          blogUrl: dataProvider.querySelector('#blogUrl')?.value.replace(/\/$/, '') || '',
          pageType: dataProvider.querySelector('#pageType')?.value || '',
          searchQuery: dataProvider.querySelector('#searchQuery')?.value || '',
          searchLabel: dataProvider.querySelector('#searchLabel')?.value || '',
          prevPageText: dataProvider.querySelector('#prevPageText')?.value || 'Previous',
          nextPageText: dataProvider.querySelector('#nextPageText')?.value || 'Next',
          urlActivePage: window.location.href, currentPage: 1, type: '', lblname1: ''
      };
      if (!settings.blogUrl) { numberedNavContainer.innerHTML = '<p class="err">Config err.</p>'; return; }
      function dpd() { 
          if (settings.pageType === 'index' && settings.searchLabel) { settings.type = "label"; settings.lblname1 = settings.searchLabel; }
          else if (settings.pageType === 'index' && settings.searchQuery) { settings.type = "search"; }
          else { settings.type = "page"; }
          const h = window.location.hash; if (h && h.startsWith('#PageNo=')) { const pN = parseInt(h.substring(8)); if (!isNaN(pN) && pN > 0) settings.currentPage = pN;}
          if (settings.type === 'label' || settings.type === 'search') settings.postsPerPage = 6; // Adjusted posts per page for label/search
      }
      dpd(); 
      async function gtpfc() { 
          let fU;
          if (settings.type === 'label' && settings.lblname1) fU = `${settings.blogUrl}/feeds/posts/summary/-/${encodeURIComponent(settings.lblname1)}?alt=json&max-results=0`;
          else if (settings.type === 'search' && settings.searchQuery) fU = `${settings.blogUrl}/feeds/posts/summary?alt=json&q=${encodeURIComponent(settings.searchQuery)}&max-results=0`;
          else fU = `${settings.blogUrl}/feeds/posts/summary?alt=json&max-results=0`;
          try { const r = await fetch(fU); if (!r.ok) throw new Error(`HTTP ${r.status}`); const d = await r.json(); const tR = parseInt(d.feed.openSearch$totalResults.$t); return isNaN(tR)?0:tR; }
          catch (e) { numberedNavContainer.innerHTML = '<p class="err">Err loading data.</p>'; return -1; }
      }
      function rPUI(tPgs) { 
          numberedNavContainer.innerHTML = ''; if (tPgs <= 1) return; const cP = settings.currentPage;
          if (cP > 1) { const pL = document.createElement('a'); pL.href = "#"; pL.dataset.targetPage = cP - 1; pL.className = 'p-2 mr-1 sm:mr-4 rounded hover:bg-neutral-100 dark:hover:bg-neutral-700'; pL.innerHTML = '<svg class="h-6 w-6 fill-none stroke-current" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"/></svg>'; pL.setAttribute('aria-label', settings.prevPageText); pL.addEventListener('click', hNc); numberedNavContainer.appendChild(pL); }
          let sP, eP; const wS = Math.floor(settings.numPagesToShow / 2); if (tPgs <= settings.numPagesToShow) { sP = 1; eP = tPgs; } else { if (cP <= wS + 1) { sP = 1; eP = settings.numPagesToShow; } else if (cP + wS >= tPgs) { sP = tPgs - settings.numPagesToShow + 1; eP = tPgs; } else { sP = cP - wS; eP = cP + wS; } }
          if (sP > 1) { numberedNavContainer.appendChild(cPL(1, cP)); if (sP > 2) numberedNavContainer.appendChild(cE()); }
          for (let i = sP; i <= eP; i++) { numberedNavContainer.appendChild(cPL(i, cP)); }
          if (eP < tPgs) { if (eP < tPgs - 1) numberedNavContainer.appendChild(cE()); numberedNavContainer.appendChild(cPL(tPgs, cP)); }
          if (cP < tPgs) { const nL = document.createElement('a'); nL.href = "#"; nL.dataset.targetPage = cP + 1; nL.className = 'p-2 ml-1 sm:ml-4 rounded hover:bg-neutral-100 dark:hover:bg-neutral-700'; nL.innerHTML = '<svg class="h-6 w-6 fill-none stroke-current" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"/></svg>'; nL.setAttribute('aria-label', settings.nextPageText); nL.addEventListener('click', hNc); numberedNavContainer.appendChild(nL); }
      }
      function cPL(pN, cP) {  const pL = document.createElement('a'); pL.href = "#"; pL.dataset.targetPage = pN; pL.className = 'px-3 py-2 sm:px-4 rounded hover:bg-neutral-100 dark:hover:bg-neutral-700 mx-0.5 sm:mx-1'; if (pN === cP) { pL.classList.add('bg-neutral-200', 'dark:bg-neutral-600', 'text-neutral-900', 'dark:text-white', 'font-medium'); pL.setAttribute('aria-current', 'page'); } pL.textContent = pN; pL.addEventListener('click', hNc); return pL; }
      function cE() {  const el = document.createElement('span'); el.className = 'px-3 py-2 sm:px-4 text-neutral-500 dark:text-neutral-400 mx-0.5 sm:mx-1'; el.textContent = '...'; return el; }
      async function hNc(evt) { 
          evt.preventDefault(); const tPg = parseInt(evt.currentTarget.dataset.targetPage); if (isNaN(tPg) || tPg === settings.currentPage) return;
          numberedNavContainer.innerHTML = `<div class='text-sm italic p-2'>Loading page ${tPg}...</div>`;
          if (tPg === 1) { let bU; if (settings.type === 'label' && settings.lblname1) bU = `${settings.blogUrl}/search/label/${encodeURIComponent(settings.lblname1)}`; else if (settings.type === 'search' && settings.searchQuery) bU = `${settings.blogUrl}/search?q=${encodeURIComponent(settings.searchQuery)}`; else bU = settings.blogUrl + (settings.blogUrl.endsWith('/')?'':'/'); if (settings.type === 'label' || settings.type === 'search') { const cn = bU.includes('?')?'&':'?'; bU += `${cn}max-results=${settings.postsPerPage}`; } window.location.href = `${bU}#PageNo=1`; return; }
          const sIdx = (tPg - 1) * settings.postsPerPage + 1; let tsFU;
          if (settings.type==='label'&&settings.lblname1) tsFU = `${settings.blogUrl}/feeds/posts/summary/-/${encodeURIComponent(settings.lblname1)}?start-index=${sIdx}&max-results=1&alt=json&orderby=published`;
          else if (settings.type==='search'&&settings.searchQuery) tsFU = `${settings.blogUrl}/feeds/posts/summary?q=${encodeURIComponent(settings.searchQuery)}&start-index=${sIdx}&max-results=1&alt=json&orderby=published`;
          else tsFU = `${settings.blogUrl}/feeds/posts/summary?start-index=${sIdx}&max-results=1&alt=json&orderby=published`;
          try { const r = await fetch(tsFU); if (!r.ok) throw new Error(`HTTP ${r.status}`); const d = await r.json();
              if (d.feed.entry && d.feed.entry.length > 0) { let pD = d.feed.entry[0].published.$t; let tsU = pD.substring(0,19)+pD.substring(23,29); const uMTs = encodeURIComponent(tsU); let nU;
                  if(settings.type==='label'&&settings.lblname1) nU = `${settings.blogUrl}/search/label/${encodeURIComponent(settings.lblname1)}?updated-max=${uMTs}&max-results=${settings.postsPerPage}`;
                  else if(settings.type==='search'&&settings.searchQuery) nU = `${settings.blogUrl}/search?q=${encodeURIComponent(settings.searchQuery)}&updated-max=${uMTs}&max-results=${settings.postsPerPage}`;
                  else nU = `${settings.blogUrl}/search?updated-max=${uMTs}&max-results=${settings.postsPerPage}`;
                  window.location.href = `${nU}#PageNo=${tPg}`;
              } else { numberedNavContainer.innerHTML='<p class="err text-sm p-2">Error: Post not found for navigation.</p>'; main(); }
          } catch(e) { numberedNavContainer.innerHTML='<p class="err text-sm p-2">Error Navigating.</p>'; main(); }
      }
      async function main() { if (numberedNavContainer) numberedNavContainer.innerHTML = `<div class='text-sm italic p-2'>Loading pagination...</div>`; const tot = await gtpfc(); if(tot===-1||isNaN(tot)){if(numberedNavContainer)numberedNavContainer.style.display='none';return;} if(tot===0){if(numberedNavContainer)numberedNavContainer.innerHTML='';return;} const tPgs = Math.ceil(tot/settings.postsPerPage); const h = window.location.hash; if(h&&h.startsWith('#PageNo=')){const pN=parseInt(h.substring(8));if(!isNaN(pN)&&pN>0)settings.currentPage=pN;} settings.currentPage=Math.max(1,Math.min(settings.currentPage,tPgs)); rPUI(tPgs); }
      main(); window.addEventListener('hashchange', main, false);
  }

  function initLoadMorePagination() {
      const container = document.getElementById('pager-loadmore');
      const button = document.getElementById('load-more-button');
      const messageEl = document.getElementById('load-more-message');
      const dataProvider = document.getElementById('load-more-data-provider');

      if (!button || !dataProvider || !container) {
          if (container) container.style.display = 'none'; return;
      }
      const mainPostsWrapper = document.querySelector('.blog-posts.hfeed.container');
      if (!mainPostsWrapper) {
          if (container) container.style.display = 'none'; return;
      }

      const settings = {
          postsPerPage: parseInt(dataProvider.querySelector('#lm_postsPerPage')?.value) || 7,
          blogUrl: dataProvider.querySelector('#lm_blogUrl')?.value.replace(/\/$/, '') || '',
          pageType: dataProvider.querySelector('#lm_pageType')?.value || '',
          searchQuery: dataProvider.querySelector('#lm_searchQuery')?.value || '',
          searchLabel: dataProvider.querySelector('#lm_searchLabel')?.value || '',
          isLoading: false, totalPostsForView: -1, viewContextType: 'page', viewContextName: ''
      };
      if (!settings.blogUrl) { if (container) container.style.display = 'none'; return; }
      if (settings.pageType === 'index' && settings.searchLabel) { settings.viewContextType = "label"; settings.viewContextName = settings.searchLabel; settings.postsPerPage = 6; } 
      else if (settings.pageType === 'index' && settings.searchQuery) { settings.viewContextType = "search"; settings.viewContextName = settings.searchQuery; settings.postsPerPage = 6; }
      
      async function fetchTotal() { 
          if (settings.totalPostsForView !== -1) return settings.totalPostsForView;
          let feedUrl;
          if (settings.viewContextType === 'label') feedUrl = `${settings.blogUrl}/feeds/posts/default/-/${encodeURIComponent(settings.viewContextName)}?alt=json&max-results=0`;
          else if (settings.viewContextType === 'search') feedUrl = `${settings.blogUrl}/feeds/posts/default?alt=json&q=${encodeURIComponent(settings.viewContextName)}&max-results=0`;
          else feedUrl = `${settings.blogUrl}/feeds/posts/default?alt=json&max-results=0`;
          try {
              const r = await fetch(feedUrl); if (!r.ok) throw new Error(`HTTP ${r.status}`); const d = await r.json();
              settings.totalPostsForView = parseInt(d.feed.openSearch$totalResults.$t) || 0; return settings.totalPostsForView;
          } catch (e) { if(messageEl){messageEl.textContent="Error fetching total posts."; messageEl.style.display='block';} return 0; }
      }

      async function handleClick() {
          if (settings.isLoading) return; settings.isLoading = true; button.textContent = 'Loading...'; button.disabled = true; if (messageEl) messageEl.style.display = 'none';
          const currentCount = mainPostsWrapper.querySelectorAll('.post-item').length;
          const nextStart = currentCount + 1;
          let feedUrl;
          if (settings.viewContextType === 'label') feedUrl = `${settings.blogUrl}/feeds/posts/default/-/${encodeURIComponent(settings.viewContextName)}?alt=json&start-index=${nextStart}&max-results=${settings.postsPerPage}&orderby=published`;
          else if (settings.viewContextType === 'search') feedUrl = `${settings.blogUrl}/feeds/posts/default?alt=json&q=${encodeURIComponent(settings.viewContextName)}&start-index=${nextStart}&max-results=${settings.postsPerPage}&orderby=published`;
          else feedUrl = `${settings.blogUrl}/feeds/posts/default?alt=json&start-index=${nextStart}&max-results=${settings.postsPerPage}&orderby=published`;
          
          try {
              const r = await fetch(feedUrl); if (!r.ok) throw new Error(`HTTP ${r.status}`); const d = await r.json();
              if (d.feed.entry && d.feed.entry.length > 0) {
                  const fragment = document.createDocumentFragment(); const newEls = [];
                  d.feed.entry.forEach(entry => { const el = formatBloggerPostToHTML(entry, settings.blogUrl); fragment.appendChild(el); newEls.push(el); });
                  mainPostsWrapper.appendChild(fragment);
                  
                  newEls.forEach(newPostElement => {
                      const bookmarkBtn = newPostElement.querySelector('.dynamic-bookmark-button');
                      if (bookmarkBtn) {
                          if (typeof setInitialBookmarkButtonState === 'function') {
                              setInitialBookmarkButtonState(bookmarkBtn);
                          }
                          bookmarkBtn.addEventListener('click', function() {
                              if (typeof toggleBookmarkState === 'function') {
                                  toggleBookmarkState(this);
                              }
                          });
                      }
                  });

                  if (typeof window.applyViewModeGlobal === 'function') {
                      const currentGlobalViewMode = localStorage.getItem('blogViewMode') || 'grid'; 
                      window.applyViewModeGlobal(currentGlobalViewMode, false, newEls); 
                  }
                  
                  setTimeout(() => { 
                      newEls.forEach(el => {
                          el.classList.add('loaded-post-visible');
                          el.classList.remove('loading-post-initial'); 
                      });
                  }, 50); 
                  if (mainPostsWrapper.querySelectorAll('.post-item').length >= settings.totalPostsForView) {
                      button.style.display = 'none'; if (messageEl) { messageEl.textContent = 'No more posts to load.'; messageEl.style.display = 'block';}
                  } else { button.textContent = 'Load More Posts'; }
              } else { button.style.display = 'none'; if (messageEl) { messageEl.textContent = 'No more posts to load.'; messageEl.style.display = 'block';} }
          } catch (e) { if (messageEl) { messageEl.textContent = 'Error loading more posts.'; messageEl.style.display = 'block';} button.textContent = 'Load More Posts';
          } finally { settings.isLoading = false; button.disabled = false; }
      }
      async function init() { button.textContent = 'Loading...'; await fetchTotal(); const current = mainPostsWrapper.querySelectorAll('.post-item').length;
          if (settings.totalPostsForView <= current || settings.totalPostsForView === 0) {
              button.style.display = 'none'; if (messageEl) { messageEl.textContent = settings.totalPostsForView === 0 ? 'No posts found.' : ''; messageEl.style.display = settings.totalPostsForView === 0 ? 'block' : 'none';}
          } else { button.textContent = 'Load More Posts'; button.addEventListener('click', handleClick); }
      }
      init();
  }

  function initInfiniteScrollPagination() {
      const container = document.getElementById('pager-infinite');
      const triggerElement = document.getElementById('infinite-scroll-trigger');
      const dataProvider = document.getElementById('infinite-scroll-data-provider');

      if (!triggerElement || !dataProvider || !container) {
          if (container) container.style.display = 'none'; return;
      }
      const mainPostsWrapper = document.querySelector('.blog-posts.hfeed.container');
      if (!mainPostsWrapper) {
          if (container) container.style.display = 'none'; return;
      }

      const settings = {
          postsPerPage: parseInt(dataProvider.querySelector('#is_postsPerPage')?.value) || 7,
          blogUrl: dataProvider.querySelector('#is_blogUrl')?.value.replace(/\/$/, '') || '',
          pageType: dataProvider.querySelector('#is_pageType')?.value || '',
          searchQuery: dataProvider.querySelector('#is_searchQuery')?.value || '',
          searchLabel: dataProvider.querySelector('#is_searchLabel')?.value || '',
          isLoading: false, totalPostsForView: -1, viewContextType: 'page', viewContextName: '',
          observer: null
      };
      if (!settings.blogUrl) { if (container) container.style.display = 'none'; return; }
      if (settings.pageType === 'index' && settings.searchLabel) { settings.viewContextType = "label"; settings.viewContextName = settings.searchLabel; settings.postsPerPage = 6; }
      else if (settings.pageType === 'index' && settings.searchQuery) { settings.viewContextType = "search"; settings.viewContextName = settings.searchQuery; settings.postsPerPage = 6; }
      
      async function fetchTotal() { 
          if (settings.totalPostsForView !== -1) return settings.totalPostsForView;
          let feedUrl;
          if (settings.viewContextType === 'label') feedUrl = `${settings.blogUrl}/feeds/posts/default/-/${encodeURIComponent(settings.viewContextName)}?alt=json&max-results=0`;
          else if (settings.viewContextType === 'search') feedUrl = `${settings.blogUrl}/feeds/posts/default?alt=json&q=${encodeURIComponent(settings.viewContextName)}&max-results=0`;
          else feedUrl = `${settings.blogUrl}/feeds/posts/default?alt=json&max-results=0`;
          try {
              const r = await fetch(feedUrl); if (!r.ok) throw new Error(`HTTP ${r.status}`); const d = await r.json();
              settings.totalPostsForView = parseInt(d.feed.openSearch$totalResults.$t) || 0; return settings.totalPostsForView;
          } catch (e) { triggerElement.textContent="Error fetching total."; return 0; }
      }
      
      async function loadMorePosts() {
          if (settings.isLoading) return;
          const currentCount = mainPostsWrapper.querySelectorAll('.post-item').length;
          if (currentCount >= settings.totalPostsForView && settings.totalPostsForView !== -1) { 
              triggerElement.textContent = 'No more posts to load.';
              triggerElement.classList.remove('loading');
              if(settings.observer) settings.observer.unobserve(triggerElement); 
              return;
          }

          settings.isLoading = true; 
          triggerElement.textContent = ''; // Clear text, rely on CSS for spinner
          triggerElement.classList.add('loading');

          const nextStart = currentCount + 1;
          let feedUrl;
          if (settings.viewContextType === 'label') feedUrl = `${settings.blogUrl}/feeds/posts/default/-/${encodeURIComponent(settings.viewContextName)}?alt=json&start-index=${nextStart}&max-results=${settings.postsPerPage}&orderby=published`;
          else if (settings.viewContextType === 'search') feedUrl = `${settings.blogUrl}/feeds/posts/default?alt=json&q=${encodeURIComponent(settings.viewContextName)}&start-index=${nextStart}&max-results=${settings.postsPerPage}&orderby=published`;
          else feedUrl = `${settings.blogUrl}/feeds/posts/default?alt=json&start-index=${nextStart}&max-results=${settings.postsPerPage}&orderby=published`;
          
          try {
              const r = await fetch(feedUrl); if (!r.ok) throw new Error(`HTTP ${r.status}`); const d = await r.json();
              if (d.feed.entry && d.feed.entry.length > 0) {
                  const fragment = document.createDocumentFragment(); const newEls = [];
                  d.feed.entry.forEach(entry => { const el = formatBloggerPostToHTML(entry, settings.blogUrl); fragment.appendChild(el); newEls.push(el); }); 
                  mainPostsWrapper.appendChild(fragment);

                  newEls.forEach(newPostElement => {
                      const bookmarkBtn = newPostElement.querySelector('.dynamic-bookmark-button');
                      if (bookmarkBtn) {
                          if (typeof setInitialBookmarkButtonState === 'function') {
                              setInitialBookmarkButtonState(bookmarkBtn);
                          }
                          bookmarkBtn.addEventListener('click', function() {
                              if (typeof toggleBookmarkState === 'function') {
                                  toggleBookmarkState(this);
                              }
                          });
                      }
                  });

                  if (typeof window.applyViewModeGlobal === 'function') {
                      const currentGlobalViewMode = localStorage.getItem('blogViewMode') || 'grid';
                      window.applyViewModeGlobal(currentGlobalViewMode, false, newEls);
                  }
                  setTimeout(() => { 
                      newEls.forEach(el => {
                           el.classList.add('loaded-post-visible');
                           el.classList.remove('loading-post-initial'); 
                      });
                  }, 50);
                  
                  if (mainPostsWrapper.querySelectorAll('.post-item').length >= settings.totalPostsForView) {
                      triggerElement.textContent = 'No more posts to load.';
                      triggerElement.classList.remove('loading');
                      if(settings.observer) settings.observer.unobserve(triggerElement);
                  } else {
                      triggerElement.textContent = ''; 
                      triggerElement.classList.remove('loading');
                  }
              } else { 
                  triggerElement.textContent = 'No more posts to load.';
                  triggerElement.classList.remove('loading');
                  if(settings.observer) settings.observer.unobserve(triggerElement);
              }
          } catch (e) { triggerElement.textContent = 'Error loading posts.'; triggerElement.classList.remove('loading');
          } finally { settings.isLoading = false; }
      }

      async function init() {
          triggerElement.textContent = ''; // Rely on CSS spinner
          triggerElement.classList.add('loading');
          await fetchTotal();
          const current = mainPostsWrapper.querySelectorAll('.post-item').length;

          if (settings.totalPostsForView <= current || settings.totalPostsForView === 0) {
              triggerElement.textContent = settings.totalPostsForView === 0 ? 'No posts found.' : 'All posts loaded.';
              triggerElement.classList.remove('loading');
              return; 
          } else {
              triggerElement.textContent = ''; 
              triggerElement.classList.remove('loading'); // Ready for observer
          }

          settings.observer = new IntersectionObserver((entries) => {
              if (entries[0].isIntersecting && !settings.isLoading) {
                  loadMorePosts();
              }
          }, { threshold: 0.1, rootMargin: '0px 0px 250px 0px' }); // Increased rootMargin for earlier trigger
          settings.observer.observe(triggerElement);
      }
      init();
  }

  function initializeActivePagination() {
      if (typeof myThemeSettings === 'undefined' || !myThemeSettings.pagination) {
          const dP = document.getElementById('pager-default'); if (dP) dP.style.display = 'flex'; return;
      }
      // Only initialize if it's a multiple items page
      if (typeof IS_MULTIPLE_ITEMS_PAGE_GLOBAL === 'undefined' || !IS_MULTIPLE_ITEMS_PAGE_GLOBAL) {
        const pagersToHide = ['pager-default', 'pager-numbered', 'pager-loadmore', 'pager-infinite'];
        pagersToHide.forEach(id => {
            const el = document.getElementById(id);
            if (el) el.style.display = 'none';
        });
        return;
      }

      const activePgType = myThemeSettings.pagination.typeNumeric;

      const pagers = {
          default: document.getElementById('pager-default'),
          numbered: document.getElementById('pager-numbered'),
          loadmore: document.getElementById('pager-loadmore'),
          infinite: document.getElementById('pager-infinite')
      };
      Object.values(pagers).forEach(p => { if (p) p.style.display = 'none'; });

      if (activePgType === 2) { 
          if (pagers.numbered) { pagers.numbered.style.display = 'flex'; initXomisseStylePagination(); }
          else if (pagers.default) { pagers.default.style.display = 'flex'; }
      } else if (activePgType === 3) { 
          if (pagers.loadmore) { pagers.loadmore.style.display = 'block'; initLoadMorePagination(); }
          else if (pagers.default) { pagers.default.style.display = 'flex'; }
      } else if (activePgType === 4) { 
          if (pagers.infinite) { pagers.infinite.style.display = 'block'; initInfiniteScrollPagination(); }
          else if (pagers.default) { pagers.default.style.display = 'flex'; }
      } else { 
          if (pagers.default) { pagers.default.style.display = 'flex'; }
      }
  }

  if (document.readyState === 'loading') {
      document.addEventListener('DOMContentLoaded', function() {
          setupThemeSettingsFromWidget();
          initializeActivePagination();
      });
  } else {
      setupThemeSettingsFromWidget();
      initializeActivePagination();
  }
  //]]>
  </script> 

<b:if cond='data:view.isLabelSearch'>
<script type='text/javascript'>
//<![CDATA[
  (function() { // Encapsulate the script to avoid global scope pollution
    let CURRENT_VIEWED_LABEL = null;
    const pathname = window.location.pathname;
    const labelMatch = pathname.match(/\/search\/label\/([^/]+)/);

    if (labelMatch && labelMatch[1]) {
      CURRENT_VIEWED_LABEL = decodeURIComponent(labelMatch[1].replace(/\+/g, ' '));
    }

    // Attempt to get blog's homepage URL robustly
    let BLOG_HOMEPAGE_URL_CANONICAL = '';
    const blogUrlMetaTag = document.querySelector("meta[property='og:url'][content*='blogspot.com']");
    if (blogUrlMetaTag && blogUrlMetaTag.content) {
        try {
            const urlObj = new URL(blogUrlMetaTag.content);
            BLOG_HOMEPAGE_URL_CANONICAL = urlObj.origin;
        } catch (e) {
            // Fallback if meta tag URL is not absolute or invalid
             BLOG_HOMEPAGE_URL_CANONICAL = window.location.origin;
        }
    } else {
        BLOG_HOMEPAGE_URL_CANONICAL = window.location.origin;
    }
    // Further ensure it doesn't have /search/label if current page is label page
    if (BLOG_HOMEPAGE_URL_CANONICAL.includes("/search/label/")) {
        BLOG_HOMEPAGE_URL_CANONICAL = BLOG_HOMEPAGE_URL_CANONICAL.split("/search/label/")[0];
    }
    BLOG_HOMEPAGE_URL_CANONICAL = BLOG_HOMEPAGE_URL_CANONICAL.replace(/\/$/, '');


    const DEFAULT_LABEL_HEADER_DESC = "Explore articles and updates related to this topic. We're committed to bringing you the latest insights and information.";

    async function fetchLabelPostCount(labelName) {
      if (!BLOG_HOMEPAGE_URL_CANONICAL || !labelName) {
        console.warn("fetchLabelPostCount: Missing blog URL or label name.");
        return 0;
      }
      const feedUrl = BLOG_HOMEPAGE_URL_CANONICAL +
                      '/feeds/posts/summary/-/' +
                      encodeURIComponent(labelName) +
                      '?alt=json&max-results=0&cachebust=' + new Date().getTime();
      try {
        const response = await fetch(feedUrl);
        if (!response.ok) {
          console.error(`fetchLabelPostCount: HTTP error ${response.status} for label ${labelName}`);
          return 0;
        }
        const data = await response.json();
        return data.feed.openSearch$totalResults.$t || 0;
      } catch (error) {
        console.error(`fetchLabelPostCount: Error fetching count for ${labelName}:`, error);
        return 0;
      }
    }

    function initializeCustomLabelHeader() {
      const customizationDataSource = document.getElementById('label-customization-data-source');
      const headerContainer = document.getElementById('custom-label-header');

      if (!CURRENT_VIEWED_LABEL || !headerContainer) {
        if (headerContainer) headerContainer.style.display = 'none';
        return;
      }

      headerContainer.style.display = 'none'; // Hide until ready

      const bgElement = headerContainer.querySelector('.custom-label-header-background');
      const nameElement = headerContainer.querySelector('#custom-label-name');
      const countElement = headerContainer.querySelector('#custom-label-post-count');
      const descElement = headerContainer.querySelector('#custom-label-description');

      if (!bgElement || !nameElement || !countElement || !descElement) {
        console.error("Custom label header critical elements not found.");
        if (headerContainer) headerContainer.style.display = 'none'; // Keep it hidden if broken
        return;
      }

      // Define available pattern classes (base names) and Tailwind blend modes
      const heroPatternBaseClasses = ['pattern-circles', 'pattern-plus-tiny', 'pattern-diag-stripes', 'pattern-polka-dots']; // Add more base names from your CSS
      const blendModeClasses = [
          'bg-blend-normal', 'bg-blend-multiply', 'bg-blend-screen', 'bg-blend-overlay',
          'bg-blend-darken', 'bg-blend-lighten', 'bg-blend-color-dodge', 'bg-blend-color-burn',
          'bg-blend-hard-light', 'bg-blend-soft-light', 'bg-blend-difference', 'bg-blend-exclusion',
          'bg-blend-hue', 'bg-blend-saturation', 'bg-blend-color', 'bg-blend-luminosity'
      ];

      // Clear any inline background image style (from old approach or defaults)
      bgElement.style.backgroundImage = '';

      // Remove any old pattern or blend mode classes to ensure a clean slate
      // Create a combined list of all possible classes to remove if more patterns are added dynamically.
      // For now, just iterating through the defined ones.
      heroPatternBaseClasses.forEach(cls => bgElement.classList.remove(cls));
      blendModeClasses.forEach(cls => bgElement.classList.remove(cls));

      // Select and apply a random pattern class
      const randomPatternClass = heroPatternBaseClasses[Math.floor(Math.random() * heroPatternBaseClasses.length)];
      bgElement.classList.add(randomPatternClass);

      // Select and apply a random blend mode class
      const randomBlendMode = blendModeClasses[Math.floor(Math.random() * blendModeClasses.length)];
      bgElement.classList.add(randomBlendMode);

      // Parse custom descriptions from the LinkList widget
      let labelSettings = {};
      if (customizationDataSource) {
        const links = customizationDataSource.querySelectorAll('ul li a');
        links.forEach(link => {
          const labelNameAttr = link.getAttribute('data-label') || link.textContent.trim();
          // 'data-custom' now directly holds the description (from link.target)
          const descriptionAttr = link.getAttribute('data-custom');

          if (labelNameAttr) {
            const labelNameKey = labelNameAttr.trim();
            labelSettings[labelNameKey] = {
              description: descriptionAttr ? descriptionAttr.trim() : ''
            };
          }
        });
      }

      const specificSettings = labelSettings[CURRENT_VIEWED_LABEL] || {};
      const descriptionToUse = specificSettings.description || DEFAULT_LABEL_HEADER_DESC;

      // Apply the content
      nameElement.textContent = CURRENT_VIEWED_LABEL;
      descElement.textContent = descriptionToUse;
      headerContainer.style.display = ''; // Show the header

      fetchLabelPostCount(CURRENT_VIEWED_LABEL).then(postCount => {
        const countNum = Number(postCount);
        countElement.textContent = `${countNum} post${countNum !== 1 ? 's' : ''}`;
      }).catch(error => {
        console.warn("Could not fetch post count for label:", CURRENT_VIEWED_LABEL, error);
        countElement.textContent = 'N/A posts';
      });
    }

    // Initialize when the DOM is ready
    if (document.readyState === 'loading') {
      document.addEventListener('DOMContentLoaded', initializeCustomLabelHeader);
    } else {
      initializeCustomLabelHeader(); // DOMContentLoaded has already fired
    }
  })(); // End of IIFE
//]]>
</script>
</b:if>
  
  <script type='text/javascript'>
  //<![CDATA[

    // --- Global Toast Notification (Tailwind) ---
    function showGlobalToast(message, styleClasses = "bg-neutral-800 text-white") {
      const container = document.getElementById('toast-container-global');
      if (!container) {
        console.error("Global toast container not found!");
        return;
      }
      const toast = document.createElement('div');
      toast.className = `p-3 rounded-lg shadow-lg ${styleClasses} transition-all duration-300 ease-in-out transform translate-y-full opacity-0 pointer-events-auto mb-2`;
      toast.textContent = message;
      container.appendChild(toast);

      // Force reflow to enable transition
      void toast.offsetWidth;

      toast.classList.remove('translate-y-full', 'opacity-0');
      toast.classList.add('translate-y-0', 'opacity-100');

      setTimeout(() => {
        toast.classList.add('opacity-0'); // Start fade out
        // Optional: Move it down as it fades
        // toast.classList.add('translate-y-2'); // Small move down
        setTimeout(() => {
          toast.remove();
        }, 300); // Duration of fade out
      }, 3000); // Time visible
    }

    // --- Text Size Control ---
    function initTextSizeControl(postId) {
        const wrapper = document.getElementById('text-size-control-wrapper-' + postId);
        if (!wrapper) return;
        
        const button = wrapper.querySelector('.text-size-button');
        const optionsDropdown = wrapper.querySelector('.text-size-options-dropdown');
        // Find post-body-container relative to the wrapper, not just by ID (in case of multiple posts in future)
        const postBodyContainer = wrapper.closest('article.post-item, div.post-outer') ? wrapper.closest('article.post-item, div.post-outer').querySelector('.post-body-container') : null;


        if (!button || !optionsDropdown || !postBodyContainer) {
            console.warn("[TextSize] Critical elements for text size control not found for postId:", postId, {button, optionsDropdown, postBodyContainer});
            return;
        }

        const savedSize = localStorage.getItem('postFontSize-' + postId);
        applyTextSize(savedSize || 'default', postBodyContainer, postId);

        button.addEventListener('click', (event) => {
            event.stopPropagation();
            document.querySelectorAll('.share-options-dropdown, .text-size-options-dropdown').forEach(d => {
                if (d !== optionsDropdown) d.classList.add('hidden');
            });
            optionsDropdown.classList.toggle('hidden');
        });

        optionsDropdown.addEventListener('click', (event) => {
            const sizeTarget = event.target.closest('[data-size]');
            if (sizeTarget) {
                const newSize = sizeTarget.dataset.size;
                applyTextSize(newSize, postBodyContainer, postId);
                localStorage.setItem('postFontSize-' + postId, newSize);
                optionsDropdown.classList.add('hidden'); // Hide after selection
            }
        });
        updateActiveTextSizeButton(wrapper, localStorage.getItem('postFontSize-' + postId) || 'default');
    }

    function applyTextSize(size, containerElement, postId) {
      if (!containerElement) return;
      const actualSize = size || 'default';
      containerElement.classList.remove('prose-sm', 'prose-base', 'prose-lg', 'prose-xl'); // Clear existing Tailwind prose sizes
      
      // Update the data attribute for CSS targeting if needed, or directly apply classes
      containerElement.setAttribute('data-text-size-preference', actualSize);

      // Apply specific classes based on the size chosen.
      // These classes are referenced in your <b:skin> CSS
      if (actualSize === 'small') {
          containerElement.classList.add('prose-sm'); // Uses .post-body-container.prose-sm .post-body h2
      } else if (actualSize === 'large') {
          containerElement.classList.add('prose-lg'); // Uses .post-body-container.prose-lg .post-body h2
      } else { // Default
          containerElement.classList.add('prose-base'); // Default Tailwind prose size
      }
      updateActiveTextSizeButton(document.getElementById('text-size-control-wrapper-' + postId), actualSize);
    }

    function updateActiveTextSizeButton(wrapper, activeSize) {
        if (!wrapper) return;
        const currentActiveSize = activeSize || 'default';
        const buttons = wrapper.querySelectorAll('.text-size-options-dropdown button[data-size]');
        buttons.forEach(btn => {
            btn.classList.remove('bg-indigo-100', 'dark:bg-indigo-700', 'font-semibold', 'text-indigo-600', 'dark:text-indigo-400');
            btn.classList.add('text-neutral-600', 'dark:text-neutral-300', 'hover:bg-neutral-100', 'dark:hover:bg-neutral-700'); // Add back hover
            if (btn.dataset.size === currentActiveSize) {
                btn.classList.add('bg-indigo-100', 'dark:bg-indigo-700', 'font-semibold', 'text-indigo-600', 'dark:text-indigo-400');
                btn.classList.remove('hover:bg-neutral-100', 'dark:hover:bg-neutral-700');
            }
        });
    }

    function closeParentDropdown(buttonElement, parentSelector) {
      if (buttonElement && typeof buttonElement.closest === 'function') {
        const dropdown = buttonElement.closest(parentSelector);
        if (dropdown) {
          dropdown.classList.add('hidden');
        }
      }
    }

    // --- GENERIC Bookmark Toggle Function ---
    function toggleBookmarkState(buttonEl) {
        if (!buttonEl) return;
        const postUrl = buttonEl.dataset.postUrl;
        const postTitle = buttonEl.dataset.postTitle;

        if (!postUrl || !postTitle) {
            showGlobalToast("⚠️ Error bookmarking post. Data missing.", "bg-yellow-500 text-black");
            return;
        }

        let bookmarks = JSON.parse(localStorage.getItem('bookmarks')) || [];
        const index = bookmarks.findIndex(b => b.url === postUrl);
        const svgElement = buttonEl.querySelector('svg'); 

        if (!svgElement) return;

        // Define color classes based on button type
        const isMetaButton = buttonEl.classList.contains('post-meta-bookmark-button');
        const bookmarkedFillColorClasses = ['text-green-500', 'dark:text-green-400']; // Brighter green
        const defaultStrokeColorClasses = isMetaButton ? 
            ['text-neutral-500', 'dark:text-neutral-400', 'hover:text-indigo-500', 'dark:hover:text-indigo-400'] : 
            ['text-neutral-400', 'dark:text-neutral-500', 'hover:text-indigo-500', 'dark:hover:text-indigo-400'];
        
        // Clear all potentially relevant color classes first
        [...bookmarkedFillColorClasses, ...defaultStrokeColorClasses].forEach(cls => svgElement.classList.remove(cls));


        if (index === -1) { // Bookmark it
            bookmarks.push({ title: postTitle, url: postUrl, dateSaved: new Date().toISOString() });
            showGlobalToast("✅ Post Bookmarked!", "bg-green-500 text-white");
            svgElement.setAttribute('fill', 'currentColor');
            bookmarkedFillColorClasses.forEach(cls => svgElement.classList.add(cls));
            buttonEl.setAttribute('aria-label', 'Remove bookmark for ' + postTitle);
        } else { // Unbookmark it
            bookmarks.splice(index, 1);
            showGlobalToast("❌ Bookmark Removed!", "bg-red-500 text-white");
            svgElement.setAttribute('fill', 'none');
            // Re-apply default stroke and hover colors
            svgElement.classList.add(isMetaButton ? 'text-neutral-500' : 'text-neutral-400');
            svgElement.classList.add(isMetaButton ? 'dark:text-neutral-400' : 'dark:text-neutral-500');
            buttonEl.setAttribute('aria-label', 'Bookmark ' + postTitle);
        }
        localStorage.setItem('bookmarks', JSON.stringify(bookmarks));
        
        // Pulse animation
        buttonEl.classList.remove('pulse');
        void buttonEl.offsetWidth; 
        buttonEl.classList.add('pulse');
        setTimeout(() => buttonEl.classList.remove('pulse'), 400);
        
        updateBookmarkBadgeGlobal(); // Update global badge (e.g., in sidebar)

        // Update sidebar icon for current page if it's the one being bookmarked/unbookmarked
        if (typeof window.SBM_updateSidebarIconStateGlobally === 'function' && postUrl === window.location.href) {
            window.SBM_updateSidebarIconStateGlobally();
        }
        // If sidebar list is visible, refresh it
        if (typeof window.isBookmarksVisibleGlobal !== 'undefined' && window.isBookmarksVisibleGlobal) {
            if (typeof window.showBookmarksListGlobal === 'function') {
                window.showBookmarksListGlobal();
            }
        }
    }

    // --- GENERIC Initial Bookmark Button State Setter ---
    function setInitialBookmarkButtonState(buttonEl) {
        if (!buttonEl) return;
        const postUrl = buttonEl.dataset.postUrl;
        if (!postUrl) return;

        const svgElement = buttonEl.querySelector('svg');
        if (!svgElement) return;

        let bookmarks = JSON.parse(localStorage.getItem('bookmarks')) || [];
        const isBookmarked = bookmarks.some(b => b.url === postUrl);

        const isMetaButton = buttonEl.classList.contains('post-meta-bookmark-button');
        const bookmarkedFillColorClasses = ['text-green-500', 'dark:text-green-400'];
        const defaultStrokeColorClasses = isMetaButton ? 
            ['text-neutral-500', 'dark:text-neutral-400', 'hover:text-indigo-500', 'dark:hover:text-indigo-400'] : 
            ['text-neutral-400', 'dark:text-neutral-500', 'hover:text-indigo-500', 'dark:hover:text-indigo-400'];

        [...bookmarkedFillColorClasses, ...defaultStrokeColorClasses].forEach(cls => svgElement.classList.remove(cls));
        
        const postTitle = buttonEl.dataset.postTitle || "this post";


        if (isBookmarked) {
            svgElement.setAttribute('fill', 'currentColor');
            bookmarkedFillColorClasses.forEach(cls => svgElement.classList.add(cls));
            buttonEl.setAttribute('aria-label', 'Remove bookmark for ' + postTitle);
        } else {
            svgElement.setAttribute('fill', 'none');
            svgElement.classList.add(isMetaButton ? 'text-neutral-500' : 'text-neutral-400');
            svgElement.classList.add(isMetaButton ? 'dark:text-neutral-400' : 'dark:text-neutral-500');
            // Hovers are usually handled by Tailwind, but ensure they are not overridden by the green bookmark state
            buttonEl.setAttribute('aria-label', 'Bookmark ' + postTitle);
        }
    }

    // --- Global Bookmark Badge Update ---
    function updateBookmarkBadgeGlobal() {
      if (typeof window.manageBookmarkBadgeVisibility === 'function') {
          window.manageBookmarkBadgeVisibility();
      }
    }
    
    // --- Pulse Animation CSS ---
    (function() {
      if (document.getElementById('custom-pulse-animation-style')) return;
      const styleSheet = document.createElement("style");
      styleSheet.id = "custom-pulse-animation-style";
      styleSheet.type = "text/css";
      styleSheet.innerText = `@keyframes pulse { 0% { transform: scale(1); } 50% { transform: scale(1.3); } 100% { transform: scale(1); } } .pulse { animation: pulse 0.4s ease-in-out; }`;
      document.head.appendChild(styleSheet);
    })();

    // --- General Initializer ---
    document.addEventListener('DOMContentLoaded', () => {
        const isSingleItemView = typeof IS_MULTIPLE_ITEMS_PAGE_GLOBAL !== 'undefined' && !IS_MULTIPLE_ITEMS_PAGE_GLOBAL && (document.querySelector('div.post-body-container') != null);
      
        if (isSingleItemView) {
            let postId = null;
            const postBodyDiv = document.querySelector('div[id^="post-body-"]');
            if (postBodyDiv) postId = postBodyDiv.id.replace('post-body-', '');
            
            if (postId && postId !== "null") {
                initTextSizeControl(postId);
            }
        }
      
        const allBookmarkButtons = document.querySelectorAll('.post-meta-bookmark-button, .homepage-bookmark-button, .dynamic-bookmark-button');
        allBookmarkButtons.forEach(button => {
            setInitialBookmarkButtonState(button); 
            // Check if listener already exists to prevent duplicates if this runs multiple times (though it shouldn't with DOMContentLoaded)
            if (!button.dataset.bookmarkListenerAttached) {
                 button.addEventListener('click', function() { toggleBookmarkState(this); });
                 button.dataset.bookmarkListenerAttached = 'true';
            }
        });
        
        document.querySelectorAll('.custom-share-trigger').forEach(button => {
            const dropdown = button.nextElementSibling;
            if (dropdown && dropdown.classList.contains('share-options-dropdown')) {
                button.addEventListener('click', (event) => {
                    event.stopPropagation();
                    document.querySelectorAll('.text-size-options-dropdown, .share-options-dropdown').forEach(d => {
                        if (d !== dropdown) d.classList.add('hidden');
                    });
                    dropdown.classList.toggle('hidden');
                });
            }
        });
      
        document.querySelectorAll('.copy-link-button').forEach(button => {
            button.addEventListener('click', function(event) {
                event.preventDefault(); 
                event.stopPropagation(); // Prevent closing dropdown immediately
                const urlToCopy = this.dataset.url;
                if (urlToCopy && navigator.clipboard && typeof navigator.clipboard.writeText === 'function') {
                    navigator.clipboard.writeText(urlToCopy).then(() => { 
                        showGlobalToast('✅ Link copied to clipboard!', 'bg-green-500 text-white');
                    }).catch(err => { 
                        showGlobalToast('❌ Could not copy link.', 'bg-red-500 text-white');
                    });
                } else if (urlToCopy) { 
                    const textArea = document.createElement("textarea");
                    textArea.value = urlToCopy;
                    textArea.style.position = "fixed"; textArea.style.opacity="0"; document.body.appendChild(textArea);
                    textArea.focus(); textArea.select();
                    try {
                        document.execCommand('copy');
                        showGlobalToast('✅ Link copied (fallback)!', 'bg-green-500 text-white');
                    } catch (err) {
                        showGlobalToast('❌ Copy failed (fallback).', 'bg-red-500 text-white');
                    }
                    document.body.removeChild(textArea);
                } else { showGlobalToast('⚠️ No URL to copy.', 'bg-yellow-500 text-black'); }
            });
        });
      
        document.addEventListener('click', (event) => {
            const target = event.target;
            let clickedInsideADropdownOrTrigger = false;
      
            if (target.closest('.text-size-control-wrapper') || target.closest('.share-icon-wrapper')) {
                clickedInsideADropdownOrTrigger = true;
            }
      
            if (!clickedInsideADropdownOrTrigger) {
                document.querySelectorAll('.text-size-options-dropdown, .share-options-dropdown').forEach(d => {
                    d.classList.add('hidden');
                });
            }
        });
      
        updateBookmarkBadgeGlobal(); 
    });

  //]]>
  </script>
  
  <script>
  //<![CDATA[
   // Active Link Highlighting Script (Tailwind Centric)
    document.addEventListener('DOMContentLoaded', function() {
        const currentUrl = window.location.href.split('#')[0].split('?')[0];
        
        // Correctly get the homepage URL from Blogger data
        const siteUrlRaw = "<data:blog.homepageUrl/>"; 
        const siteUrl = siteUrlRaw.split('#')[0].split('?')[0];

        // Define your active link Tailwind classes here
        const activeMiniLinkClasses = ['bg-indigo-200', 'dark:bg-indigo-600', 'text-indigo-700', 'dark:text-indigo-100', 'font-semibold'];
        const activeMainLinkClasses = ['bg-indigo-100', 'dark:bg-indigo-700', 'text-indigo-700', 'dark:text-indigo-100', 'font-semibold'];
        const parentActiveToggleClasses = ['text-indigo-600', 'dark:text-indigo-400', 'font-semibold']; 
        function applyClasses(element, classes) {
            classes.forEach(cls => element.classList.add(cls));
        }
        function removeClasses(element, classes) {
            classes.forEach(cls => element.classList.remove(cls));
        }

        function setActiveLinks() {
            // Mini Nav
            const miniNavLinks = document.querySelectorAll('#mini-nav a');
            miniNavLinks.forEach(link => {
                removeClasses(link, activeMiniLinkClasses); // Reset first
                const linkHref = link.href.split('#')[0].split('?')[0];
                if (linkHref === currentUrl || (currentUrl === siteUrl && (link.getAttribute('href') === '/' || link.getAttribute('href') === siteUrl ))) {
                    applyClasses(link, activeMiniLinkClasses);
                }
            });

            // Main Nav
            const mainNavLinks = document.querySelectorAll('#main-nav .widget-content a'); // More general selector
            let exactMatchInMain = false;
            mainNavLinks.forEach(link => {
                removeClasses(link, activeMainLinkClasses);
                const linkHref = link.href.split('#')[0].split('?')[0];

                if (linkHref === currentUrl) {
                    applyClasses(link, activeMainLinkClasses);
                    exactMatchInMain = true;

                    // Open parent accordion if this link is inside a submenu
                    const parentHasSubmenu = link.closest('li.has-submenu');
                    if (parentHasSubmenu) {
                        const submenuUL = parentHasSubmenu.querySelector('ul.submenu');
                        const toggleA = parentHasSubmenu.querySelector('a.submenu-toggle');
                        const arrow = toggleA ? toggleA.querySelector('.arrow-icon') : null;

                        if (submenuUL && (!submenuUL.style.maxHeight || submenuUL.style.maxHeight === '0px')) {
                            submenuUL.style.maxHeight = submenuUL.scrollHeight + "px";
                            if (toggleA) applyClasses(toggleA, parentActiveToggleClasses); // Style parent toggle
                            if (arrow) arrow.classList.add('rotate-180');
                        } else if (toggleA) { // If submenu already open, still style parent
                             applyClasses(toggleA, parentActiveToggleClasses);
                        }
                    }
                }
            });
            
            // Fallback for homepage in main nav if no exact match
             if (!exactMatchInMain && currentUrl === siteUrl) {
                 mainNavLinks.forEach(link => {
                    const linkHref = link.href.split('#')[0].split('?')[0];
                    if (linkHref === siteUrl || link.getAttribute('href') === '/') {
                         applyClasses(link, activeMainLinkClasses);
                    }
                 });
            }
        }
        setActiveLinks();
        // Optional: Re-run on history changes if using dynamic content loading (not typical for basic Blogger)
        // window.addEventListener('popstate', setActiveLinks); 
    });
//]]>
</script>
  
<script>
//<![CDATA[
    // Accordion Menu Script (Tailwind Centric)
    document.addEventListener('DOMContentLoaded', function() {
        const ACCORDION_STATE_KEY = 'bthemeAccordionMenuState'; // Use a more unique key
        const mainNavElement = document.getElementById('main-nav');

        function getAccordionItemId(widgetElement, accordionItem) {
            const widgetId = widgetElement.id;
            const accordionList = accordionItem.closest('.my-accordion-list');
            if (!accordionList || !widgetId) return null;

            // Get all sibling .has-submenu elements within the same .my-accordion-list
            const itemsInList = Array.from(accordionList.querySelectorAll(':scope > li.has-submenu'));
            const itemIndex = itemsInList.indexOf(accordionItem);

            if (itemIndex > -1) {
                return `${widgetId}-accItem-${itemIndex}`;
            }
            return null;
        }

        function saveAccordionState(openItems) {
            localStorage.setItem(ACCORDION_STATE_KEY, JSON.stringify(Array.from(openItems)));
        }

        function loadAccordionState() {
            const state = localStorage.getItem(ACCORDION_STATE_KEY);
            return state ? new Set(JSON.parse(state)) : new Set();
        }

        const openAccordionItems = loadAccordionState();

        if (!mainNavElement) return;

        const widgetsWithAccordions = mainNavElement.querySelectorAll('.widget[id]');

        widgetsWithAccordions.forEach(widget => {
            const accordionLists = widget.querySelectorAll('.my-accordion-list');

            accordionLists.forEach(list => {
                const itemsWithSubmenu = list.querySelectorAll(':scope > li.has-submenu');

                itemsWithSubmenu.forEach(item => {
                    const toggleLink = item.querySelector('a.submenu-toggle');
                    const submenu = item.querySelector('ul.submenu');
                    const arrowIcon = toggleLink ? toggleLink.querySelector('.arrow-icon') : null;
                    const itemId = getAccordionItemId(widget, item);

                    if (toggleLink && submenu && itemId) {
                        // Base classes (ensure these are in your HTML or add them here if needed)
                        // toggleLink.classList.add('cursor-pointer', 'py-2', 'px-3', 'hover:bg-neutral-100', 'dark:hover:bg-neutral-700', 'rounded-md');
                        // submenu.querySelectorAll('a').forEach(subLink => {
                        //     subLink.classList.add('block', 'py-1.5', 'px-2', 'text-sm', 'hover:bg-neutral-100', 'dark:hover:bg-neutral-700', 'rounded-md');
                        // });

                        // Restore state on load
                        if (openAccordionItems.has(itemId)) {
                            submenu.style.maxHeight = submenu.scrollHeight + "px";
                            if (arrowIcon) arrowIcon.classList.add('rotate-180');
                            toggleLink.classList.add('font-semibold'); // Example active style
                        } else {
                            submenu.style.maxHeight = '0px'; // Default closed
                            if (arrowIcon) arrowIcon.classList.remove('rotate-180');
                            toggleLink.classList.remove('font-semibold');
                        }

                        toggleLink.addEventListener('click', function(event) {
                            event.preventDefault();
                            const isOpen = submenu.style.maxHeight && submenu.style.maxHeight !== '0px';

                            if (isOpen) {
                                submenu.style.maxHeight = '0px';
                                if (arrowIcon) arrowIcon.classList.remove('rotate-180');
                                toggleLink.classList.remove('font-semibold');
                                openAccordionItems.delete(itemId);
                            } else {
                                submenu.style.maxHeight = submenu.scrollHeight + "px";
                                if (arrowIcon) arrowIcon.classList.add('rotate-180');
                                toggleLink.classList.add('font-semibold');
                                openAccordionItems.add(itemId);
                            }
                            saveAccordionState(openAccordionItems);
                        });
                    }
                });
            });
        });
    });
//]]>
</script>
<script type='text/javascript'>
//<![CDATA[
document.addEventListener('DOMContentLoaded', function() {
  const greetingPlaceholder = document.getElementById('dynamic-greeting-placeholder');

  // If the placeholder element exists, it implies we are on a single post view
  // because the element is conditionally rendered by Blogger using b:if cond='data:view.isSingleItem'.
  if (greetingPlaceholder) {
    const greetings = {
      morning: [ // 5 AM - 11:59 AM
        { emoji: '☀️', msg: 'Good morning! Ready for a bright day?' },
        { emoji: '🌅', msg: 'Rise and shine! What will you discover today?' },
        { emoji: '☕', msg: 'Fresh day, fresh ideas. Grab a coffee and dive in!' },
        { emoji: '💡', msg: 'Morning! Let\'s spark some brilliance.' },
        { emoji: '💻', msg: 'Hello there! Hope your day starts insightful.' }
      ],
      afternoon: [ // 12 PM - 4:59 PM
        { emoji: '🌤️', msg: 'Good afternoon! Hope it\'s productive.' },
        { emoji: '🧠', msg: 'Keep the momentum going! What\'s next?' },
        { emoji: '📖', msg: 'Afternoon explorations await.' },
        { emoji: '💡', msg: 'Powering through? Hope you find some gems!' },
        { emoji: '✨', msg: 'Hello! May your afternoon be enlightening.' }
      ],
      evening: [ // 5 PM - 8:59 PM
        { emoji: '🌆', msg: 'Good evening! Time to unwind & learn.' },
        { emoji: '🛋️', msg: 'Relax and reflect. What did you explore?' },
        { emoji: '💡', msg: 'Evening insights loading...' },
        { emoji: '🎨', msg: 'Hope your evening is creatively charged!' },
        { emoji: '🌃', msg: 'Winding down? Perfect time for a good read.' }
      ],
      night: [ // 9 PM - 11:59 PM
        { emoji: '🌙', msg: 'Good night! Uncovering late-night wisdom?' },
        { emoji: '✨', msg: 'Night vibes. Happy reading!' },
        { emoji: '🦉', msg: 'Burning the midnight oil? Welcome, night owl!' },
        { emoji: '📚', msg: 'Cozy up, it\'s story time.' },
        { emoji: '🌌', msg: 'Exploring the digital universe tonight?' }
      ],
      lateNightEarlyBird: [ // 12 AM - 4:59 AM
        { emoji: '🦉', msg: 'Late-night learner or early bird? Welcome!' },
        { emoji: '🌃', msg: 'Still up? The quiet hours are full of ideas.' },
        { emoji: '💡', msg: 'Deep thoughts brewing?' },
        { emoji: '✨', msg: 'Exploring in the still of the night? Cool.' },
        { emoji: '☕', msg: 'Late night session or super early start?' }
      ]
    };

    const currentHour = new Date().getHours();
    let applicableGreetings;

    if (currentHour >= 5 && currentHour < 12) { // 5 AM to 11:59 AM
      applicableGreetings = greetings.morning;
    } else if (currentHour >= 12 && currentHour < 17) { // 12 PM to 4:59 PM
      applicableGreetings = greetings.afternoon;
    } else if (currentHour >= 17 && currentHour < 21) { // 5 PM to 8:59 PM
      applicableGreetings = greetings.evening;
    } else if (currentHour >= 21 && currentHour < 24) { // 9 PM to 11:59 PM
      applicableGreetings = greetings.night;
    } else { // 12 AM to 4:59 AM
      applicableGreetings = greetings.lateNightEarlyBird;
    }

    if (applicableGreetings && applicableGreetings.length > 0) {
      const randomIndex = Math.floor(Math.random() * applicableGreetings.length);
      const selectedGreeting = applicableGreetings[randomIndex];
      
      greetingPlaceholder.innerHTML = `<span class="inline-flex items-center py-1 px-2.5 rounded-full text-xs font-medium bg-indigo-100 text-indigo-700 dark:bg-indigo-700 dark:text-indigo-200 ring-1 ring-inset ring-indigo-700/10 dark:ring-indigo-200/30">
                                         <span class="mr-1.5">${selectedGreeting.emoji}</span>
                                         ${selectedGreeting.msg}
                                       </span>`;
    }
  }
});
//]]>
</script> 
  <!-- Global Toast Container -->
      <div class='fixed bottom-4 right-4 space-y-2 z-[9999] pointer-events-none' id='toast-container-global'>
        <!-- Toasts will be appended here by JS -->
      </div>
  </body>
</html>